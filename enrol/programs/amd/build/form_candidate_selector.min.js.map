{"version":3,"file":"form_candidate_selector.min.js","sources":["../src/form_candidate_selector.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides the required functionality for an autocomplete element to select a user.\n *\n * NOTE: the code was copied from search identity in core and OLMS tenant plugin.\n *\n * @module      enrol_programs/form_candidate_selector\n * @copyright   2022 Petr Skoda\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport {render as renderTemplate} from 'core/templates';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Load the list of users matching the query and render the selector labels for them.\n *\n * @param {String} selector The selector of the auto complete element.\n * @param {String} query The query string.\n * @param {Function} callback A callback function receiving an array of results.\n * @param {Function} failure A function to call in case of failure, receiving the error message.\n */\nexport async function transport(selector, query, callback, failure) {\n\n    // This is a hidden input that holds the programid.\n    const programId = document.querySelector(selector).closest(\"form\").querySelector(\"[name=programid]\").value;\n\n    const request = {\n        methodname: 'enrol_programs_search_candidate',\n        args: {\n            programid: programId,\n            query: query\n        }\n    };\n\n    try {\n        const response = await Ajax.call([request])[0];\n\n        if (response.overflow) {\n            const msg = await getString('toomanyuserstoshow', 'core', '>' + response.maxusersperpage);\n            callback(msg);\n\n        } else {\n            let labels = [];\n            response.list.forEach(user => {\n                labels.push(renderTemplate('core_user/form_user_selector_suggestion', user));\n            });\n            labels = await Promise.all(labels);\n\n            response.list.forEach((user, index) => {\n                user.label = labels[index];\n            });\n\n            callback(response.list);\n        }\n\n    } catch (e) {\n        failure(e);\n    }\n}\n\n/**\n * Process the results for auto complete elements.\n *\n * @param {String} selector The selector of the auto complete element.\n * @param {Array} results An array or results returned by {@see transport()}.\n * @return {Array} New array of the selector options.\n */\nexport function processResults(selector, results) {\n\n    if (!Array.isArray(results)) {\n        return results;\n\n    } else {\n        return results.map(result => ({value: result.id, label: result.label}));\n    }\n}\n"],"names":["selector","query","callback","failure","programId","document","querySelector","closest","value","request","methodname","args","programid","Ajax","call","response","overflow","maxusersperpage","msg","labels","list","forEach","user","push","Promise","all","index","label","results","Array","isArray","map","result","id"],"mappings":"yxBAqCO,iBAAyBA,SAAUC,MAAOC,SAAUC,+JAGjDC,UAAYC,SAASC,cAAcN,UAAUO,QAAQ,QAAQD,cAAc,oBAAoBE,MAE/FC,QAAU,CACZC,WAAY,kCACZC,KAAM,CACFC,UAAWR,UACXH,MAAOA,wCAKYY,cAAKC,KAAK,CAACL,UAAU,eAAtCM,wBAEOC,yDACS,mBAAU,qBAAsB,OAAQ,IAAMD,SAASE,wBAAnEC,kBACNhB,SAASgB,2CAGLC,OAAS,GACbJ,SAASK,KAAKC,SAAQ,SAAAC,MAClBH,OAAOI,MAAK,qBAAe,0CAA2CD,2BAE3DE,QAAQC,IAAIN,gBAA3BA,qBAEAJ,SAASK,KAAKC,SAAQ,SAACC,KAAMI,OACzBJ,KAAKK,MAAQR,OAAOO,UAGxBxB,SAASa,SAASK,4FAItBjB,4MAWuBH,SAAU4B,gBAEhCC,MAAMC,QAAQF,SAIRA,QAAQG,KAAI,SAAAC,cAAW,CAACxB,MAAOwB,OAAOC,GAAIN,MAAOK,OAAOL,UAHxDC"}