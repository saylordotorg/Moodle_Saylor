{"version":3,"sources":["../src/ui_gapfiller.js"],"names":["define","$","GapfillerUi","textareaId","width","height","uiParams","html","textArea","document","getElementById","readOnly","prop","fail","htmlDiv","source","ui_source","alert","attr","replace","reload","prototype","failed","sync","serialisation","empty","getFields","each","name","value","val","push","JSON","stringify","getElement","find","setField","field","markedUpHtml","reEscape","s","c","specials","result","i","length","j","sepLeft","sepRight","splitter","RegExp","bits","split","markUp","tagContents","numbers","input","size","textarea","rows","cols","parseInt","content","values","fields","parse","e","resize","hasFocus","focused","activeElement","destroy","remove","Constructor"],"mappings":"AAoEAA,OAAM,iCAAC,CAAC,QAAD,CAAD,CAAa,SAASC,CAAT,CAAY,CAI3B,QAASC,CAAAA,CAAT,CAAqBC,CAArB,CAAiCC,CAAjC,CAAwCC,CAAxC,CAAgDC,CAAhD,CAA0D,CACtD,GAAIC,CAAAA,CAAJ,CACA,KAAKC,QAAL,CAAgBP,CAAC,CAACQ,QAAQ,CAACC,cAAT,CAAwBP,CAAxB,CAAD,CAAjB,CACA,KAAKQ,QAAL,CAAgB,KAAKH,QAAL,CAAcI,IAAd,CAAmB,UAAnB,CAAhB,CACA,KAAKN,QAAL,CAAgBA,CAAhB,CACA,KAAKO,IAAL,IACA,KAAKC,OAAL,CAAe,IAAf,CACA,KAAKC,MAAL,CAAcT,CAAQ,CAACU,SAAT,EAAsB,aAApC,CACA,GAAoB,aAAhB,QAAKD,MAAL,EAAiD,OAAhB,QAAKA,MAA1C,CAA8D,CAC1DE,KAAK,CAAC,yCAAD,CAAL,CACA,KAAKF,MAAL,CAAc,aACjB,CACD,GAAmB,aAAf,OAAKA,MAAT,CAAkC,CAC9BR,CAAI,CAAG,KAAKC,QAAL,CAAcU,IAAd,CAAmB,kBAAnB,CACV,CAFD,IAEO,CACHX,CAAI,CAAG,KAAKC,QAAL,CAAcU,IAAd,CAAmB,YAAnB,CACV,CACD,KAAKX,IAAL,CAAYA,CAAI,CAACY,OAAL,CAAa,GAAb,CAAkB,MAAlB,CAAZ,CACA,KAAKC,MAAL,EACH,CAEDlB,CAAW,CAACmB,SAAZ,CAAsBC,MAAtB,CAA+B,UAAW,CACtC,MAAO,MAAKT,IACf,CAFD,CAKAX,CAAW,CAACmB,SAAZ,CAAsBE,IAAtB,CAA6B,UAAW,CACpC,GACIC,CAAAA,CAAa,CAAG,EADpB,CAEIC,CAAK,GAFT,CAIA,KAAKC,SAAL,GAAiBC,IAAjB,CAAsB,UAAW,CAC7B,GAAIC,CAAAA,CAAJ,CAAUC,CAAV,CACAD,CAAI,CAAG3B,CAAC,CAAC,IAAD,CAAD,CAAQiB,IAAR,CAAa,MAAb,CAAP,CACA,GAAa,oBAAT,GAAAU,CAAJ,CAAmC,CAC/BX,KAAK,CAAC,2CAAD,CACR,CAFD,IAEO,CACHY,CAAK,CAAG5B,CAAC,CAAC,IAAD,CAAD,CAAQ6B,GAAR,EAAR,CACAN,CAAa,CAACO,IAAd,CAAmBF,CAAnB,EACA,GAAc,EAAV,GAAAA,CAAJ,CAAkB,CACdJ,CAAK,GACR,CACJ,CACJ,CAZD,EAaA,GAAIA,CAAJ,CAAW,CACP,KAAKjB,QAAL,CAAcsB,GAAd,CAAkB,EAAlB,CACH,CAFD,IAEO,CACH,KAAKtB,QAAL,CAAcsB,GAAd,CAAkBE,IAAI,CAACC,SAAL,CAAeT,CAAf,CAAlB,CACH,CACJ,CAvBD,CAyBAtB,CAAW,CAACmB,SAAZ,CAAsBa,UAAtB,CAAmC,UAAW,CAC1C,MAAO,MAAKpB,OACf,CAFD,CAIAZ,CAAW,CAACmB,SAAZ,CAAsBK,SAAtB,CAAkC,UAAW,CACzC,MAAOzB,CAAAA,CAAC,CAAC,KAAKa,OAAN,CAAD,CAAgBqB,IAAhB,CAAqB,wBAArB,CACV,CAFD,CAQAjC,CAAW,CAACmB,SAAZ,CAAsBe,QAAtB,CAAiC,SAASC,CAAT,CAAgBR,CAAhB,CAAuB,CACpD,GAA2B,UAAvB,GAAAQ,CAAK,CAACnB,IAAN,CAAW,MAAX,GAA4D,OAAvB,GAAAmB,CAAK,CAACnB,IAAN,CAAW,MAAX,CAAzC,CAAyE,CACrEmB,CAAK,CAACzB,IAAN,CAAW,SAAX,CAAsByB,CAAK,CAACP,GAAN,KAAgBD,CAAtC,CACH,CAFD,IAEO,CACHQ,CAAK,CAACP,GAAN,CAAUD,CAAV,CACH,CACJ,CAND,CAWA3B,CAAW,CAACmB,SAAZ,CAAsBiB,YAAtB,CAAqC,UAAW,CAG5C,QAASC,CAAAA,CAAT,CAAkBC,CAAlB,CAAqB,CAEjB,OADIC,CAAAA,CACJ,CADOC,CAAQ,CAAG,SAClB,CAD6BC,CAAM,CAAC,EACpC,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,CAAC,CAACK,MAAtB,CAA8BD,CAAC,EAA/B,CAAmC,CAC/BH,CAAC,CAAGD,CAAC,CAACI,CAAD,CAAL,CACA,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,CAAQ,CAACG,MAA7B,CAAqCC,CAAC,EAAtC,CAA0C,CACtC,GAAIL,CAAC,GAAKC,CAAQ,CAACI,CAAD,CAAlB,CAAuB,CACnBL,CAAC,CAAG,KAAOA,CACd,CACJ,CACDE,CAAM,EAAIF,CACb,CACD,MAAOE,CAAAA,CACV,CAED,GAAII,CAAAA,CAAO,CAAGR,CAAQ,CAAC,IAAD,CAAtB,CACIS,CAAQ,CAAGT,CAAQ,CAAC,IAAD,CADvB,CAEIU,CAAQ,CAAG,GAAIC,CAAAA,MAAJ,CAAWH,CAAO,CAAG,gCAAV,CAA6CC,CAAxD,CAFf,CAGIG,CAAI,CAAG,KAAK5C,IAAL,CAAU6C,KAAV,CAAgBH,CAAhB,CAHX,CAIIN,CAAM,CAAG,QAAUQ,CAAI,CAAC,CAAD,CAJ3B,CAKIP,CALJ,CAOA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGO,CAAI,CAACN,MAArB,CAA6BD,CAAC,EAAI,CAAlC,CAAqC,CACjCD,CAAM,EAAI,KAAKU,MAAL,CAAYF,CAAI,CAACP,CAAD,CAAhB,CAAV,CACA,GAAIA,CAAC,CAAG,CAAJ,CAAQO,CAAI,CAACN,MAAjB,CAAyB,CACrBF,CAAM,EAAIQ,CAAI,CAACP,CAAC,CAAG,CAAL,CACjB,CACJ,CAEDD,CAAM,CAAGA,CAAM,CAAG,QAAlB,CACA,MAAOA,CAAAA,CACV,CAjCD,CAuCAzC,CAAW,CAACmB,SAAZ,CAAsBgC,MAAtB,CAA+B,SAASC,CAAT,CAAsB,CACjD,GAAIC,CAAAA,CAAJ,CAAaZ,CAAM,CAAC,EAApB,CAGA,QAASa,CAAAA,CAAT,CAAeC,CAAf,CAAqB,CACjB,MAAO,6EAA0EA,CAA1E,CAAiF,KAC3F,CAGD,QAASC,CAAAA,CAAT,CAAkBC,CAAlB,CAAwBC,CAAxB,CAA8B,CAC1B,MAAO,iFACQD,CADR,cACiCC,CADjC,CACwC,sCAClD,CAEDL,CAAO,CAAGD,CAAW,CAACF,KAAZ,CAAkB,GAAlB,CAAV,CACA,GAAsB,CAAlB,EAAAG,CAAO,CAACV,MAAZ,CAAyB,CACrBF,CAAM,CAAGa,CAAK,CAACK,QAAQ,CAACN,CAAO,CAAC,CAAD,CAAR,CAAT,CACjB,CAFD,IAEO,CACHZ,CAAM,CAAGe,CAAQ,CAACG,QAAQ,CAACN,CAAO,CAAC,CAAD,CAAR,CAAT,CAAuBM,QAAQ,CAACN,CAAO,CAAC,CAAD,CAAR,CAA/B,CACpB,CAED,MAAOZ,CAAAA,CACV,CAtBD,CA+BAzC,CAAW,CAACmB,SAAZ,CAAsBD,MAAtB,CAA+B,UAAW,CACtC,GACI0C,CAAAA,CAAO,CAAG7D,CAAC,CAAC,KAAKO,QAAN,CAAD,CAAiBsB,GAAjB,EADd,CAEID,CAFJ,CAGIkC,CAHJ,CAIInB,CAJJ,CAKIoB,CALJ,CAQA,KAAKlD,OAAL,CAAeb,CAAC,CAAC,2EAAW,KAAKqC,YAAL,EAAX,CAAiC,QAAlC,CAAhB,CACA,GAAIwB,CAAJ,CAAa,CACT,GAAI,CACAC,CAAM,CAAG/B,IAAI,CAACiC,KAAL,CAAWH,CAAX,CAAT,CACAE,CAAM,CAAG,KAAKtC,SAAL,EAAT,CACA,IAAKkB,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGoB,CAAM,CAACnB,MAAvB,CAA+BD,CAAC,EAAhC,CAAoC,CAChCf,CAAK,CAAGe,CAAC,CAAGmB,CAAM,CAAClB,MAAX,CAAoBkB,CAAM,CAACnB,CAAD,CAA1B,CAAgC,KAAxC,CACA,KAAKR,QAAL,CAAcnC,CAAC,CAAC+D,CAAM,CAACpB,CAAD,CAAP,CAAf,CAA4Bf,CAA5B,CACH,CACJ,CAAC,MAAMqC,CAAN,CAAS,CAEV,CACJ,CACJ,CAtBD,CAwBAhE,CAAW,CAACmB,SAAZ,CAAsB8C,MAAtB,CAA+B,UAAW,CAAE,CAA5C,CAEAjE,CAAW,CAACmB,SAAZ,CAAsB+C,QAAtB,CAAiC,UAAW,CACxC,GAAKC,CAAAA,CAAO,GAAZ,CACA,KAAK3C,SAAL,GAAiBC,IAAjB,CAAsB,UAAW,CAC7B,GAAI,OAASlB,QAAQ,CAAC6D,aAAtB,CAAqC,CACjCD,CAAO,GACV,CACJ,CAJD,EAKA,MAAOA,CAAAA,CACV,CARD,CAWAnE,CAAW,CAACmB,SAAZ,CAAsBkD,OAAtB,CAAgC,UAAW,CACvC,KAAKhD,IAAL,GACAtB,CAAC,CAAC,KAAKa,OAAN,CAAD,CAAgB0D,MAAhB,GACA,KAAK1D,OAAL,CAAe,IAClB,CAJD,CAMA,MAAO,CACH2D,WAAW,CAAEvE,CADV,CAGV,CAlMK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more util.details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Implementation of the gapfiller_ui user interface plugin. For overall details\n * of the UI plugin architecture, see userinterfacewrapper.js.\n *\n * This plugin replaces the usual textarea answer box with a div\n * consisting of pre-formatted text supplied by the question author in either the\n * \"globalextra\" field or the testcode field of the first test case, according\n * to the ui parameter ui_source (default: globalextra).  HTML\n * entry or textarea elements are then inserted at\n * specified points. It is intended primarily for use with coding questions\n * where the answerbox presents the students with code that has smallish bits\n * missing.\n *\n * The locations within the globalextra text at which the input elements are\n * to be inserted are denoted by \"tags\" of the form\n *\n *     {[ size ]}\n *\n * for an HTML input element\n *\n * or\n *\n *     {[ rows, columns ]}\n *\n * for a textarea element\n *\n * where size, rows and column are integer literals. These respectively\n * inject an HTML input element or a textarea element of the\n * specified size.\n *\n * The serialisation of the answer box contents, i.e. the text that\n * copied back into the textarea for submissions\n * as the answer, is simply a list of all the field values (strings), in order.\n *\n * As a special case of the serialisation, if the value list is empty, the\n * serialisation itself is the empty string.\n *\n * The delimiters for the input element insertion tags are by default '{[' and\n * ']}', but can be changed by an optional ui parameter gap_filler_delimiters,\n * which must be a 2-element array of strings. For example:\n *\n *     {\"gap_filler_delimiters\": [\"{{\", \"}}\"]}\n *\n * Note that the double-brace delimiters in that example are the same as those\n * used by Twig, so using them instead of the default would prevent you from\n * ever adding Twig expansion (e.g. for randomisation) to the question.\n *\n * @package    qtype\n * @subpackage coderunner\n * @copyright  Richard Lobb, 2019, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n\n    // Constructor for UI. Source html comes from data-globalextra by default,\n    // else from whatever source is specified by the uiParams parameter.\n    function GapfillerUi(textareaId, width, height, uiParams) {\n        var html;\n        this.textArea = $(document.getElementById(textareaId));\n        this.readOnly = this.textArea.prop('readonly');\n        this.uiParams = uiParams;\n        this.fail = false;\n        this.htmlDiv = null;\n        this.source = uiParams.ui_source || 'globalextra';\n        if (this.source !== 'globalextra' && this.source !== 'test0') {\n            alert('Invalid source for HTML in ui_gapfiller');\n            this.source = 'globalextra';\n        }\n        if (this.source == 'globalextra') {\n            html = this.textArea.attr('data-globalextra');\n        } else {\n            html = this.textArea.attr('data-test0');\n        }\n        this.html = html.replace('<', '&lt;');\n        this.reload();\n    }\n\n    GapfillerUi.prototype.failed = function() {\n        return this.fail; // Currently always true. See reload function.\n    };\n\n    // Copy the serialised version of the HTML UI area to the TextArea.\n    GapfillerUi.prototype.sync = function() {\n        var\n            serialisation = [],  // A list of field values.\n            empty = true;\n\n        this.getFields().each(function() {\n            var name, value;\n            name = $(this).attr('name');\n            if (name !== 'cr_gapfiller_field') {\n                alert('Unexpected UI element found in answer box');\n            } else {\n                value = $(this).val();\n                serialisation.push(value);\n                if (value !== \"\") {\n                    empty = false;\n                }\n            }\n        });\n        if (empty) {\n            this.textArea.val('');\n        } else {\n            this.textArea.val(JSON.stringify(serialisation));\n        }\n    };\n\n    GapfillerUi.prototype.getElement = function() {\n        return this.htmlDiv;\n    };\n\n    GapfillerUi.prototype.getFields = function() {\n        return $(this.htmlDiv).find('.coderunner-ui-element');\n    };\n\n    // Set the value of the jQuery field to the given value.\n    // If the field is a radio button or a checkbox,\n    // the checked attribute is set. Otherwise the field's\n    // val() function is called to set the value.\n    GapfillerUi.prototype.setField = function(field, value) {\n        if (field.attr('type') === 'checkbox' || field.attr('type') === 'radio') {\n            field.prop('checked', field.val() === value);\n        } else {\n            field.val(value);\n        }\n    };\n\n    // Process the supplied HTML, HTML-escaping existing HTML\n    // and inserting the input and textarea elements\n    // at the marked locations.\n    GapfillerUi.prototype.markedUpHtml = function() {\n\n        // Prefix any regular expression special chars in s with a backslash.\n        function reEscape(s) {\n            var c, specials = '{[(*+\\\\', result='';\n            for (var i = 0; i < s.length; i++) {\n                c = s[i];\n                for (var j = 0; j < specials.length; j++) {\n                    if (c === specials[j]) {\n                        c = '\\\\' + c;\n                    }\n                }\n                result += c;\n            }\n            return result;\n        }\n\n        var sepLeft = reEscape('{['),\n            sepRight = reEscape(']}'),\n            splitter = new RegExp(sepLeft + ' *((?:\\\\d+)|(?:\\\\d+, *\\\\d+)) *' + sepRight),\n            bits = this.html.split(splitter),\n            result = '<pre>' + bits[0],\n            i;\n\n        for (i = 1; i < bits.length; i += 2) {\n            result += this.markUp(bits[i]);\n            if (i + 1 < bits.length) {\n                result += bits[i + 1];\n            }\n        }\n\n        result = result + '</pre>';\n        return result;\n    };\n\n\n    // Return the HTML element to insert given the tag contents, which\n    // should be either a single integer (size of input element) or\n    // two integers separated by a comma (rows and cols of textarea).\n    GapfillerUi.prototype.markUp = function(tagContents) {\n        var numbers, result='';\n\n        // The function to handle an 'input' tag.\n        function input(size) {\n            return '<input name=\"cr_gapfiller_field\" class=\"coderunner-ui-element\" size=\"' + size + '\">';\n        }\n\n        // The function to handle a 'textarea' tag.\n        function textarea(rows, cols) {\n            return '<textarea name=\"cr_gapfiller_field\" class =\"coderunner-ui-element\" ' +\n                'rows=\"' + rows + '\" ' + 'cols=\"' + cols + '\" style=\"width:auto;\"></textarea>';\n        }\n\n        numbers = tagContents.split(',');\n        if (numbers.length == 1) {\n            result = input(parseInt(numbers[0]));\n        } else {\n            result = textarea(parseInt(numbers[0]), parseInt(numbers[1]));\n        }\n\n        return result;\n    };\n\n    // Reload the HTML fields from the given serialisation.\n    // Unlike other plugins, we don't actually fail the load if, for example\n    // the number of fields doesn't match the number of values in the\n    // serialisation. We simply set any excess fields for which data\n    // in unavailable to '???' or discard extra values. This ensures\n    // that at least the unfilled content is presented to the question author\n    // when the number of fields is altered during editing.\n    GapfillerUi.prototype.reload = function() {\n        var\n            content = $(this.textArea).val(), // JSON-encoded HTML element settings.\n            value,\n            values,\n            i,\n            fields,\n            outerDiv = \"<div style='height:fit-content' class='qtype-coderunner-html-outer-div'>\";\n\n        this.htmlDiv = $(outerDiv + this.markedUpHtml() + \"</div>\");\n        if (content) {\n            try {\n                values = JSON.parse(content);\n                fields = this.getFields();\n                for (i = 0; i < fields.length; i++) {\n                    value = i < values.length ? values[i] : '???';\n                    this.setField($(fields[i]), value);\n                }\n            } catch(e) {\n                // Just ignore errors\n            }\n        }\n    };\n\n    GapfillerUi.prototype.resize = function() {}; // Nothing to see here. Move along please.\n\n    GapfillerUi.prototype.hasFocus = function() {\n        var  focused = false;\n        this.getFields().each(function() {\n            if (this === document.activeElement) {\n                focused = true;\n            }\n        });\n        return focused;\n    };\n\n    // Destroy the GapFiller UI and serialise the result into the original text area.\n    GapfillerUi.prototype.destroy = function() {\n        this.sync();\n        $(this.htmlDiv).remove();\n        this.htmlDiv = null;\n    };\n\n    return {\n        Constructor: GapfillerUi\n    };\n});\n"],"file":"ui_gapfiller.min.js"}