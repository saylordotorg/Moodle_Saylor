{"version":3,"sources":["../src/ui_html.js"],"names":["define","$","HtmlUi","textareaId","width","height","uiParams","textArea","document","getElementById","html","attr","replace","readOnly","prop","fail","htmlDiv","reload","prototype","failed","sync","serialisation","name","empty","getFields","each","value","type","is","val","hasOwnProperty","push","JSON","stringify","getElement","find","setField","field","content","valuesToLoad","values","i","fields","leftOvers","outerDivId","toString","data","parse","filter","length","isEmptyObject","e","alert","resize","hasFocus","focused","activeElement","destroy","remove","Constructor"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more util.details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Implementation of the html_ui user interface plugin. For overall details\n * of the UI plugin architecture, see userinterfacewrapper.js.\n *\n * This plugin replaces the usual textarea answer element with a div\n * containing the author-supplied HTML. The serialisation of that HTML,\n * which is what is essentially copied back into the textarea for submissions\n * as the answer, is a JSON object. The fields of that object are the names\n * of all author-supplied HTML elements with a class 'coderunner-ui-element';\n * all such objects are expected to have a 'name' attribute as well. The\n * associated field values are lists. Each list contains all the values, in\n * document order, of the results of calling the jquery val() method in turn\n * on each of the UI elements with that name.\n * This means that at least input, select and textarea\n * elements are supported. The author is responsible for checking the\n * compatibility of other elements with jquery's val() method.\n *\n * The HTML to use in the answer area must be provided as the contents of\n * the globalextra field in the question authoring form.\n *\n * If any fields of the answer html are to be preloaded, these should be specified\n * in the answer preload with json of the form '{\"<fieldName>\": \"<fieldValueList>\",...}'\n * where fieldValueList is a list of all the values to be assigned to the fields\n * with the given name, in document order.\n *\n * To accommodate the possibility of dynamic HTML, any leftover preload values,\n * that is, values that cannot be positioned within the HTML either because\n * there is no field of the required name or because, in the case of a list,\n * there are insufficient elements, are assigned to the data['leftovers']\n * attribute of the outer html div, as a sub-object of the original object.\n * This outer div can be located as the 'closest' (in a jQuery sense)\n * div.qtype-coderunner-html-outer-div. The author-supplied HTML must include\n * JavaScript to make use of the 'leftovers'.\n *\n * As a special case of the serialisation, if all values in the serialisation\n * are either empty strings or a list of empty strings, the serialisation is\n * itself the empty string.\n *\n * @package    qtype\n * @subpackage coderunner\n * @copyright  Richard Lobb, 2018, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n\n    function HtmlUi(textareaId, width, height, uiParams) {\n        this.textArea = $(document.getElementById(textareaId));\n        this.textareaId = textareaId;\n        this.html = this.textArea.attr('data-globalextra').replace(/___textareaId___/gm, textareaId);\n        this.readOnly = this.textArea.prop('readonly');\n        this.uiParams = uiParams;\n        this.fail = false;\n        this.htmlDiv = null;\n        this.reload();\n    }\n\n    HtmlUi.prototype.failed = function() {\n        return this.fail;\n    };\n\n    // Copy the serialised version of the HTML UI area to the TextArea.\n    HtmlUi.prototype.sync = function() {\n        var\n            serialisation = {},\n            name,\n            empty = true;\n\n        this.getFields().each(function() {\n            var value, type;\n            type = $(this).attr('type');\n            name = $(this).attr('name');\n            if ((type === 'checkbox' || type === 'radio') && !($(this).is(':checked'))) {\n                value = '';\n            } else {\n                value = $(this).val();\n            }\n            if (serialisation.hasOwnProperty(name)) {\n                serialisation[name].push(value);\n            } else {\n                serialisation[name] = [value];\n            }\n            if (value !== '') {\n                empty = false;\n            }\n        });\n        if (empty) {\n            this.textArea.val('');\n        } else {\n            this.textArea.val(JSON.stringify(serialisation));\n        }\n    };\n\n\n    HtmlUi.prototype.getElement = function() {\n        return this.htmlDiv;\n    };\n\n    HtmlUi.prototype.getFields = function() {\n        return $(this.htmlDiv).find('.coderunner-ui-element');\n    };\n\n    // Set the value of the jQuery field to the given value.\n    // If the field is a radio button or a checkbox and its name matches\n    // the given value, the checked attribute is set. Otherwise the field's\n    // val() function is called to set the value.\n    HtmlUi.prototype.setField = function(field, value) {\n        if (field.attr('type') === 'checkbox' || field.attr('type') === 'radio') {\n            field.prop('checked', field.val() === value);\n        } else {\n            field.val(value);\n        }\n    };\n\n    HtmlUi.prototype.reload = function() {\n        var\n            content = $(this.textArea).val(), // JSON-encoded HTML element settings.\n            valuesToLoad,\n            values,\n            i,\n            fields,\n            leftOvers,\n            outerDivId = 'qtype-coderunner-outer-div-' + this.textareaId.toString(),\n            outerDiv = \"<div style='height:fit-content' class='qtype-coderunner-html-outer-div' id='\" + outerDivId + \"'>\";\n\n        this.htmlDiv = $(outerDiv + this.html + \"</div>\");\n        this.htmlDiv.data('uiparams', this.uiParams);       // For use by  scripts embedded in html.\n        this.htmlDiv.data('templateparams', this.uiParams); // Legacy support only. DEPRECATED.\n        if (content) {\n            try {\n                valuesToLoad = JSON.parse(content);\n                leftOvers = {};\n                for (var name in valuesToLoad) {\n                    values = valuesToLoad[name];\n                    fields = this.getFields().filter(\"[name='\" + name + \"']\");\n                    leftOvers[name] = [];\n                    for (i = 0; i < values.length; i++) {\n                        if (i < fields.length) {\n                            this.setField($(fields[i]), values[i]);\n                        } else {\n                            leftOvers[name].push(values[i]);\n                        }\n                    }\n                    if (leftOvers[name].length === 0) {\n                        delete leftOvers[name];\n                    }\n                }\n\n                if (!$.isEmptyObject(leftOvers)) {\n                    this.htmlDiv.data('leftovers', leftOvers);\n                }\n\n            } catch(e) {\n                alert('Failed to initialise HTML UI');\n                this.fail = true;\n            }\n        }\n    };\n\n    HtmlUi.prototype.resize = function() {}; // Nothing to see here. Move along please.\n\n    HtmlUi.prototype.hasFocus = function() {\n        var  focused = false;\n        this.getFields().each(function() {\n            if (this === document.activeElement) {\n                focused = true;\n            }\n        });\n        return focused;\n    };\n\n    // Destroy the HTML UI and serialise the result into the original text area.\n    HtmlUi.prototype.destroy = function() {\n        this.sync();\n        $(this.htmlDiv).remove();\n        this.htmlDiv = null;\n    };\n\n    return {\n        Constructor: HtmlUi\n    };\n});\n"],"file":"ui_html.min.js"}