{"version":3,"sources":["../src/textareas.js"],"names":["define","$","initTextArea","data","on","e","window","hasOwnProperty","behattesting","which","keyCode","shiftKey","insertString","preventDefault","selectionStart","before","value","substring","eol","lastIndexOf","line","indent","i","length","charAt","ctrlKey","altKey","ta","sToInsert","selSave","selectionEnd","after","tmp","scrollTop","pos","document","selection","createRange","r","dr","duplicate","moveToElementText","setEndPoint","text","setupAllTAs","each","initQuestionTA","taId","getElementById"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http:moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http:www.gnu.org/licenses/>.\n */\n\n/**\n * JavaScript for handling textareas and form actions in CodeRunner question\n * editing forms and student question answering forms.\n *\n * @module qtype_coderunner/textareas\n * @copyright  Richard Lobb, 2015, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\ndefine(['jquery'], function($) {\n\n    /**\n     * Function to initialise all code-input text-areas in a page.\n     * Used by the form editor but can't be used for question text areas as\n     * renderer.php is called once for each question in a quiz, and there is\n     * no communication between the questions.\n     */\n    function setupAllTAs() {\n        $('textarea.edit_code').each(initTextArea);\n    }\n\n    /**\n     * Initialise a particular text area (TA), given its ID (which may contain\n     * colons, so can't use jQuery selector).\n     * @param {string} taId The ID of the textarea html element.\n     */\n    function initQuestionTA(taId) {\n        $(document.getElementById(taId)).each(initTextArea);\n    }\n\n    /**\n     * Set up the JavaScript to handle a text area 'this'.\n     * It just does rudimentary autoindent on return and replaces tabs with\n     * 4 spaces always.\n     * For info on key handling browser inconsistencies see\n     * http://unixpapa.com/js/key.html\n     * If the AceEditor is handling a text area, this code is unused as\n     * the actual textarea is hidden by Ace.\n     */\n    function initTextArea() {\n        var TAB = 9,\n            ENTER = 13,\n            ESC = 27,\n            KEY_M = 77;\n\n        $(this).data('clickInProgress', false);\n        $(this).data('capturingTab', true);\n\n        $(this).on('mousedown', function() {\n            /*\n             * Event order seems to be (\\ is where the mouse button is pressed, / released):\n             * Chrome: \\ mousedown, mouseup, focusin / click.\n             * Firefox/IE: \\ mousedown, focusin / mouseup, click.\n             */\n            $(this).data('clickInProgress', true);\n        });\n\n        $(this).on('focusin', function() {\n            /*\n             * At first, pressing TAB moves focus.\n             */\n            $(this).data('capturingTab', $(this).data('clickInProgress'));\n        });\n\n        $(this).on('click', function() {\n            $(this).data('clickInProgress', false);\n        });\n\n        $(this).on('keydown', function(e) {\n            /*\n             * Don't autoindent when behat testing in progress.\n             */\n            if (window.hasOwnProperty('behattesting') && window.behattesting) { return; }\n\n            if (e.which === undefined || e.which !== 0) { // Normal keypress?\n                if (e.keyCode == TAB && $(this).data('capturingTab')) {\n                    /*\n                     * Ignore SHIFT/TAB. Insert 4 spaces on TAB.\n                     */\n                    if (e.shiftKey || insertString(this, \"    \")) {\n                        e.preventDefault();\n                    }\n                }\n                else if (e.keyCode === ENTER && this.selectionStart !== undefined) {\n                    /*\n                     * Handle autoindent only on non-IE.\n                     */\n                    var before = this.value.substring(0, this.selectionStart);\n                    var eol = before.lastIndexOf(\"\\n\");\n                    var line = before.substring(eol + 1);  // Take from eol to end.\n                    var indent = \"\";\n                    for (var i = 0; i < line.length && line.charAt(i) === ' '; i++) {\n                        indent = indent + \" \";\n                    }\n                    if (insertString(this, \"\\n\" + indent)) {\n                        e.preventDefault();\n                    }\n                    /*\n                     * Once the user has started typing, TAB indents.\n                     */\n                    $(this).data('capturingTab', true);\n                }\n                else if (e.keyCode === KEY_M && e.ctrlKey && !e.altKey) {\n                    /*\n                     * CTRL + M toggles TAB capturing mode.\n                     * This is the short-cut recommended by\n                     * https:www.w3.org/TR/wai-aria-practices/#richtext.\n                     */\n                    $(this).data('capturingTab', !$(this).data('capturingTab'));\n                    e.preventDefault(); // Firefox uses this for mute audio in current browser tab.\n                }\n                else if (e.keyCode === ESC) {\n                    /*\n                     * ESC always stops capturing TAB.\n                     */\n                    $(this).data('capturingTab', false);\n                }\n                else if (!(e.ctrlKey || e.altKey)) {\n                    /*\n                     * Once the user has started typing (not modifier keys) TAB indents.\n                     */\n                    $(this).data('capturingTab', true);\n                }\n            }\n        });\n    }\n\n    /**\n     * Insert into the given textarea ta the given string sToInsert.\n     * @param {html_element} ta The textarea to be updated.\n     * @param {string} sToInsert The string to be inserted at the current selection\n     * point.\n     */\n    function insertString(ta, sToInsert) {\n        if (ta.selectionStart !== undefined) {  // Firefox etc.\n            var before = ta.value.substring(0, ta.selectionStart);\n            var selSave = ta.selectionEnd;\n            var after = ta.value.substring(ta.selectionEnd, ta.value.length);\n\n            /**\n             * Update the text field.\n             */\n            var tmp = ta.scrollTop;  // Inhibit annoying auto-scroll.\n            ta.value = before + sToInsert + after;\n            var pos = selSave + sToInsert.length;\n            ta.selectionStart = pos;\n            ta.selectionEnd = pos;\n            ta.scrollTop = tmp;\n            return true;\n\n        }\n        else if (document.selection && document.selection.createRange) { // IE.\n            /*\n             * TODO: check if this still works. OLD CODE.\n             */\n            var r = document.selection.createRange();\n            var dr = r.duplicate();\n            dr.moveToElementText(ta);\n            dr.setEndPoint(\"EndToEnd\", r);\n            r.text = sToInsert;\n            return true;\n        }\n        /*\n         * Other browsers we can't handle.\n         */\n        else {\n            return false;\n        }\n    }\n\n    return {\n        setupAllTAs: setupAllTAs,\n        initQuestionTA: initQuestionTA\n    };\n});\n"],"file":"textareas.min.js"}