{"version":3,"sources":["../src/showdiff.js"],"names":["define","$","lcsLengths","items1","items2","n1","length","n2","lengths","i","j","has_fill","fill","Array","Math","max","lcss","M","n","result","insertDels","tokens","subSeq","startDel","endDel","html","deleting","ssi","elType","elem","tagName","toLowerCase","getTokens","element","isPre","text","innerHTML","seq","nextToken","token","match","substring","replace","push","showDifferences","firstEl","secondEl","seq1","seq2","css","hideDifferences","replPat","processAllRows","tableRows","gotCol","expectedCol","f","row","cells","expected","got","getElementsByTagName","children","buttonId","showValue","hideValue","expectedString","gotString","diffButton","table","thEls","columnCount","closest","find","each","on","prop","toArray","enabled","hide"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This AMD module provides the functionality for the \"Show differences\"\n * button that is shown in the student's result page if their answer\n * isn't right and an \"exact-match\" (or near equivalent) grader is being used.\n *\n * @package    qtype\n * @subpackage coderunner\n * @copyright  Richard Lobb, 2016, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\ndefine(['jquery'], function($) {\n\n    var NLCHAR = '\\u21A9';  // Unicode \"leftwards arrow with hook\" to show newlines.\n\n    function lcsLengths(items1, items2) {\n        /* Given two lists of items, items1 and item2, return the length matrix\n           M defined as M[i][j] = max subsequence length of the two item lists\n           items1[0:i], items2[0:j]\n         */\n        var n1 = items1.length,\n            n2 = items2.length,\n            lengths, i, j,\n            has_fill = typeof [1].fill === 'function';\n\n        lengths = [];\n\n        for (i = 0; i <= n1; i += 1) {\n            lengths[i] = new Array(n2 + 1);\n            if (has_fill) {\n                   lengths[i].fill(0);\n            } else {\n                // Bloody IE.\n                for (j = 0; j < n2 + 1; j++) {\n                    lengths[i][j] = 0;\n                }\n            }\n        }\n        for (i = 0; i < n1; i += 1) {\n            for (j = 0; j < n2; j += 1) {\n                if (items1[i] == items2[j]) {\n                    lengths[i + 1][j + 1] = 1 + lengths[i][j];\n                } else {\n                    lengths[i + 1][j + 1] = Math.max(lengths[i][j + 1], lengths[i + 1][j]);\n                }\n            }\n        }\n        return lengths;\n    }\n\n    function lcss(items1, items2) {\n        /* Return the longest common subsequence of the two item lists */\n        var M, i, j, n, result, length;\n        M = lcsLengths(items1, items2);\n        length = M[items1.length][items2.length];\n        result = [];\n        i = items1.length;\n        j = items2.length;\n        n = length - 1;\n        while (n >= 0) {\n            if (items1[i - 1] == items2[j - 1]) {\n                result[n] = items1[i - 1];\n                n -= 1;\n                i -= 1;\n                j -= 1;\n            } else if (M[i - 1][j] == M[i][j]) {\n                i -= 1;\n            } else {\n                j -= 1;\n            }\n        }\n        return result;\n    }\n\n    /* Process the given token list and a subsequence of it, concatenating\n     * tokens and wrapping all items not in the subsequence with\n     * del tags (or whatever strings are specified by startDel, endDel).\n     * Return (what is assumed to be) the html of all the joined tokens.\n     */\n    function insertDels(tokens, subSeq, startDel, endDel) {\n        var html = \"\",\n            deleting = false,\n            i,\n            ssi = 0;\n        if (startDel === undefined) {\n            startDel = '<del>';\n        }\n        if (endDel === undefined) {\n            endDel = '</del>';\n        }\n        for (i = 0; i < tokens.length; i += 1) {\n            if (ssi < subSeq.length && tokens[i] == subSeq[ssi]) {\n                if (deleting) {\n                    html += endDel;\n                    deleting = false;\n                }\n                ssi += 1;\n            } else {\n                if (!deleting) {\n                    html += startDel;\n                    deleting = true;\n                }\n            }\n\n            html += tokens[i];\n        }\n        if (deleting) {\n            html += endDel;\n        }\n        return html;\n    }\n\n    /* Return the HTML element type (i.e. its tag name) in lower case */\n    function elType(elem) {\n        return elem.tagName.toLowerCase();\n    }\n\n    /* Return the sequence of tokens from the given HTML element.\n     * A token is either a single character or an HTML entity (&.*;)\n     * Extra 'leftward-arrow-with-hook' characters (\\u21A9) are added\n     * at the ends of lines.\n     */\n    function getTokens(element) {\n        var isPre = elType(element) === 'pre',\n            text = element.innerHTML,\n            seq,\n            i = 0;\n\n        function nextToken() {\n            // Extract and return the next token start at text[i]. Update i.\n            // Precondition: i < text.length.\n            var token, match;\n            if (text[i] != '&') {\n                token = text[i];\n                i = i + 1;\n            } else {\n                match = text.substring(i, text.length).match(/(^&[a-zA-Z]+;)|(^&#[0-9]+;)|(^&#[xX][0-9a-fA-F]+;)/);\n                if (match === null) {\n                    token = text[i];\n                    i = i + 1;\n                } else {\n                    token = match[0];\n                    i = i + token.length;\n                }\n            }\n            return token;\n        }\n\n        if (isPre) {\n            text = text.replace(/\\n/g, NLCHAR + '\\n');\n        }\n        text = text.replace(/(<br ?.*?>)/g, NLCHAR + '$1');\n        seq = [];\n        i = 0;\n        while (i < text.length) {\n            seq.push(nextToken());\n        }\n\n        return seq;\n    }\n\n    /* Given (references to) two HTML elements, extract the innerHTML\n     * of both, find the longest common subsequence of chars and wrap text not\n     * in that subsequence in del elements.\n     * <br> elements within the innerHTML are preceded by a\n     * Unicode \"leftwards arrow with hook\" ('\\u21A9') so that line break changes\n     * can be highlighted.\n     */\n    function showDifferences(firstEl, secondEl) {\n        var openDelTag = '<del>',\n            closeDelTag = '</del>',\n            seq1,\n            seq2,\n            css;\n\n        seq1 = getTokens(firstEl);\n        seq2 = getTokens(secondEl);\n        css = lcss(seq1, seq2);\n        firstEl.innerHTML = insertDels(seq1, css, openDelTag, closeDelTag);\n        secondEl.innerHTML = insertDels(seq2, css, openDelTag, closeDelTag);\n    }\n\n    /* Given (references to) two DOM elements, delete all <del ...> and </del>\n     * tags from the innerHTML of both. Also remove the \"leftwards arrows with\n     * hooks\".\n     */\n    function hideDifferences(firstEl, secondEl) {\n        var replPat = new RegExp('(</?del[^>]*>)|(' + NLCHAR + ')', 'g');\n        firstEl.innerHTML = firstEl.innerHTML.replace(replPat, '');\n        secondEl.innerHTML = secondEl.innerHTML.replace(replPat, '');\n    }\n\n    /************************************************************************\n     *\n     * Now the API for applying diffs to rows in a CodeRunner\n     * results table. Defines a class with methods initDiffButton and\n     * processAllRows.\n     *\n     *************************************************************************/\n\n    function processAllRows(tableRows, gotCol, expectedCol, f) {\n        var row,\n            cells,\n            expected,\n            got;\n\n        for (var i = 0; i < tableRows.length; i++) {\n            row = tableRows[i];\n            cells = row.getElementsByTagName('td');\n            expected = cells[expectedCol].children[0];\n            got = cells[gotCol].children[0];\n            f(expected, got);\n        }\n    }\n\n    /**\n     * Initialise the Show Differences button.\n     * @param string buttonId The ID of the Show Differences button\n     * @param string showValue the text in the button initially\n     * @param string hideValue the text in the button when differences are showing\n     * @returns undefined\n     */\n    function initDiffButton(buttonId, showValue, hideValue, expectedString, gotString) {\n        var diffButton = $('[id=\"' + buttonId + '\"]'),\n            table,\n            tableRows,\n            thEls,\n            columnCount=0,\n            gotCol=-1,\n            expectedCol=-1;\n\n        table = diffButton.closest('div.coderunner-test-results');\n        thEls = table.find('thead tr').children();\n        tableRows = table.find('tbody tr');\n\n        // Find 'Expected' and 'Got' columns.\n        thEls.each(function() {\n            if ($(this).html() === gotString) {\n                gotCol = columnCount;\n            } else if ($(this).html() === expectedString) {\n                expectedCol = columnCount;\n            }\n            columnCount += 1;\n        });\n\n        if (gotCol !== -1 && expectedCol !== -1) {\n            diffButton.on(\"click\", function() {\n                if (diffButton.prop('value') === showValue) {\n                    processAllRows(tableRows.toArray(), gotCol, expectedCol, showDifferences);\n                    diffButton.prop('value', hideValue);\n                } else {\n                    processAllRows(tableRows.toArray(), gotCol, expectedCol, hideDifferences);\n                    diffButton.prop('value', showValue);\n                }\n            });\n        } else {\n            diffButton.enabled = false;\n            diffButton.hide();\n        }\n    }\n\n    return { \"initDiffButton\": initDiffButton };\n});\n"],"file":"showdiff.min.js"}