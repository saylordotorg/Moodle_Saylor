{"version":3,"sources":["../src/authorform.js"],"names":["define","$","ui","str","JSON_TO_FORM_MAP","template","iscombinatortemplate","value","cputimelimitsecs","memlimitmb","sandbox","sandboxparams","testsplitterre","splitter","replace","allowmultiplestdins","grader","resultcolumns","language","acelang","uiplugin","initEditForm","typeCombo","evaluatePerStudent","globalextra","prototypeextra","useace","customise","isCombinator","testSplitterRe","allowMultipleStdins","customisationFieldSet","advancedCustomisation","isCustomised","prop","prototypeType","preloadHdr","typeName","courseId","questiontypeHelpDiv","precheck","testtypedivs","brokenQuestion","uiparameters","setUi","taId","uiname","ta","document","getElementById","lang","currentLang","attr","paramsJson","params","uiWrapper","val","JSON","parse","err","toLowerCase","preferredAceLang","data","InterfaceWrapper","loadUi","setUis","enableUi","trim","uiparams","enable_in_editor","error","alert","setCustomisationVisibility","isVisible","display","css","enableAceInCustomisedFields","stateOn","taIds","i","length","restart","stop","enableTemplateSupportFields","isCombinatorEnabled","copyFieldsFromQuestionType","newType","response","formspecifier","attrval","filter","key","get_string","then","s","html","detailsHtml","questiontext","reportError","questionType","langStringAlert","errorMessage","title","coderunner_descr","resultHtml","extra","message","langs","indexOf","split","endsWith","substr","loadCustomisationFields","children","text","getJSON","M","cfg","wwwroot","qtype","courseid","sesskey","outcome","success","fail","UiParameterDescriptionTable","uiParamInfo","hdrs","columnheaders","param","uiparamstable","loadUiParametersDescription","newUi","uiInfo","currentuiparameters","paramDescriptionDiv","showhidebutton","showdetails","table","empty","append","header","hide","click","show","hidedetails","set_testtype_visibilities","check_ace_lang","check_template_lang","brokenQuestionMessage","messagePara","on","window","confirm","isTurningOn","is","observer","MutationObserver","observe","get","gotPre","prev","testCaseId","addClass"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for handling UI actions in the question authoring form.\n *\n * @module qtype_coderunner/authorform\n * @copyright  Richard Lobb, 2015, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'qtype_coderunner/userinterfacewrapper', 'core/str'], function($, ui, str) {\n\n    // Define a mapping from the fields of the JSON object returned by an AJAX\n    // 'get question type' request to the form elements. Only fields that\n    // belong to the question type should appear here. Keys are JSON field\n    // names, values are a 3- or 4-element array of: a jQuery form element selector;\n    // the element property to be set; a default value if the JSON field is\n    // empty and an optional filter function to apply to the field value before\n    // setting the property with it.\n    var BEHAT_TESTING = false;  // Suppress alerts (necessary until UnexpectedAlertOpens can be caught).\n    var JSON_TO_FORM_MAP = {\n        template:            ['#id_template', 'value', ''],\n        iscombinatortemplate:['#id_iscombinatortemplate', 'checked', '',\n                                function (value) {\n                                    return value === '1' ? true : false;\n                                }],  // Need nice clean boolean for 'checked' attribute.\n        cputimelimitsecs:    ['#id_cputimelimitsecs', 'value', ''],\n        memlimitmb:          ['#id_memlimitmb', 'value', ''],\n        sandbox:             ['#id_sandbox', 'value', 'DEFAULT'],\n        sandboxparams:       ['#id_sandboxparams', 'value', ''],\n        testsplitterre:      ['#id_testsplitterre', 'value', '',\n                                function (splitter) {\n                                    return splitter.replace('\\n', '\\\\n');\n                                }],\n        allowmultiplestdins: ['#id_allowmultiplestdins', 'checked', '',\n                                function (value) {\n                                    return value === '1' ? true : false;\n                                }],\n        grader:              ['#id_grader', 'value', 'EqualityGrader'],\n        resultcolumns:       ['#id_resultcolumns', 'value', ''],\n        language:            ['#id_language', 'value', ''],\n        acelang:             ['#id_acelang', 'value', ''],\n        uiplugin:            ['#id_uiplugin', 'value', 'ace']\n    };\n\n    /**\n     * Set up the author edit form UI plugins and event handlers.\n     * The template parameters and Ace language are passed to each\n     * text area from PHP by setting its data-params and\n     * data-lang attributes.\n     */\n    function initEditForm() {\n        var typeCombo = $('#id_coderunnertype'),\n            template = $('#id_template'),\n            evaluatePerStudent = $('#id_templateparamsevalpertry'),\n            globalextra = $('#id_globalextra'),\n            prototypeextra = $('#id_prototypeextra'),\n            useace = $('#id_useace'),\n            language = $('#id_language'),\n            acelang = $('#id_acelang'),\n            customise = $('#id_customise'),\n            isCombinator = $('#id_iscombinatortemplate'),\n            testSplitterRe = $('#id_testsplitterre'),\n            allowMultipleStdins = $('#id_allowmultiplestdins'),\n            customisationFieldSet = $('#id_customisationheader'),\n            advancedCustomisation = $('#id_advancedcustomisationheader'),\n            isCustomised = customise.prop('checked'),\n            prototypeType = $('#id_prototypetype'),\n            preloadHdr = $('#id_answerpreloadhdr'),\n            typeName = $('#id_typename'),\n            courseId = $('input[name=\"courseid\"]').prop('value'),\n            questiontypeHelpDiv = $('#qtype-help'),\n            precheck = $('select#id_precheck'),\n            testtypedivs = $('div.testtype'),\n            brokenQuestion = $('#id_broken_question'),\n            uiplugin = $('#id_uiplugin'),\n            uiparameters = $('#id_uiparameters');\n\n        /**\n         * Set up the UI controller for a given textarea (one of template,\n         * answer or answerpreload).\n         * We don't attempt to process changes in template parameters,\n         * as these need to be merged with those of the prototype. But we do handle\n         * changes in the language.\n         * @param {string} taId The ID of the textarea element.\n         * @param {string} uiname The name of the UI controller (may be empty or none).\n         */\n        function setUi(taId, uiname) {\n            var ta = $(document.getElementById(taId)),  // The jquery text area element(s).\n                lang,\n                currentLang = ta.attr('data-lang'),     // Language set by PHP.\n                paramsJson = ta.attr('data-params'),    // Ui params set by PHP.\n                params = {},\n                uiWrapper;\n\n            // Set data attributes in the text area for UI components that need\n            // global extra or testcase data (e.g. gapfiller UI).\n            ta.attr('data-prototypeextra', prototypeextra.val());\n            ta.attr('data-globalextra', globalextra.val());\n            ta.attr('data-test0', $('#id_testcode_0').val());\n            try {\n                params = JSON.parse(paramsJson);\n            } catch(err) {}\n            uiname = uiname.toLowerCase();\n            if (uiname === 'none') {\n                uiname = '';\n            }\n\n            if (taId == 'id_templateparams' || taId == 'id_uiparameters') {\n                lang = ''; // These fields may be twigged, so can't be parsed by Ace.\n            } else {\n                lang = language.prop('value');\n                if (taId !== \"id_template\" && acelang.prop('value')) {\n                    lang = preferredAceLang(acelang.prop('value'));\n                }\n            }\n\n            uiWrapper = ta.data('current-ui-wrapper'); // Currently-active UI wrapper on this ta.\n\n            if (uiWrapper && uiWrapper.uiname === uiname && currentLang == lang) {\n                return; // We already have what we want - give up.\n            }\n\n            ta.attr('data-lang', lang);\n\n            if (!uiWrapper) {\n                uiWrapper = new ui.InterfaceWrapper(uiname, taId);\n            } else {\n                // Wrapper has already been set up - just reload the reqd UI.\n                params.lang = lang;\n                uiWrapper.loadUi(uiname, params);\n            }\n\n        }\n\n        /**\n         * Set the correct Ui controller on both the sample answer and the answer preload.\n         * As a special case, we don't turn on the Ui controller in the answer\n         * and answer preload fields when using Html-Ui and the ui-parameter\n         * enable_in_editor is false.\n         */\n        function setUis() {\n            var uiname = uiplugin.val();\n            var enableUi = true;\n            if (uiname === 'html' && uiparameters.val().trim() !== '') {\n                try {\n                    var uiparams = JSON.parse(uiparameters.val());\n                    if (uiparams.enable_in_editor === false) {\n                        enableUi = false;\n                    }\n                } catch (error) {\n                    alert(\"Invalid UI parameters.\");\n                }\n            }\n            if (enableUi) {\n                setUi('id_answer', uiname);\n                setUi('id_answerpreload', uiname);\n            }\n        }\n\n        /**\n         * Display or Hide all customisation parts of the form.\n         * @param {bool} isVisible True to show, false to hide.\n         */\n        function setCustomisationVisibility(isVisible) {\n            var display = isVisible ? 'block' : 'none';\n            customisationFieldSet.css('display', display);\n            advancedCustomisation.css('display', display);\n            if (isVisible && useace.prop('checked')) {\n                setUi('id_template', 'ace');\n            }\n        }\n\n\n        /**\n         * Turn on or off the Ace editor in the template and uiparameters fields\n         * so we can reload the textareas with JavaScript.\n         * Ignore if UseAce is unchecked.\n         * @param {bool} stateOn True to stop Ace, false to restart it.\n         */\n        function enableAceInCustomisedFields(stateOn) {\n            var taIds = ['id_template', 'id_uiparameters'];\n            var uiWrapper, ta;\n            if (useace.prop('checked')) {\n                for(var i = 0; i < taIds.length; i++) {\n                    ta = $(document.getElementById(taIds[i]));\n                    uiWrapper = ta.data('current-ui-wrapper');\n                    if (uiWrapper && stateOn) {\n                        uiWrapper.restart();\n                    } else if (uiWrapper && !stateOn) {\n                        uiWrapper.stop();\n                    }\n                }\n            }\n        }\n\n\n        /**\n         * After loading the form with new question type data we have to\n         * enable or disable both the testsplitterre and the allow multiple\n         * stdins field. These are subsequently enabled/disabled via event handlers\n         * set up by code in edit_coderunner_form.php (q.v.) but those event\n         * handlers do not handle the freshly downloaded state.\n         */\n        function enableTemplateSupportFields() {\n            var isCombinatorEnabled = isCombinator.prop('checked');\n\n            testSplitterRe.prop('disabled', !isCombinatorEnabled);\n            allowMultipleStdins.prop('disabled', !isCombinatorEnabled);\n        }\n\n        /**\n         * Copy fields from the AJAX \"get question type\" response into the form.\n         * @param {string} newType the newly selected question type.\n         * @param {object} response The AJAX resopnse.\n         */\n        function copyFieldsFromQuestionType(newType, response) {\n            var formspecifier, attrval, filter;\n\n            enableAceInCustomisedFields(false);\n            for (var key in JSON_TO_FORM_MAP) {\n                formspecifier = JSON_TO_FORM_MAP[key];\n                attrval = response[key] ? response[key] : formspecifier[2];\n                if (formspecifier.length > 3) {\n                    filter = formspecifier[3];\n                    attrval = filter(attrval);\n                }\n                $(formspecifier[0]).prop(formspecifier[1], attrval);\n            }\n\n            typeName.prop('value', newType);\n            customise.prop('checked', false);\n            str.get_string('coderunner_question_type', 'qtype_coderunner').then(function (s) {\n                questiontypeHelpDiv.html(detailsHtml(newType, s, response.questiontext));\n            });\n\n            setCustomisationVisibility(false);\n            enableTemplateSupportFields();\n        }\n\n        /**\n         * A JSON request for a question type returned a 'failure' response - probably a\n         * missing question type. Report the error with an alert, and replace\n         * the template contents with an error message in case the user\n         * saves the question and later wonders why it breaks.\n         * @param {string} questionType The CodeRunner (sub) question type.\n         * @param {string} error The error message to be reported.\n         */\n        function reportError(questionType, error) {\n            langStringAlert('prototype_load_failure', error);\n            str.get_string('prototype_error', 'qtype_coderunner').then(function(s) {\n                var errorMessage = s + \"\\n\";\n                errorMessage += error + '\\n';\n                errorMessage += \"CourseId: \" + courseId + \", qtype: \" + questionType;\n                template.prop('value', errorMessage);\n            });\n        }\n\n        /**\n         * Local function to return the HTML to display in the\n         * question type details section of the form.\n         * @param {string} title The type of the question being described.\n         * @param {string} coderunner_descr The language string to introduce\n         * the detail.\n         * @param {html} html The HTML description of the question type, namely\n         * the question text from its prototype.\n         * @return {html} The composite HTML describing the question type.\n         */\n        function detailsHtml(title, coderunner_descr, html) {\n\n            var resultHtml = '<p class=\"question-type-details-header\">';\n            resultHtml += coderunner_descr;\n            resultHtml += title + '</p>\\n' + html;\n            return resultHtml;\n\n        }\n\n        /**\n         * Raise an alert with the given language string and possible additional\n         * extra text.\n         * @param {string} key The language string to put in the Alert.\n         * @param {string} extra Extra text to append.\n         */\n        function langStringAlert(key, extra) {\n            if (BEHAT_TESTING) {\n                return;\n            }\n            str.get_string(key, 'qtype_coderunner').then(function(s) {\n                var message = s.replace(/\\n/g, \" \");\n                if (extra) {\n                    message += '\\n' + extra;\n                }\n                alert(message);\n            });\n        }\n\n        /**\n         * Get the \"preferred language\" from the AceLang string supplied.\n         * @param {string} acelang The AceLang string.\n         * For multilanguage questions, this is either the default (i.e.,\n         * the language with a '*' suffix), or the first language. Otherwise\n         * it is simply the entire AceLang string.\n         * @return {string} The language to pass to Ace for syntax highlighting.\n         */\n        function preferredAceLang(acelang) {\n            var langs, i;\n            if (acelang.indexOf(',') < 0) {\n                return acelang;\n            } else {\n                langs = acelang.split(',');\n                for (i = 0; i < langs.length; i++) {\n                    if (langs[i].endsWith('*')) {\n                        return langs[i].substr(0, langs[i].length - 1);\n                    }\n                }\n                return langs.length > 0 ? langs[0] : '';\n            }\n        }\n\n        /**\n         * Load the various customisation fields into the form from the\n         * CodeRunner question type currently selected by the combobox.\n         */\n        function loadCustomisationFields() {\n            var newType = typeCombo.children('option:selected').text();\n\n            if (newType !== '' && newType !== 'Undefined') {\n                // Prevent 'Undefined' ever being reselected.\n                typeCombo.children('option:first-child').prop('disabled', 'disabled');\n\n                // Load question type with ajax.\n                $.getJSON(M.cfg.wwwroot + '/question/type/coderunner/ajax.php',\n                    {\n                        qtype: newType,\n                        courseid: courseId,\n                        sesskey: M.cfg.sesskey\n                    },\n                    function (outcome) {\n                        if (outcome.success) {\n                            copyFieldsFromQuestionType(newType, outcome);\n                            setUis();\n                        }\n                        else {\n                            reportError(newType, outcome.error);\n                        }\n\n                    }\n                ).fail(function () {\n                    // AJAX failed. We're dead, Fred. The attempt to get the\n                    // language translation for the error message will likely\n                    // fail too, so use English for a start.\n                    langStringAlert('error_loading_prototype');\n                    template.prop('value', '*** AJAX ERROR. DON\\'T SAVE THIS! ***');\n                    str.get_string('ajax_error', 'qtype_coderunner').then(function(s) {\n                        template.prop('value', s);  // Translates into current language (if it works).\n                    });\n                });\n            }\n        }\n\n        /**\n         * Build an HTML table describing all the UI parameters.\n         * @param {object} uiParamInfo The object describing the parameters\n         * for a particular UI.\n         * @return {string} An HTML table describing each UI parameter.\n         */\n        function UiParameterDescriptionTable(uiParamInfo) {\n            var html = '<div class=\"uiparamtablediv\"><table class=\"uiparamtable\">\\n',\n                hdrs = uiParamInfo.columnheaders, param, i;\n            html += \"<tr><th>\" + hdrs[0] + \"</th><th>\" + hdrs[1] + \"</th><th>\" + hdrs[2] + \"</th></tr>\\n\";\n            for (i = 0; i < uiParamInfo.uiparamstable.length; i++) {\n                param = uiParamInfo.uiparamstable[i];\n                html += \"<tr><td>\" + param[0] + \"</td><td>\" + param[1] + \"</td><td>\" + param[2] + \"</td></tr>\\n\";\n            }\n            html += \"</table></div>\\n\";\n            return html;\n        }\n\n        /**\n         * Load the UI parameter description field by Ajax when the UI plugin\n         * is changed.\n         */\n        function loadUiParametersDescription() {\n            var newUi = uiplugin.children('option:selected').text();\n            $.getJSON(M.cfg.wwwroot + '/question/type/coderunner/ajax.php',\n                {\n                    uiplugin: newUi,\n                    courseid: courseId,\n                    sesskey: M.cfg.sesskey\n                },\n                function (uiInfo) {\n                    var currentuiparameters = uiparameters.val(),\n                        paramDescriptionDiv = $('.ui_parameters_descr'),\n                        showhidebutton = $('<button type=\"button\" class=\"toggleuidetails\">' + uiInfo.showdetails + '</button>'),\n                        table;\n                    paramDescriptionDiv.empty();\n                    paramDescriptionDiv.append(uiInfo.header);\n                    if (uiInfo.uiparamstable.length == 0 && currentuiparameters.trim() === '') {\n                        uiparameters.val(''); // Remove stray white space.\n                        $('#fgroup_id_uiparametergroup').hide();\n                    } else {\n                        if (uiInfo.uiparamstable.length != 0) {\n                            paramDescriptionDiv.append(showhidebutton);\n                            table = $(UiParameterDescriptionTable(uiInfo));\n                            paramDescriptionDiv.append(table);\n                            table.hide();\n                            showhidebutton.click(function () {\n                                if (showhidebutton.html() == uiInfo.showdetails) {\n                                    table.show();\n                                    showhidebutton.html(uiInfo.hidedetails);\n                                } else {\n                                    table.hide();\n                                    showhidebutton.html(uiInfo.showdetails);\n                                }\n                            });\n                        }\n                        $('#fgroup_id_uiparametergroup').show();\n                        if (useace.prop('checked')) {\n                            setUi('id_uiparameters', 'ace');\n                        }\n                    }\n                }\n            ).fail(function () {\n                // AJAX failed.\n                langStringAlert('error_loading_ui_descr');\n            });\n        }\n\n        /**\n         * Show/hide all testtype divs in the testcases according to the\n         * 'Precheck' selector.\n         */\n        function set_testtype_visibilities() {\n            if (precheck.val() === '3') { // Show only for case of 'Selected'.\n                testtypedivs.show();\n            } else {\n                testtypedivs.hide();\n            }\n        }\n\n        /**\n         * Check that the Ace language is correctly set for the answer and\n         * answer preload fields.\n         */\n        function check_ace_lang() {\n            if (uiplugin.val() === 'ace'){\n                setUis();\n            }\n        }\n\n        /**\n         * Check that the Ace language is correctly set for the template,\n         * if template_uses_ace is checked.\n         */\n        function check_template_lang() {\n            if (useace.prop('checked')) {\n                setUi('id_template', 'ace');\n            }\n        }\n\n        /**\n         * If the brokenquestionmessage hidden element is not empty, insert the\n         * given message as an error at the top of the question.\n         */\n        function checkForBrokenQuestion() {\n            var brokenQuestionMessage = brokenQuestion.prop('value'),\n                messagePara = null;\n            if (brokenQuestionMessage !== '') {\n                messagePara = $('<p>' + brokenQuestion.prop('value') + '</p>');\n                $('#id_qtype_coderunner_error_div').append(messagePara);\n            }\n        }\n\n        /*************************************************************\n         *\n         * Body of initEditFormWhenReady starts here.\n         *\n         *************************************************************/\n\n        if (prototypeType.prop('value') == 1) {\n            // Editing a built-in question type: Dangerous!\n            str.get_string('proceed_at_own_risk', 'qtype_coderunner').then(function(s) {\n                alert(s);\n            });\n            prototypeType.prop('disabled', true);\n            typeCombo.prop('disabled', true);\n            customise.prop('disabled', true);\n        }\n\n        checkForBrokenQuestion();\n\n        setCustomisationVisibility(isCustomised);\n        if (!isCustomised) {\n            // Not customised so have to load fields from prototype.\n            loadCustomisationFields();  // setUis is called when this completes.\n        } else {\n            setUis();  // Set up UI controllers on answer and answerpreload.\n            str.get_string('info_unavailable', 'qtype_coderunner').then(function(s) {\n                questiontypeHelpDiv.html(\"<p>\" + s + \"</p>\");\n            });\n        }\n\n        set_testtype_visibilities();\n\n        if (useace.prop('checked')) {\n            setUi('id_templateparams', 'ace');\n            setUi('id_uiparameters', 'ace');\n        }\n\n        loadUiParametersDescription();\n\n        // Set up event Handlers.\n\n        customise.on('change', function() {\n            var isCustomised = customise.prop('checked');\n            if (isCustomised) {\n                // Customisation is being turned on.\n                setCustomisationVisibility(true);\n            } else { // Customisation being turned off.\n                str.get_string('confirm_proceed', 'qtype_coderunner').then(function(s) {\n                    if (window.confirm(s)) {\n                        setCustomisationVisibility(false);\n                    } else {\n                        customise.prop('checked', true);\n                    }\n                });\n            }\n        });\n\n        acelang.on('change', check_ace_lang);\n        language.on('change', function() {\n            check_template_lang();\n            check_ace_lang();\n        });\n\n        typeCombo.on('change', function() {\n            if (customise.prop('checked')) {\n                // Author has customised the question. Ask if they want to reload inherited stuff.\n                str.get_string('question_type_changed', 'qtype_coderunner').then(function (s) {\n                    if (window.confirm(s)) {\n                        loadCustomisationFields();\n                    }\n                });\n            } else {\n                loadCustomisationFields();\n            }\n        });\n\n        useace.on('change', function() {\n            var isTurningOn = useace.prop('checked');\n            if (isTurningOn) {\n                setUi('id_template', 'ace');\n                setUi('id_templateparams', 'ace');\n                setUi('id_uiparameters', 'ace');\n            } else {\n                setUi('id_template', '');\n                setUi('id_templateparams', '');\n                setUi('id_uiparameters', '');\n            }\n        });\n\n        evaluatePerStudent.on('change', function() {\n            if (evaluatePerStudent.is(':checked')) {\n                langStringAlert('templateparamsusingsandbox');\n            }\n        });\n\n        uiplugin.on('change', function () {\n            setUis();\n            loadUiParametersDescription();\n        });\n\n        precheck.on('change', set_testtype_visibilities);\n\n        // In order to initialise the Ui plugin when the answer preload section is\n        // expanded, we monitor attribute mutations in the Answer Preload\n        // header.\n        var observer = new MutationObserver( function () {\n            setUis();\n        });\n        observer.observe(preloadHdr.get(0), {'attributes': true});\n\n        // Setup click handler for the buttons that allow users to replace the\n        // expected output  with the output got from testing the answer program.\n        $('button.replaceexpectedwithgot').click(function() {\n            var gotPre = $(this).prev('pre[id^=\"id_got_\"]');\n            var testCaseId = gotPre.attr('id').replace('id_got_', '');\n            $('#id_expected_' + testCaseId).val(gotPre.text());\n            $('#id_fail_expected_' + testCaseId).html(gotPre.text());\n            $('.failrow_' + testCaseId).addClass('fixed');  // Fixed row.\n            $(this).prop('disabled', true);\n        });\n    }\n\n    return {initEditForm: initEditForm};\n});"],"file":"authorform.min.js"}