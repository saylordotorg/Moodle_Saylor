{"version":3,"sources":["../src/authorform.js"],"names":["define","$","ui","str","JSON_TO_FORM_MAP","template","iscombinatortemplate","value","cputimelimitsecs","memlimitmb","sandbox","sandboxparams","testsplitterre","splitter","replace","allowmultiplestdins","grader","resultcolumns","language","acelang","uiplugin","initEditForm","typeCombo","evaluatePerStudent","globalextra","useace","customise","isCombinator","testSplitterRe","allowMultipleStdins","customisationFieldSet","advancedCustomisation","isCustomised","prop","prototypeType","preloadHdr","typeName","courseId","questiontypeHelpDiv","precheck","testtypedivs","brokenQuestion","uiparameters","setUi","taId","uiname","ta","document","getElementById","lang","currentLang","attr","paramsJson","params","uiWrapper","val","JSON","parse","err","toLowerCase","preferredAceLang","data","InterfaceWrapper","loadUi","setUis","setCustomisationVisibility","isVisible","display","css","enableAceInCustomisedFields","stateOn","taIds","i","length","restart","stop","enableTemplateSupportFields","isCombinatorEnabled","copyFieldsFromQuestionType","newType","response","formspecifier","attrval","filter","key","get_string","then","s","html","detailsHtml","questiontext","reportError","questionType","error","langStringAlert","errorMessage","title","coderunner_descr","resultHtml","extra","message","alert","langs","indexOf","split","endsWith","substr","loadCustomisationFields","children","text","getJSON","M","cfg","wwwroot","qtype","courseid","sesskey","outcome","success","fail","UiParameterDescriptionTable","uiParamInfo","hdrs","columnheaders","param","uiparamstable","loadUiParametersDescription","newUi","uiInfo","currentuiparameters","paramDescriptionDiv","showhidebutton","showdetails","table","empty","append","header","trim","hide","click","show","hidedetails","set_testtype_visibilities","check_ace_lang","check_template_lang","brokenQuestionMessage","messagePara","on","window","confirm","isTurningOn","is","observer","MutationObserver","observe","get","gotPre","prev","testCaseId","addClass"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for handling UI actions in the question authoring form.\n *\n * @package    qtype\n * @subpackage coderunner\n * @copyright  Richard Lobb, 2015, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'qtype_coderunner/userinterfacewrapper', 'core/str'], function($, ui, str) {\n\n    // Define a mapping from the fields of the JSON object returned by an AJAX\n    // 'get question type' request to the form elements. Only fields that\n    // belong to the question type should appear here. Keys are JSON field\n    // names, values are a 3- or 4-element array of: a jQuery form element selector;\n    // the element property to be set; a default value if the JSON field is\n    // empty and an optional filter function to apply to the field value before\n    // setting the property with it.\n    var BEHAT_TESTING = false;  // Suppress alerts (necessary until UnexpectedAlertOpens can be caught).\n    var JSON_TO_FORM_MAP = {\n        template:            ['#id_template', 'value', ''],\n        iscombinatortemplate:['#id_iscombinatortemplate', 'checked', '',\n                                function (value) {\n                                    return value === '1' ? true : false;\n                                }],  // Need nice clean boolean for 'checked' attribute.\n        cputimelimitsecs:    ['#id_cputimelimitsecs', 'value', ''],\n        memlimitmb:          ['#id_memlimitmb', 'value', ''],\n        sandbox:             ['#id_sandbox', 'value', 'DEFAULT'],\n        sandboxparams:       ['#id_sandboxparams', 'value', ''],\n        testsplitterre:      ['#id_testsplitterre', 'value', '',\n                                function (splitter) {\n                                    return splitter.replace('\\n', '\\\\n');\n                                }],\n        allowmultiplestdins: ['#id_allowmultiplestdins', 'checked', '',\n                                function (value) {\n                                    return value === '1' ? true : false;\n                                }],\n        grader:              ['#id_grader', 'value', 'EqualityGrader'],\n        resultcolumns:       ['#id_resultcolumns', 'value', ''],\n        language:            ['#id_language', 'value', ''],\n        acelang:             ['#id_acelang', 'value', ''],\n        uiplugin:            ['#id_uiplugin', 'value', 'ace']\n    };\n\n    // Set up the author edit form UI plugins and event handlers.\n    // The template parameters and Ace language are passed to each\n    // text area from PHP by setting its data-params and\n    // data-lang attributes.\n    function initEditForm() {\n        var typeCombo = $('#id_coderunnertype'),\n            template = $('#id_template'),\n            evaluatePerStudent = $('#id_templateparamsevalpertry'),\n            globalextra = $('#id_globalextra'),\n            useace = $('#id_useace'),\n            language = $('#id_language'),\n            acelang = $('#id_acelang'),\n            customise = $('#id_customise'),\n            isCombinator = $('#id_iscombinatortemplate'),\n            testSplitterRe = $('#id_testsplitterre'),\n            allowMultipleStdins = $('#id_allowmultiplestdins'),\n            customisationFieldSet = $('#id_customisationheader'),\n            advancedCustomisation = $('#id_advancedcustomisationheader'),\n            isCustomised = customise.prop('checked'),\n            prototypeType = $('#id_prototypetype'),\n            preloadHdr = $('#id_answerpreloadhdr'),\n            typeName = $('#id_typename'),\n            courseId = $('input[name=\"courseid\"]').prop('value'),\n            questiontypeHelpDiv = $('#qtype-help'),\n            precheck = $('select#id_precheck'),\n            testtypedivs = $('div.testtype'),\n            brokenQuestion = $('#id_broken_question'),\n            uiplugin = $('#id_uiplugin'),\n            uiparameters = $('#id_uiparameters');\n\n        // Set up the UI controller for the textarea whose name is\n        // given as the first parameter (one of template, answer or answerpreload)\n        // to the given UI controller (which may be \"None\" or, equivalently, empty).\n        // We don't attempt to process changes in template parameters,\n        // as these need to be merged with those of the prototype. But we do handle\n        // changes in the language.\n        function setUi(taId, uiname) {\n            var ta = $(document.getElementById(taId)),  // The jquery text area element(s).\n                lang,\n                currentLang = ta.attr('data-lang'),     // Language set by PHP.\n                paramsJson = ta.attr('data-params'),    // Ui params set by PHP.\n                params = {},\n                uiWrapper;\n\n            // Set data attributes in the text area for UI components that need\n            // global extra or testcase data (e.g. gapfiller UI).\n            ta.attr('data-globalextra', globalextra.val());\n            ta.attr('data-test0', $('#id_testcode_0').val());\n            try {\n                params = JSON.parse(paramsJson);\n            } catch(err) {}\n            uiname = uiname.toLowerCase();\n            if (uiname === 'none') {\n                uiname = '';\n            }\n\n            if (taId == 'id_templateparams' || taId == 'id_uiparameters') {\n                lang = ''; // These fields may be twigged, so can't be parsed by Ace.\n            } else {\n                lang = language.prop('value');\n                if (taId !== \"id_template\" && acelang.prop('value')) {\n                    lang = preferredAceLang(acelang.prop('value'));\n                }\n            }\n\n            uiWrapper = ta.data('current-ui-wrapper'); // Currently-active UI wrapper on this ta.\n\n            if (uiWrapper && uiWrapper.uiname === uiname && currentLang == lang) {\n                return; // We already have what we want - give up.\n            }\n\n            ta.attr('data-lang', lang);\n\n            if (!uiWrapper) {\n                uiWrapper = new ui.InterfaceWrapper(uiname, taId);\n            } else {\n                // Wrapper has already been set up - just reload the reqd UI.\n                params.lang = lang;\n                uiWrapper.loadUi(uiname, params);\n            }\n\n        }\n\n        // Set the correct Ui controller on both the sample answer and the answer preload.\n        // As a special case, we don't turn on the Ui controller in the answer\n        // and answer preload fields when using Html-Ui\n        function setUis() {\n            var uiname = uiplugin.val();\n\n            if (uiname && uiname !== 'html') {\n                setUi('id_answer', uiname);\n                setUi('id_answerpreload', uiname);\n            }\n        }\n\n        // Display or Hide all customisation parts of the form according\n        // to whether isVisible is true or false respectively.\n        function setCustomisationVisibility(isVisible) {\n            var display = isVisible ? 'block' : 'none';\n            customisationFieldSet.css('display', display);\n            advancedCustomisation.css('display', display);\n            if (isVisible && useace.prop('checked')) {\n                setUi('id_template', 'ace');\n            }\n        }\n\n\n        // Turn on or off the Ace editor in the template and uiparameters fields\n        // so we can reload the textareas with JavaScript.\n        // Ignore if UseAce is unchecked.\n        // Parameter is true to stop Ace, false to restart it.\n        function enableAceInCustomisedFields(stateOn) {\n            var taIds = ['id_template', 'id_uiparameters'];\n            var uiWrapper, ta;\n            if (useace.prop('checked')) {\n                for(var i = 0; i < taIds.length; i++) {\n                    ta = $(document.getElementById(taIds[i]));\n                    uiWrapper = ta.data('current-ui-wrapper');\n                    if (uiWrapper && stateOn) {\n                        uiWrapper.restart();\n                    } else if (uiWrapper && !stateOn) {\n                        uiWrapper.stop();\n                    }\n                }\n            }\n        }\n\n\n        // After loading the form with new question type data we have to\n        // enable or disable both the testsplitterre and the allow multiple\n        // stdins field. These are subsequently enabled/disabled via event handlers\n        // set up by code in edit_coderunner_form.php (q.v.) but those event\n        // handlers do not handle the freshly downloaded state.\n        function enableTemplateSupportFields() {\n            var isCombinatorEnabled = isCombinator.prop('checked');\n\n            testSplitterRe.prop('disabled', !isCombinatorEnabled);\n            allowMultipleStdins.prop('disabled', !isCombinatorEnabled);\n        }\n\n        // Copy fields from the AJAX \"get question type\" response into the form.\n        function copyFieldsFromQuestionType(newType, response) {\n            var formspecifier, attrval, filter;\n\n            enableAceInCustomisedFields(false);\n            for (var key in JSON_TO_FORM_MAP) {\n                formspecifier = JSON_TO_FORM_MAP[key];\n                attrval = response[key] ? response[key] : formspecifier[2];\n                if (formspecifier.length > 3) {\n                    filter = formspecifier[3];\n                    attrval = filter(attrval);\n                }\n                $(formspecifier[0]).prop(formspecifier[1], attrval);\n            }\n\n            typeName.prop('value', newType);\n            customise.prop('checked', false);\n            str.get_string('coderunner_question_type', 'qtype_coderunner').then(function (s) {\n                questiontypeHelpDiv.html(detailsHtml(newType, s, response.questiontext));\n            });\n\n            setCustomisationVisibility(false);\n            enableTemplateSupportFields();\n        }\n\n        // A JSON request for a question type returned a 'failure' response - probably a\n        // missing question type. Report the error with an alert, and replace\n        // the template contents with an error message in case the user\n        // saves the question and later wonders why it breaks.\n        function reportError(questionType, error) {\n            langStringAlert('prototype_load_failure', error);\n            str.get_string('prototype_error', 'qtype_coderunner').then(function(s) {\n                var errorMessage = s + \"\\n\";\n                errorMessage += error + '\\n';\n                errorMessage += \"CourseId: \" + courseId + \", qtype: \" + questionType;\n                template.prop('value', errorMessage);\n            });\n        }\n\n        function detailsHtml(title, coderunner_descr, html) {\n            // Local function to return the HTML to display in the\n            // question type details section of the form.\n            var resultHtml = '<p class=\"question-type-details-header\">';\n            resultHtml += coderunner_descr;\n            resultHtml += title + '</p>\\n' + html;\n            return resultHtml;\n\n        }\n\n        // Raise an alert with the given language string and possible additional\n        // extra text.\n        function langStringAlert(key, extra) {\n            if (BEHAT_TESTING) {\n                return;\n            }\n            str.get_string(key, 'qtype_coderunner').then(function(s) {\n                var message = s.replace(/\\n/g, \" \");\n                if (extra) {\n                    message += '\\n' + extra;\n                }\n                alert(message);\n            });\n        }\n\n        // Get the \"preferred language\" from the AceLang string supplied.\n        // For multilanguage questions, this is either the default (i.e.,\n        // the language with a '*' suffix), or the first language. Otherwise\n        // it is simply the entire AceLang string.\n        function preferredAceLang(acelang) {\n            var langs, i;\n            if (acelang.indexOf(',') < 0) {\n                return acelang;\n            } else {\n                langs = acelang.split(',');\n                for (i = 0; i < langs.length; i++) {\n                    if (langs[i].endsWith('*')) {\n                        return langs[i].substr(0, langs[i].length - 1);\n                    }\n                }\n                return langs.length > 0 ? langs[0] : '';\n            }\n        }\n\n        // Load the various customisation fields into the form from the\n        // CodeRunner question type currently selected by the combobox.\n        function loadCustomisationFields() {\n            var newType = typeCombo.children('option:selected').text();\n\n            if (newType !== '' && newType !== 'Undefined') {\n                // Prevent 'Undefined' ever being reselected.\n                typeCombo.children('option:first-child').prop('disabled', 'disabled');\n\n                // Load question type with ajax.\n                $.getJSON(M.cfg.wwwroot + '/question/type/coderunner/ajax.php',\n                    {\n                        qtype: newType,\n                        courseid: courseId,\n                        sesskey: M.cfg.sesskey\n                    },\n                    function (outcome) {\n                        if (outcome.success) {\n                            copyFieldsFromQuestionType(newType, outcome);\n                            setUis();\n                        }\n                        else {\n                            reportError(newType, outcome.error);\n                        }\n\n                    }\n                ).fail(function () {\n                    // AJAX failed. We're dead, Fred. The attempt to get the\n                    // language translation for the error message will likely\n                    // fail too, so use English for a start.\n                    langStringAlert('error_loading_prototype');\n                    template.prop('value', '*** AJAX ERROR. DON\\'T SAVE THIS! ***');\n                    str.get_string('ajax_error', 'qtype_coderunner').then(function(s) {\n                        template.prop('value', s);  // Translates into current language (if it works).\n                    });\n                });\n            }\n        }\n\n        // Return a table describing all the UI parameters.\n        function UiParameterDescriptionTable(uiParamInfo) {\n            var html = '<div class=\"uiparamtablediv\"><table class=\"uiparamtable\">\\n',\n                hdrs = uiParamInfo.columnheaders, param, i;\n            html += \"<tr><th>\" + hdrs[0] + \"</th><th>\" + hdrs[1] + \"</th><th>\" + hdrs[2] + \"</th></tr>\\n\";\n            for (i = 0; i < uiParamInfo.uiparamstable.length; i++) {\n                param = uiParamInfo.uiparamstable[i];\n                html += \"<tr><td>\" + param[0] + \"</td><td>\" + param[1] + \"</td><td>\" + param[2] + \"</td></tr>\\n\";\n            }\n            html += \"</table></div>\\n\";\n            return html;\n        }\n\n        // Load the UI parameter description field by Ajax when the UI plugin\n        // is changed.\n        function loadUiParametersDescription() {\n            var newUi = uiplugin.children('option:selected').text();\n            $.getJSON(M.cfg.wwwroot + '/question/type/coderunner/ajax.php',\n                {\n                    uiplugin: newUi,\n                    courseid: courseId,\n                    sesskey: M.cfg.sesskey\n                },\n                function (uiInfo) {\n                    var currentuiparameters = uiparameters.val(),\n                        paramDescriptionDiv = $('.ui_parameters_descr'),\n                        showhidebutton = $('<button type=\"button\" class=\"toggleuidetails\">' + uiInfo.showdetails + '</button>'),\n                        table;\n                    paramDescriptionDiv.empty();\n                    paramDescriptionDiv.append(uiInfo.header);\n                    if (uiInfo.uiparamstable.length == 0 && currentuiparameters.trim() === '') {\n                        uiparameters.val(''); // Remove stray white space.\n                        $('#fgroup_id_uiparametergroup').hide();\n                    } else {\n                        if (uiInfo.uiparamstable.length != 0) {\n                            paramDescriptionDiv.append(showhidebutton);\n                            table = $(UiParameterDescriptionTable(uiInfo));\n                            paramDescriptionDiv.append(table);\n                            table.hide();\n                            showhidebutton.click(function () {\n                                if (showhidebutton.html() == uiInfo.showdetails) {\n                                    table.show();\n                                    showhidebutton.html(uiInfo.hidedetails);\n                                } else {\n                                    table.hide();\n                                    showhidebutton.html(uiInfo.showdetails);\n                                }\n                            });\n                        }\n                        $('#fgroup_id_uiparametergroup').show();\n                        if (useace.prop('checked')) {\n                            setUi('id_uiparameters', 'ace');\n                        }\n                    }\n                }\n            ).fail(function () {\n                // AJAX failed.\n                langStringAlert('error_loading_ui_descr');\n            });\n        }\n\n        // Show/hide all testtype divs in the testcases according to the\n        // 'Precheck' selector.\n        function set_testtype_visibilities() {\n            if (precheck.val() === '3') { // Show only for case of 'Selected'.\n                testtypedivs.show();\n            } else {\n                testtypedivs.hide();\n            }\n        }\n\n        // Check that the Ace language is correctly set for the answer and\n        // answer preload fields.\n        function check_ace_lang() {\n            if (uiplugin.val() === 'ace'){\n                setUis();\n            }\n        }\n\n        // Check that the Ace language is correctly set for the template,\n        // if template_uses_ace is checked.\n        function check_template_lang() {\n            if (useace.prop('checked')) {\n                setUi('id_template', 'ace');\n            }\n        }\n\n        // If the brokenquestionmessage hidden element is not empty, insert the\n        // given message as an error at the top of the question.\n        function checkForBrokenQuestion() {\n            var brokenQuestionMessage = brokenQuestion.prop('value'),\n                messagePara = null;\n            if (brokenQuestionMessage !== '') {\n                messagePara = $('<p>' + brokenQuestion.prop('value') + '</p>');\n                $('#id_qtype_coderunner_error_div').append(messagePara);\n            }\n        }\n\n        /*************************************************************\n         *\n         * Body of initEditFormWhenReady starts here.\n         *\n         *************************************************************/\n\n        if (prototypeType.prop('value') == 1) {\n            // Editing a built-in question type: Dangerous!\n            str.get_string('proceed_at_own_risk', 'qtype_coderunner').then(function(s) {\n                alert(s);\n            });\n            prototypeType.prop('disabled', true);\n            typeCombo.prop('disabled', true);\n            customise.prop('disabled', true);\n        }\n\n        checkForBrokenQuestion();\n\n        setCustomisationVisibility(isCustomised);\n        if (!isCustomised) {\n            // Not customised so have to load fields from prototype.\n            loadCustomisationFields();  // setUis is called when this completes.\n        } else {\n            setUis();  // Set up UI controllers on answer and answerpreload.\n            str.get_string('info_unavailable', 'qtype_coderunner').then(function(s) {\n                questiontypeHelpDiv.html(\"<p>\" + s + \"</p>\");\n            });\n        }\n\n        set_testtype_visibilities();\n\n        if (useace.prop('checked')) {\n            setUi('id_templateparams', 'ace');\n            setUi('id_uiparameters', 'ace');\n        }\n\n        loadUiParametersDescription();\n\n        // Set up event Handlers.\n\n        customise.on('change', function() {\n            var isCustomised = customise.prop('checked');\n            if (isCustomised) {\n                // Customisation is being turned on.\n                setCustomisationVisibility(true);\n            } else { // Customisation being turned off.\n                str.get_string('confirm_proceed', 'qtype_coderunner').then(function(s) {\n                    if (window.confirm(s)) {\n                        setCustomisationVisibility(false);\n                    } else {\n                        customise.prop('checked', true);\n                    }\n                });\n            }\n        });\n\n        acelang.on('change', check_ace_lang);\n        language.on('change', function() {\n            check_template_lang();\n            check_ace_lang();\n        });\n\n        typeCombo.on('change', function() {\n            if (customise.prop('checked')) {\n                // Author has customised the question. Ask if they want to reload inherited stuff.\n                str.get_string('question_type_changed', 'qtype_coderunner').then(function (s) {\n                    if (window.confirm(s)) {\n                        loadCustomisationFields();\n                    }\n                });\n            } else {\n                loadCustomisationFields();\n            }\n        });\n\n        useace.on('change', function() {\n            var isTurningOn = useace.prop('checked');\n            if (isTurningOn) {\n                setUi('id_template', 'ace');\n                setUi('id_templateparams', 'ace');\n                setUi('id_uiparameters', 'ace');\n            } else {\n                setUi('id_template', '');\n                setUi('id_templateparams', '');\n                setUi('id_uiparameters', '');\n            }\n        });\n\n        evaluatePerStudent.on('change', function() {\n            if (evaluatePerStudent.is(':checked')) {\n                langStringAlert('templateparamsusingsandbox');\n            }\n        });\n\n        uiplugin.on('change', function () {\n            setUis();\n            loadUiParametersDescription();\n        });\n\n        precheck.on('change', set_testtype_visibilities);\n\n        // In order to initialise the Ui plugin when the answer preload section is\n        // expanded, we monitor attribute mutations in the Answer Preload\n        // header.\n        var observer = new MutationObserver( function () {\n            setUis();\n        });\n        observer.observe(preloadHdr.get(0), {'attributes': true});\n\n        // Setup click handler for the buttons that allow users to replace the\n        // expected output  with the output got from testing the answer program.\n        $('button.replaceexpectedwithgot').click(function() {\n            var gotPre = $(this).prev('pre[id^=\"id_got_\"]');\n            var testCaseId = gotPre.attr('id').replace('id_got_', '');\n            $('#id_expected_' + testCaseId).val(gotPre.text());\n            $('#id_fail_expected_' + testCaseId).html(gotPre.text());\n            $('.failrow_' + testCaseId).addClass('fixed');  // Fixed row.\n            $(this).prop('disabled', true);\n        });\n    }\n\n    return {initEditForm: initEditForm};\n});"],"file":"authorform.min.js"}