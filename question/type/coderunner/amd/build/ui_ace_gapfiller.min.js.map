{"version":3,"sources":["../src/ui_ace_gapfiller.js"],"names":["define","$","Range","validChars","AceGapfillerUi","textareaId","w","h","uiParams","textArea","document","getElementById","wrapper","focused","activeElement","lang","t","code","source","ui_source","nextGapIndex","alert","attr","window","ace","require","modelist","enabled","contents_changed","capturingTab","clickInProgress","editNode","css","resize","height","width","editor","edit","get","prop","setReadOnly","setOptions","displayIndentGuides","dragEnabled","enableBasicAutocompletion","newLineMode","$blockScrolling","theme","setTheme","setLanguage","setEventHandlers","captureTab","renderer","on","gutter","find","hasClass","addClass","focus","navigateFileEnd","aceLabel","aceTextarea","createGaps","commands","e","cursor","selection","getCursor","commandName","command","name","selectionRange","getSelectionRange","gap","findCursorGap","startsWith","column","range","start","textSize","moveCursorTo","row","end","selectAll","nextGap","gaps","index","length","clearSelection","setSelectionRange","isEmpty","char","args","test","insertChar","deleteChar","cursorInGap","deleteRange","insertText","text","preventDefault","stopPropagation","gapToSelect","fail","reload","err","prototype","reEscape","s","c","specials","result","i","j","lines","split","sepLeft","sepRight","splitter","RegExp","editorContent","bits","columnPos","values","minWidth","parseInt","maxWidth","Gap","push","repeat","session","setValue","failed","failMessage","sync","serialisation","empty","value","getText","val","JSON","stringify","content","parse","language","getSession","mode","findMode","setMode","getElement","bindKeys","releaseTab","trigger","container","addEventListener","which","keyCode","ctrlKey","altKey","shiftKey","destroy","isFocused","remove","selectionStart","hasFocus","candidate","filename","candidates","nameMap","toLowerCase","replace","modesByName","getModeForPath","outerHeight","outerWidth","addMarker","getWidth","changeWidth","delta","other","$onChangeBackMarker","$onChangeFrontMarker","pos","insert","getTextRange","Constructor"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more util.details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Implementation of the ace_gapfiller_ui user interface plugin. For overall details\n * of the UI plugin architecture, see userinterfacewrapper.js.\n *\n * This plugin uses the usual ace editor but only makes some portions of the text editable.\n * The pre-formatted text is supplied by the question author in either the\n * \"globalextra\" field or the testcode field of the first test case, according\n * to the ui parameter ui_source (default: globalextra).\n * Editable \"gaps\" are inserted into the ace editor at specified points.\n * It is intended primarily for use with coding questions where the answerbox presents\n * the students with code that has smallish bits missing.\n *\n * The locations within the globalextra text at which the gaps are\n * to be inserted are denoted by \"tags\" of the form\n *\n *     {[ size ]}\n *\n * or\n *\n *     {[ size-maxSize ]}\n *\n * where size and maxSize are integer literals. These respectively inject a \"gap\" into\n * the editor of the specified size and maxSize. If maxSize is not specified then the\n * \"gap\" has no maximum size and can grow without bound.\n *\n * The serialisation of the answer box contents, i.e. the text that\n * copied back into the textarea for submissions\n * as the answer, is simply a list of all the field values (strings), in order.\n *\n * As a special case of the serialisation, if the value list is empty, the\n * serialisation itself is the empty string.\n *\n * The delimiters for the gap tags are by default '{[' and\n * ']}'.\n *\n * @package    qtype\n * @subpackage coderunner\n * @copyright  Richard Lobb, 2019, The University of Canterbury\n * @copyright  Matthew Toohey, 2021, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n\n    var Range;  // Can't load this until ace has loaded.\n    const fillChar = \" \";\n    const validChars = /[ !\"#$%&'()*+,`\\-./0-9:;<=>?@A-Z\\[\\]\\\\^_a-z{}|~]/;\n\n    function AceGapfillerUi(textareaId, w, h, uiParams) {\n        // Constructor for the Ace interface object\n        this.textArea = $(document.getElementById(textareaId));\n        var wrapper = $(document.getElementById(textareaId + '_wrapper')),\n            focused = this.textArea[0] === document.activeElement,\n            lang = uiParams.lang,\n            t = this;  // For embedded callbacks.\n\n        let code = \"\";\n        this.uiParams = uiParams;\n        this.source = uiParams.ui_source || 'globalextra';\n        this.nextGapIndex = 0;\n        if (this.source !== 'globalextra' && this.source !== 'test0') {\n            alert('Invalid source for code in ui_ace_gapfiller');\n            this.source = 'globalextra';\n        }\n        if (this.source == 'globalextra') {\n            code = this.textArea.attr('data-globalextra');\n        } else {\n            code = this.textArea.attr('data-test0');\n        }\n\n        try {\n            window.ace.require(\"ace/ext/language_tools\");\n            Range = window.ace.require(\"ace/range\").Range;\n            this.modelist = window.ace.require('ace/ext/modelist');\n\n            this.enabled = false;\n            this.contents_changed = false;\n            this.capturingTab = false;\n            this.clickInProgress = false;\n\n            this.editNode = $(\"<div></div>\"); // Ace editor manages this\n            this.editNode.css({\n                resize: 'none',\n                height: h,\n                width: \"100%\"\n            });\n\n            this.editor = window.ace.edit(this.editNode.get(0));\n            if (this.textArea.prop('readonly')) {\n                this.editor.setReadOnly(true);\n            }\n\n            this.editor.setOptions({\n                displayIndentGuides: false,\n                dragEnabled: false,\n                enableBasicAutocompletion: true,\n                newLineMode: \"unix\",\n            });\n            this.editor.$blockScrolling = Infinity;\n\n            // Set theme if available (not currently enabled).\n            if (uiParams.theme) {\n                this.editor.setTheme(\"ace/theme/\" + uiParams.theme);\n            }\n\n            this.setLanguage(lang);\n\n            this.setEventHandlers(this.textArea);\n            this.captureTab();\n\n            // Try to tell Moodle about parts of the editor with z-index.\n            // It is hard to be sure if this is complete. ACE adds all its CSS using JavaScript.\n            // Here, we just deal with things that are known to cause a problem.\n            // Can't do these operations until editor has rendered. So ...\n            this.editor.renderer.on('afterRender', function() {\n                var gutter =  wrapper.find('.ace_gutter');\n                if (gutter.hasClass('moodle-has-zindex')) {\n                    return;  // So we only do what follows once.\n                }\n                gutter.addClass('moodle-has-zindex');\n\n                if (focused) {\n                    t.editor.focus();\n                    t.editor.navigateFileEnd();\n                }\n                t.aceLabel = wrapper.find('.answerprompt');\n                t.aceLabel.attr('for', 'ace_' + textareaId);\n\n                t.aceTextarea = wrapper.find('.ace_text-input');\n                t.aceTextarea.attr('id', 'ace_' + textareaId);\n            });\n\n            this.createGaps(code);\n\n            // Intercept commands sent to ace.\n            this.editor.commands.on(\"exec\", function(e) {\n                let cursor = t.editor.selection.getCursor();\n                let commandName = e.command.name;\n                let selectionRange = t.editor.getSelectionRange();\n\n                let gap = t.findCursorGap(cursor);\n\n                if (commandName.startsWith(\"go\")) {  // If command just moves the cursor then do nothing.\n                    if (gap !== null && commandName === \"gotoright\" && cursor.column === gap.range.start.column+gap.textSize) {\n                        // In this case we jump out of gap over the empty space that contains nothing that the user has entered.\n                        t.editor.moveCursorTo(cursor.row, gap.range.end.column+1);\n                    } else {\n                        return;\n                    }\n                }\n\n                if (gap === null) {\n                    // Not in a gap\n                    if (commandName === \"selectall\") {\n                        t.editor.selection.selectAll();\n                    }\n\n                } else if (commandName === \"indent\") {\n                    // Instead of indenting, move to next gap.\n                    let nextGap = t.gaps[(gap.index+1) % t.gaps.length];\n                    t.editor.moveCursorTo(nextGap.range.start.row, nextGap.range.start.column+nextGap.textSize);\n                    t.editor.selection.clearSelection(); // Clear selection.\n\n                } else if (commandName === \"selectall\") {\n                    // Select all text in a gap if we are in a gap.\n                    t.editor.selection.setSelectionRange(new Range(gap.range.start.row,\n                                                         gap.range.start.column,\n                                                         gap.range.start.row,\n                                                         gap.range.end.column), false);\n\n                } else if (t.editor.selection.isEmpty()) {\n                    // User is not selecting multiple characters.\n                    if (commandName === \"insertstring\") {\n                        let char = e.args;\n                        // Only allow user to insert 'valid' chars.\n                        if (validChars.test(char)) {\n                            gap.insertChar(t.gaps, cursor, char);\n                        }\n                    } else if (commandName === \"backspace\") {\n                        // Only delete chars that are actually in the gap.\n                        if (cursor.column > gap.range.start.column && gap.textSize > 0) {\n                            gap.deleteChar(t.gaps, {row: cursor.row, column: cursor.column-1});\n                        }\n                    } else if (commandName === \"del\") {\n                        // Only delete chars that are actually in the gap.\n                        if (cursor.column < gap.range.start.column + gap.textSize && gap.textSize > 0) {\n                            gap.deleteChar(t.gaps, cursor);\n                        }\n                    }\n                    t.editor.selection.clearSelection(); // Keep selection clear.\n\n                } else if (!t.editor.selection.isEmpty() && gap.cursorInGap(selectionRange.start)\n                           && gap.cursorInGap(selectionRange.end)) {\n                    // User is selecting multiple characters and is in a gap.\n\n                    // These are the commands that remove the selected text.\n                    if (commandName === \"insertstring\" || commandName === \"backspace\"\n                        || commandName === \"del\" || commandName === \"paste\"\n                        || commandName === \"cut\") {\n\n                        gap.deleteRange(t.gaps, selectionRange.start.column, selectionRange.end.column);\n                        t.editor.selection.clearSelection(); // Clear selection.\n                    }\n\n                    if (commandName === \"insertstring\") {\n                        let char = e.args;\n                        if (validChars.test(char)) {\n                            gap.insertChar(t.gaps, selectionRange.start, char);\n                        }\n                    }\n                }\n\n                // Paste text into gap.\n                if (gap !== null && commandName === \"paste\") {\n                    gap.insertText(t.gaps, selectionRange.start.column, e.args.text);\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            // Move cursor to where it should be if we click on a gap.\n            t.editor.selection.on('changeCursor', function() {\n                let cursor = t.editor.selection.getCursor();\n                let gap = t.findCursorGap(cursor);\n                if (gap !== null) {\n                    if (cursor.column > gap.range.start.column+gap.textSize) {\n                        t.editor.moveCursorTo(gap.range.start.row, gap.range.start.column+gap.textSize);\n                    }\n                }\n            });\n\n            this.gapToSelect = null;    // Stores gap that has been selected with triple click.\n\n            // Select all text in gap on triple click within gap.\n            this.editor.on(\"tripleclick\", function(e) {\n                let cursor = t.editor.selection.getCursor();\n                let gap = t.findCursorGap(cursor);\n                if (gap !== null) {\n                    t.editor.selection.setSelectionRange(new Range(gap.range.start.row,\n                                                                   gap.range.start.column,\n                                                                   gap.range.start.row,\n                                                                   gap.range.end.column), false);\n                    t.gapToSelect = gap;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            });\n\n            // Annoying hack to ensure the tripple click thing works.\n            this.editor.on(\"click\", function(e) {\n                if (t.gapToSelect) {\n                    t.editor.moveCursorTo(t.gapToSelect.range.start.row, t.gapToSelect.range.start.column+t.gapToSelect.textSize);\n                    t.gapToSelect = null;\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            });\n\n            this.fail = false;\n            this.reload();\n        }\n        catch(err) {\n            // Something ugly happened. Probably ace editor hasn't been loaded\n            this.fail = true;\n        }\n    }\n\n    // Do not call until after this.editor has been instantiated.\n    AceGapfillerUi.prototype.createGaps = function(code) {\n        this.gaps = [];\n        // Extract gaps from source code and insert gaps into editor.\n        function reEscape(s) {\n            var c, specials = '{[(*+\\\\', result='';\n            for (var i = 0; i < s.length; i++) {\n                c = s[i];\n                for (var j = 0; j < specials.length; j++) {\n                    if (c === specials[j]) {\n                        c = '\\\\' + c;\n                    }\n                }\n                result += c;\n            }\n            return result;\n        }\n\n        let lines = code.split(/\\r?\\n/);\n\n        let sepLeft = reEscape('{[');\n        let sepRight = reEscape(']}');\n        let splitter = new RegExp(sepLeft + ' *((?:\\\\d+)|(?:\\\\d+- *\\\\d+)) *' + sepRight);\n\n        let editorContent = \"\";\n        for (let i = 0; i < lines.length; i++) {\n            let bits = lines[i].split(splitter);\n            editorContent += bits[0];\n\n            let columnPos = bits[0].length;\n            for (let j = 1; j < bits.length; j += 2) {\n                let values = bits[j].split('-');\n                let minWidth = parseInt(values[0]);\n                let maxWidth = (values.length > 1 ? parseInt(values[1]) : Infinity);\n\n                // Create new gap.\n                let gap = new Gap(this.editor, i, columnPos, minWidth, maxWidth);\n                gap.index = this.nextGapIndex;\n                this.nextGapIndex += 1;\n                this.gaps.push(gap);\n\n                columnPos += minWidth;\n                editorContent += ' '.repeat(minWidth);\n                if (j + 1 < bits.length) {\n                    editorContent += bits[j+1];\n                    columnPos += bits[j+1].length;\n                }\n\n            }\n\n            if (i < lines.length-1) {\n                editorContent += '\\n';\n            }\n        }\n        this.editor.session.setValue(editorContent);\n    };\n\n    // Return the gap that the cursor is in. This will acutally return a gap if the cursor is 1 outside the gap\n    // as this will be needed for backspace/insertion to work. Rigth now this is done as a simple\n    // linear search but could be improved later. Returns null if the cursor is not in a gap.\n    AceGapfillerUi.prototype.findCursorGap = function(cursor) {\n        for (let i=0; i < this.gaps.length; i++) {\n            let gap = this.gaps[i];\n            if (gap.cursorInGap(cursor)) {\n                return gap;\n            }\n        }\n        return null;\n    };\n\n    AceGapfillerUi.prototype.failed = function() {\n        return this.fail;\n    };\n\n    AceGapfillerUi.prototype.failMessage = function() {\n        return 'ace_ui_notready';\n    };\n\n\n    // Sync to TextArea\n    AceGapfillerUi.prototype.sync = function() {\n        let serialisation = [];  // A list of field values.\n        let empty = true;\n\n        for (let i=0; i < this.gaps.length; i++) {\n            let gap = this.gaps[i];\n            let value = gap.getText();\n            serialisation.push(value);\n            if (value !== \"\") {\n                empty = false;\n            }\n        }\n        if (empty) {\n            this.textArea.val('');\n        } else {\n            this.textArea.val(JSON.stringify(serialisation));\n        }\n    };\n\n    // Reload the HTML fields from the given serialisation.\n    AceGapfillerUi.prototype.reload = function() {\n        let content = this.textArea.val();\n        if (content) {\n            try {\n                let values = JSON.parse(content);\n                for (let i = 0; i < this.gaps.length; i++) {\n                    let value = i < values.length ? values[i]: '???';\n                    this.gaps[i].insertText(this.gaps, this.gaps[i].range.start.column, value);\n                }\n            } catch(e) {\n                // Just ignore errors\n            }\n        }\n    };\n\n    AceGapfillerUi.prototype.setLanguage = function(language) {\n        var session = this.editor.getSession(),\n            mode = this.findMode(language);\n        if (mode) {\n            session.setMode(mode.mode);\n        }\n    };\n\n    AceGapfillerUi.prototype.getElement = function() {\n        return this.editNode;\n    };\n\n    AceGapfillerUi.prototype.captureTab = function () {\n        this.capturingTab = true;\n        this.editor.commands.bindKeys({'Tab': 'indent', 'Shift-Tab': 'outdent'});\n    };\n\n    AceGapfillerUi.prototype.releaseTab = function () {\n        this.capturingTab = false;\n        this.editor.commands.bindKeys({'Tab': null, 'Shift-Tab': null});\n    };\n\n    AceGapfillerUi.prototype.setEventHandlers = function () {\n        var TAB = 9,\n            ESC = 27,\n            KEY_M = 77,\n            t = this;\n\n        this.editor.getSession().on('change', function() {\n            t.contents_changed = true;\n        });\n\n        this.editor.on('blur', function() {\n            if (t.contents_changed) {\n                t.textArea.trigger('change');\n            }\n        });\n\n        this.editor.on('mousedown', function() {\n            // Event order seems to be (\\ is where the mouse button is pressed, / released):\n            // Chrome: \\ mousedown, mouseup, focusin / click.\n            // Firefox/IE: \\ mousedown, focusin / mouseup, click.\n            t.clickInProgress = true;\n        });\n\n        this.editor.on('focus', function() {\n            if (t.clickInProgress) {\n                t.captureTab();\n            } else {\n                t.releaseTab();\n            }\n        });\n\n        this.editor.on('click', function() {\n            t.clickInProgress = false;\n        });\n\n        this.editor.container.addEventListener('keydown', function(e) {\n            if (e.which === undefined || e.which !== 0) { // Normal keypress?\n                if (e.keyCode === KEY_M && e.ctrlKey && !e.altKey) {\n                    if (t.capturingTab) {\n                        t.releaseTab();\n                    } else {\n                        t.captureTab();\n                    }\n                    e.preventDefault(); // Firefox uses this for mute audio in current browser tab.\n                }\n                else if (e.keyCode === ESC) {\n                    t.releaseTab();\n                }\n                else if (!(e.shiftKey || e.ctrlKey || e.altKey || e.keyCode == TAB)) {\n                    t.captureTab();\n                }\n            }\n        }, true);\n    };\n\n    AceGapfillerUi.prototype.destroy = function () {\n        this.sync();\n        var focused;\n        if (!this.fail) {\n            // Proceed only if this wrapper was correctly constructed\n            focused = this.editor.isFocused();\n            this.editor.destroy();\n            $(this.editNode).remove();\n            if (focused) {\n                this.textArea.focus();\n                this.textArea[0].selectionStart = this.textArea[0].value.length;\n            }\n        }\n    };\n\n    AceGapfillerUi.prototype.hasFocus = function() {\n        return this.editor.isFocused();\n    };\n\n    AceGapfillerUi.prototype.findMode = function (language) {\n        var candidate,\n            filename,\n            result,\n            candidates = [], // List of candidate modes.\n            nameMap = {\n                'octave': 'matlab',\n                'nodejs': 'javascript',\n                'c#': 'cs'\n            };\n\n        if (typeof language !== 'string') {\n            return undefined;\n        }\n        if (language.toLowerCase() in nameMap) {\n            language = nameMap[language.toLowerCase()];\n        }\n\n        candidates = [language, language.replace(/\\d+$/, \"\")];\n        for (var i = 0; i < candidates.length; i++) {\n            candidate = candidates[i];\n            filename = \"input.\" + candidate;\n            result = this.modelist.modesByName[candidate] ||\n                this.modelist.modesByName[candidate.toLowerCase()] ||\n                this.modelist.getModeForPath(filename) ||\n                this.modelist.getModeForPath(filename.toLowerCase());\n\n            if (result && result.name !== 'text') {\n                return result;\n            }\n        }\n        return undefined;\n    };\n\n    AceGapfillerUi.prototype.resize = function(w, h) {\n        this.editNode.outerHeight(h);\n        this.editNode.outerWidth(w);\n        this.editor.resize();\n    };\n\n    function Gap(editor, row, column, minWidth, maxWidth=Infinity) {\n        this.editor = editor;\n\n        this.minWidth = minWidth;\n        this.maxWidth = maxWidth;\n\n        this.range = new Range(row, column, row, column+minWidth);\n        this.textSize = 0;\n\n        // Create markers\n        this.editor.session.addMarker(this.range, \"ace-gap-outline\", \"text\", true);\n        this.editor.session.addMarker(this.range, \"ace-gap-background\", \"text\", false);\n    }\n\n    Gap.prototype.cursorInGap = function(cursor) {\n        return (cursor.row >= this.range.start.row && cursor.column >= this.range.start.column &&\n                cursor.row <= this.range.end.row && cursor.column <= this.range.end.column);\n    };\n\n    Gap.prototype.getWidth = function() {\n        return (this.range.end.column-this.range.start.column);\n    };\n\n    Gap.prototype.changeWidth = function(gaps, delta) {\n        this.range.end.column += delta;\n\n        // Update any gaps that come after this one on the same line\n        for (let i=0; i < gaps.length; i++) {\n            let other = gaps[i];\n            if (other.range.start.row === this.range.start.row && other.range.start.column > this.range.end.column) {\n                other.range.start.column += delta;\n                other.range.end.column += delta;\n            }\n        }\n\n        this.editor.$onChangeBackMarker();\n        this.editor.$onChangeFrontMarker();\n    };\n\n    Gap.prototype.insertChar = function(gaps, pos, char) {\n        if (this.textSize === this.getWidth() && this.getWidth() < this.maxWidth) {    // Grow the size of gap and insert char.\n            this.changeWidth(gaps, 1);\n            this.textSize += 1;  // Important to record that texSize has increased before insertion.\n            this.editor.session.insert(pos, char);\n        } else if (this.textSize < this.maxWidth) {   // Insert char.\n            this.editor.session.remove(new Range(pos.row, this.range.end.column-1, pos.row, this.range.end.column));\n            this.textSize += 1;  // Important to record that texSize has increased before insertion.\n            this.editor.session.insert(pos, char);\n        }\n    };\n\n    Gap.prototype.deleteChar = function(gaps, pos) {\n        this.textSize -= 1;\n        this.editor.session.remove(new Range(pos.row, pos.column, pos.row, pos.column+1));\n\n        if (this.textSize >= this.minWidth) {\n            this.changeWidth(gaps, -1);  // Shrink the size of the gap.\n        } else {\n            // Put new space at end so everything is shifted across.\n            this.editor.session.insert({row: pos.row, column: this.range.end.column-1}, fillChar);\n        }\n    };\n\n    Gap.prototype.deleteRange = function(gaps, start, end) {\n        for (let i = start; i < end; i++) {\n            if (start < this.range.start.column+this.textSize) {\n                this.deleteChar(gaps, {row: this.range.start.row, column: start});\n            }\n        }\n    };\n\n    Gap.prototype.insertText = function(gaps, start, text) {\n        for (let i = 0; i < text.length; i++) {\n            if (start+i < this.range.start.column+this.maxWidth) {\n                this.insertChar(gaps, {row: this.range.start.row, column: start+i}, text[i]);\n            }\n        }\n    };\n\n    Gap.prototype.getText = function() {\n        return this.editor.session.getTextRange(new Range(this.range.start.row, this.range.start.column,\n                                                this.range.end.row, this.range.start.column+this.textSize));\n\n    };\n\n    return {\n        Constructor: AceGapfillerUi\n    };\n});\n"],"file":"ui_ace_gapfiller.min.js"}