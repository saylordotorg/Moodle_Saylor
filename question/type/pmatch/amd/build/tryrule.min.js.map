{"version":3,"file":"tryrule.min.js","sources":["../src/tryrule.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This class provides functionality for try rule.\n *\n * This is based on the work of Dr Alistair Willis published:\n * http://aclweb.org/anthology/W/W15/W15-0628.pdf\n *\n * @module    qtype_pmatch\n * @class     tryrule\n * @copyright 2016 The Open University\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since     2.9\n */\n\nimport Notification from 'core/notification';\n\n/**\n * Try rule support send request try rule.\n *\n * @param {number} answerNumber id answer try rule\n * @param {Element} tryRow is element button click call tryrule function\n */\nconst tryRule = (answerNumber, tryRow) => {\n    const rule = document.getElementById('id_answer_' + answerNumber).value;\n    if (!rule) {\n        return;\n    }\n\n    // Send request for tryrule result.\n    const pendingid = {};\n    M.util.js_pending(pendingid);\n\n    const data = new FormData();\n    data.append('type', 'tryrule');\n    data.append('qid', tryRow.closest('form').querySelector('input[name=\"id\"]').value);\n    data.append('ruletxt', rule);\n    data.append('fraction', document.getElementById('id_fraction_' + answerNumber).value);\n    data.append('sesskey', M.cfg.sesskey);\n\n    fetch(M.cfg.wwwroot + '/question/type/pmatch/api/api.php', {\n        method: 'POST',\n        body: data,\n    }).then(response => response.json()\n    ).then(text => {\n        tryRow.querySelector('.try-rule-result').innerHTML = text;\n        M.util.js_complete(pendingid);\n        return;\n    }).catch(Notification.exception);\n};\n\nexport const init = () => {\n    document.addEventListener('click', (e) => {\n        const button = e.target.closest('input[name=\"tryrule\"]');\n        if (!button) {\n            // Not an event we care about. Ignore.\n            return;\n        }\n\n        // This is ours.\n        e.preventDefault();\n\n        const tryRow = button.closest('.try-rule');\n\n        // Find the corresponding answer rule id.\n        let ruleRow = tryRow;\n        while (!ruleRow.matches('.answer-rule')) {\n            ruleRow = ruleRow.previousElementSibling;\n        }\n        const answerNumber = ruleRow.id.replace('fitem_id_answer_', '');\n\n        tryRule(answerNumber, tryRow);\n    });\n};\n"],"names":["document","addEventListener","e","button","target","closest","preventDefault","tryRow","ruleRow","matches","previousElementSibling","answerNumber","rule","getElementById","value","pendingid","M","util","js_pending","data","FormData","append","querySelector","cfg","sesskey","fetch","wwwroot","method","body","then","response","json","text","innerHTML","js_complete","catch","Notification","exception","tryRule","id","replace"],"mappings":";;;;;;;;;;;;oKAgEoB,KAChBA,SAASC,iBAAiB,SAAUC,UAC1BC,OAASD,EAAEE,OAAOC,QAAQ,6BAC3BF,cAMLD,EAAEI,uBAEIC,OAASJ,OAAOE,QAAQ,iBAG1BG,QAAUD,aACNC,QAAQC,QAAQ,iBACpBD,QAAUA,QAAQE,uBA5Cd,EAACC,aAAcJ,gBACrBK,KAAOZ,SAASa,eAAe,aAAeF,cAAcG,UAC7DF,kBAKCG,UAAY,GAClBC,EAAEC,KAAKC,WAAWH,iBAEZI,KAAO,IAAIC,SACjBD,KAAKE,OAAO,OAAQ,WACpBF,KAAKE,OAAO,MAAOd,OAAOF,QAAQ,QAAQiB,cAAc,oBAAoBR,OAC5EK,KAAKE,OAAO,UAAWT,MACvBO,KAAKE,OAAO,WAAYrB,SAASa,eAAe,eAAiBF,cAAcG,OAC/EK,KAAKE,OAAO,UAAWL,EAAEO,IAAIC,SAE7BC,MAAMT,EAAEO,IAAIG,QAAU,oCAAqC,CACvDC,OAAQ,OACRC,KAAMT,OACPU,MAAKC,UAAYA,SAASC,SAC3BF,MAAKG,OACHzB,OAAOe,cAAc,oBAAoBW,UAAYD,KACrDhB,EAAEC,KAAKiB,YAAYnB,cAEpBoB,MAAMC,sBAAaC,YAuBlBC,CAFqB9B,QAAQ+B,GAAGC,QAAQ,mBAAoB,IAEtCjC"}