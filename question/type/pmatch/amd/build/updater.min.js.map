{"version":3,"file":"updater.min.js","sources":["../src/updater.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This class provides functionality for the testquestion response updater.\n *\n * @module    qtype_pmatch\n * @class     updater\n * @copyright 2016 The Open University\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Notification from 'core/notification';\n\n/**\n * @alias qtype_pmatch/updater\n */\nconst t = {\n    /**\n     * Initialise the updater.\n     */\n    init: function() {\n        const table = document.getElementById('attemptsform');\n        table.addEventListener('click', e => {\n            const updater = e.target.closest('.updater-ef');\n            if (!updater) {\n                return;\n            }\n\n            e.preventDefault();\n            t.update(updater.dataset.id);\n        });\n\n        // Prevent the form submit when user press enter on checkbox. Toggle instead.\n        table.addEventListener('keypress', e => {\n            const checkbox = e.target.closest('input[type=\"checkbox\"]');\n            if (checkbox && e.key === 'Enter') {\n                // Enter on checkbox should toggle it.\n                e.preventDefault();\n                checkbox.click();\n                return;\n            }\n\n            const row = e.target.closest('tr');\n            if (row && e.key === 'Enter') {\n                // Ensure other actions in the table row don't submit the form.\n                e.preventDefault();\n                return;\n            }\n        });\n\n        // We have to use legacy jQuery events here, for it to work in 3.11 and 4.0.\n        const body = $('body');\n        body.on('updatefailed', '[data-inplaceeditable]', e => {\n            e.preventDefault();\n            Notification.alert(M.util.get_string('error:title', 'qtype_pmatch'),\n                    e.exception.message, M.util.get_string('ok', 'moodle'));\n        });\n\n        // We have to use legacy jQuery events here, for it to work in 3.11 and 4.0.\n        body.on('updated', '[data-inplaceeditable]', e => {\n            t.handleUpdated(e);\n        });\n\n        // If there is no row in table, bind core/inplace_editable to the page.\n        if (document.getElementById('qtype-pmatch-testquestion_r0').classList.contains('emptyrow')) {\n            require(['core/inplace_editable']);\n        }\n    },\n\n    /**\n     * Handle updated inplace-editable data returned.\n     *\n     * @param {object} e the event.\n     */\n    handleUpdated: function(e) {\n        if (e.ajaxreturn.value === e.oldvalue) {\n            return;\n        }\n\n        const result = JSON.parse(e.ajaxreturn.value);\n        const existingRow = e.target.closest('tr');\n        existingRow.outerHTML =\n            result.html.replace(/qtype-pmatch-testquestion_r/g, existingRow.id);\n        document.getElementById('testquestion_gradesummary').innerHtml = result.summary;\n    },\n\n    update: function(id) {\n        const pendingid = {};\n        M.util.js_pending(pendingid);\n\n        const data = new FormData();\n        data.append('qid', document.getElementById('attemptsform').querySelector('input[name=\"id\"]').value);\n        data.append('rid', id);\n        data.append('expectedfraction', document.getElementById('updater-ef_' + id).innerText === '1' ? 0 : 1);\n        data.append('sesskey', M.cfg.sesskey);\n\n        fetch(M.cfg.wwwroot + '/question/type/pmatch/api/updater.php', {\n            method: 'POST',\n            body: data,\n        }).then(response => response.json()\n        ).then(result => {\n            if (result.status !== 'success') {\n                M.util.js_complete(pendingid);\n                throw new Error(result.data);\n            }\n\n            // Update the ui.\n            const updater = document.getElementById('updater-ef_' + id);\n            updater.innerText = result.ef;\n            updater.parentNode.previousElementSibling.innerText = result.gf;\n\n            const tr = updater.parentNode.parentNode;\n            tr.className = result.rowclass;\n\n            document.getElementById('testquestion_gradesummary').innerHtml =\n                    M.util.get_string('testquestionresultssummary', 'qtype_pmatch', result.counts);\n\n            M.util.js_complete(pendingid);\n            return; // Pointless return for eslint.\n        }).catch(Notification.exception);\n    }\n};\n\nexport default t;\n"],"names":["t","init","table","document","getElementById","addEventListener","e","updater","target","closest","preventDefault","update","dataset","id","checkbox","key","click","body","on","alert","M","util","get_string","exception","message","handleUpdated","classList","contains","require","ajaxreturn","value","oldvalue","result","JSON","parse","existingRow","outerHTML","html","replace","innerHtml","summary","pendingid","js_pending","data","FormData","append","querySelector","innerText","cfg","sesskey","fetch","wwwroot","method","then","response","json","status","js_complete","Error","ef","parentNode","previousElementSibling","gf","className","rowclass","counts","catch","Notification"],"mappings":";;;;;;;;uLA8BMA,EAAI,CAINC,KAAM,iBACIC,MAAQC,SAASC,eAAe,gBACtCF,MAAMG,iBAAiB,SAASC,UACtBC,QAAUD,EAAEE,OAAOC,QAAQ,eAC5BF,UAILD,EAAEI,iBACFV,EAAEW,OAAOJ,QAAQK,QAAQC,QAI7BX,MAAMG,iBAAiB,YAAYC,UACzBQ,SAAWR,EAAEE,OAAOC,QAAQ,6BAC9BK,UAAsB,UAAVR,EAAES,WAEdT,EAAEI,sBACFI,SAASE,QAIDV,EAAEE,OAAOC,QAAQ,OACR,UAAVH,EAAES,KAETT,EAAEI,0BAMJO,MAAO,mBAAE,QACfA,KAAKC,GAAG,eAAgB,0BAA0BZ,IAC9CA,EAAEI,uCACWS,MAAMC,EAAEC,KAAKC,WAAW,cAAe,gBAC5ChB,EAAEiB,UAAUC,QAASJ,EAAEC,KAAKC,WAAW,KAAM,cAIzDL,KAAKC,GAAG,UAAW,0BAA0BZ,IACzCN,EAAEyB,cAAcnB,MAIhBH,SAASC,eAAe,gCAAgCsB,UAAUC,SAAS,aAC3EC,QAAQ,CAAC,2BASjBH,cAAe,SAASnB,MAChBA,EAAEuB,WAAWC,QAAUxB,EAAEyB,sBAIvBC,OAASC,KAAKC,MAAM5B,EAAEuB,WAAWC,OACjCK,YAAc7B,EAAEE,OAAOC,QAAQ,MACrC0B,YAAYC,UACRJ,OAAOK,KAAKC,QAAQ,+BAAgCH,YAAYtB,IACpEV,SAASC,eAAe,6BAA6BmC,UAAYP,OAAOQ,SAG5E7B,OAAQ,SAASE,UACP4B,UAAY,GAClBrB,EAAEC,KAAKqB,WAAWD,iBAEZE,KAAO,IAAIC,SACjBD,KAAKE,OAAO,MAAO1C,SAASC,eAAe,gBAAgB0C,cAAc,oBAAoBhB,OAC7Fa,KAAKE,OAAO,MAAOhC,IACnB8B,KAAKE,OAAO,mBAA8E,MAA1D1C,SAASC,eAAe,cAAgBS,IAAIkC,UAAoB,EAAI,GACpGJ,KAAKE,OAAO,UAAWzB,EAAE4B,IAAIC,SAE7BC,MAAM9B,EAAE4B,IAAIG,QAAU,wCAAyC,CAC3DC,OAAQ,OACRnC,KAAM0B,OACPU,MAAKC,UAAYA,SAASC,SAC3BF,MAAKrB,YACmB,YAAlBA,OAAOwB,aACPpC,EAAEC,KAAKoC,YAAYhB,WACb,IAAIiB,MAAM1B,OAAOW,YAIrBpC,QAAUJ,SAASC,eAAe,cAAgBS,IACxDN,QAAQwC,UAAYf,OAAO2B,GAC3BpD,QAAQqD,WAAWC,uBAAuBd,UAAYf,OAAO8B,GAElDvD,QAAQqD,WAAWA,WAC3BG,UAAY/B,OAAOgC,SAEtB7D,SAASC,eAAe,6BAA6BmC,UAC7CnB,EAAEC,KAAKC,WAAW,6BAA8B,eAAgBU,OAAOiC,QAE/E7C,EAAEC,KAAKoC,YAAYhB,cAEpByB,MAAMC,sBAAa5C,0BAIfvB"}