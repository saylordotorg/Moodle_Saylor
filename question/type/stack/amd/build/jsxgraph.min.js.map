{"version":3,"sources":["../src/jsxgraph.js"],"names":["define","JXG","find_input_id","divid","name","tmp","document","getElementById","parentElement","classList","contains","querySelector","addEventListener","M","core_formchangechecker","set_form_changed","id","bind_point","inputRef","point","theInput","value","coords","JSON","parse","setPosition","COORDS_BY_USER","err","board","update","initialX","X","initialY","Y","on","stringify","window","location","pathname","indexOf","e","Event","dispatchEvent","lastValue","bind_point_dual","point1","point2","initial1X","initial1Y","initial2X","initial2Y","bind_point_relative","b","bind_point_direction","angle","len","Math","cos","sin","atan2","sqrt","bind_slider","slider","setValue","initialValue","Value"],"mappings":"AAEAA,OAAM,wBAAC,CAAC,+BAAD,CAAD,CAAoC,SAASC,CAAT,CAAc,CACpD,MAAO,CACCC,aAAa,CAAE,uBAASC,CAAT,CAAgBC,CAAhB,CAAsB,CACjC,GAAIC,CAAAA,CAAG,CAAGC,QAAQ,CAACC,cAAT,CAAwBJ,CAAxB,CAAV,CACA,MAAO,CAACE,CAAG,CAAGA,CAAG,CAACG,aAAX,GAA6B,EAAEH,CAAG,CAACI,SAAJ,CAAcC,QAAd,CAAuB,aAAvB,GAAyCL,CAAG,CAACG,aAAJ,CAAkBC,SAAlB,CAA4BC,QAA5B,CAAqC,SAArC,CAA3C,CAApC,CAAiI,CAAE,CACnIL,CAAG,CAAGA,CAAG,CAACM,aAAJ,CAAkB,gBAAiBP,CAAjB,CAAwB,KAA1C,CAAN,CAIAC,CAAG,CAACO,gBAAJ,CAAqB,QAArB,CAA+B,UAAY,CACvCC,CAAC,CAACC,sBAAF,CAAyBC,gBAAzB,EACH,CAFD,EAGA,MAAOV,CAAAA,CAAG,CAACW,EACd,CAZF,CAcCC,UAAU,CAAE,oBAASC,CAAT,CAAmBC,CAAnB,CAA0B,CAElC,GAAIC,CAAAA,CAAQ,CAAGd,QAAQ,CAACC,cAAT,CAAwBW,CAAxB,CAAf,CACA,GAAIE,CAAQ,CAACC,KAAT,EAAoC,EAAlB,EAAAD,CAAQ,CAACC,KAA/B,CAA4C,CAGxC,GAAIC,CAAAA,CAAM,CAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAb,CACA,GAAI,CACAF,CAAK,CAACM,WAAN,CAAkBxB,CAAG,CAACyB,cAAtB,CAAsCJ,CAAtC,CACH,CAAC,MAAOK,CAAP,CAAY,CAEb,CACDR,CAAK,CAACS,KAAN,CAAYC,MAAZ,GACAV,CAAK,CAACU,MAAN,EACH,CAdiC,GAgB9BC,CAAAA,CAAQ,CAAGX,CAAK,CAACY,CAAN,EAhBmB,CAiB9BC,CAAQ,CAAGb,CAAK,CAACc,CAAN,EAjBmB,CAoBlCd,CAAK,CAACS,KAAN,CAAYM,EAAZ,CAAe,QAAf,CAAyB,UAAW,CAEhC,GAAIJ,CAAQ,GAAKX,CAAK,CAACY,CAAN,EAAb,EAA0BC,CAAQ,GAAKb,CAAK,CAACc,CAAN,EAA3C,CAAsD,CAClD,GAAI5B,CAAAA,CAAG,CAAGkB,IAAI,CAACY,SAAL,CAAe,CAAChB,CAAK,CAACY,CAAN,EAAD,CAAYZ,CAAK,CAACc,CAAN,EAAZ,CAAf,CAAV,CACAH,CAAQ,GAAR,CACAE,CAAQ,GAAR,CACA,GAAIZ,CAAQ,CAACC,KAAT,EAAkBhB,CAAtB,CAA2B,CAGvBe,CAAQ,CAACC,KAAT,CAAiBhB,CAAjB,CAIA,GAAwD,CAAC,CAArD,GAAA+B,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,aAAjC,CAAJ,CAA4D,CACxD,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,KAAJ,CAAU,QAAV,CAAR,CACArB,CAAQ,CAACsB,aAAT,CAAuBF,CAAvB,CACH,CACJ,CACJ,CACJ,CAnBD,EAqBA,GAAIG,CAAAA,CAAS,CAAGpB,IAAI,CAACY,SAAL,CAAe,CAAChB,CAAK,CAACY,CAAN,EAAD,CAAYZ,CAAK,CAACc,CAAN,EAAZ,CAAf,CAAhB,CAGAb,CAAQ,CAACR,gBAAT,CAA0B,OAA1B,CAAmC,UAAY,CAC3C,GAAIQ,CAAQ,CAACC,KAAT,EAAkBsB,CAAtB,CAAiC,CAE7B,GAAI,CACA,GAAItC,CAAAA,CAAG,CAAGkB,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAV,CACA,GAAqB,QAAjB,QAAOhB,CAAAA,CAAG,CAAC,CAAD,CAAV,EAA8C,QAAjB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAA3C,CAA4D,CACxDc,CAAK,CAACM,WAAN,CAAkBxB,CAAG,CAACyB,cAAtB,CAAsCrB,CAAtC,EACAc,CAAK,CAACS,KAAN,CAAYC,MAAZ,GACAV,CAAK,CAACU,MAAN,EACH,CACJ,CAAC,MAAOF,CAAP,CAAY,CAEb,CACDgB,CAAS,CAAGvB,CAAQ,CAACC,KACxB,CACJ,CAfD,EAgBAD,CAAQ,CAACR,gBAAT,CAA0B,QAA1B,CAAoC,UAAY,CAC5C,GAAIQ,CAAQ,CAACC,KAAT,EAAkBsB,CAAtB,CAAiC,CAE7B,GAAI,CACA,GAAItC,CAAAA,CAAG,CAAGkB,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAV,CACA,GAAqB,QAAjB,QAAOhB,CAAAA,CAAG,CAAC,CAAD,CAAV,EAA8C,QAAjB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAA3C,CAA4D,CACxDc,CAAK,CAACM,WAAN,CAAkBxB,CAAG,CAACyB,cAAtB,CAAsCrB,CAAtC,EACAc,CAAK,CAACS,KAAN,CAAYC,MAAZ,GACAV,CAAK,CAACU,MAAN,EACH,CACJ,CAAC,MAAOF,CAAP,CAAY,CAEb,CACDgB,CAAS,CAAGvB,CAAQ,CAACC,KACxB,CACJ,CAfD,CAgBH,CA1FF,CA4FCuB,eAAe,CAAE,yBAAS1B,CAAT,CAAmB2B,CAAnB,CAA2BC,CAA3B,CAAmC,CAEhD,GAAI1B,CAAAA,CAAQ,CAAGd,QAAQ,CAACC,cAAT,CAAwBW,CAAxB,CAAf,CACA,GAAIE,CAAQ,CAACC,KAAT,EAAoC,EAAlB,EAAAD,CAAQ,CAACC,KAA/B,CAA4C,CAGxC,GAAIC,CAAAA,CAAM,CAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAb,CACA,GAAI,CACAwB,CAAM,CAACpB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCJ,CAAM,CAAC,CAAD,CAA7C,EACAwB,CAAM,CAACrB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCJ,CAAM,CAAC,CAAD,CAA7C,CACH,CAAC,MAAOK,CAAP,CAAY,CAEb,CACDkB,CAAM,CAACjB,KAAP,CAAaC,MAAb,GACAgB,CAAM,CAAChB,MAAP,GACAiB,CAAM,CAAClB,KAAP,CAAaC,MAAb,GACAiB,CAAM,CAACjB,MAAP,EACH,CAjB+C,GAmB5CkB,CAAAA,CAAS,CAAGF,CAAM,CAACd,CAAP,EAnBgC,CAoB5CiB,CAAS,CAAGH,CAAM,CAACZ,CAAP,EApBgC,CAuBhDY,CAAM,CAACjB,KAAP,CAAaM,EAAb,CAAgB,QAAhB,CAA0B,UAAW,CAEjC,GAAIa,CAAS,GAAKF,CAAM,CAACd,CAAP,EAAd,EAA4BiB,CAAS,GAAKH,CAAM,CAACZ,CAAP,EAA9C,CAA0D,CACtD,GAAI5B,CAAAA,CAAG,CAAGkB,IAAI,CAACY,SAAL,CAAe,CAAC,CAACU,CAAM,CAACd,CAAP,EAAD,CAAac,CAAM,CAACZ,CAAP,EAAb,CAAD,CAA0B,CAACa,CAAM,CAACf,CAAP,EAAD,CAAae,CAAM,CAACb,CAAP,EAAb,CAA1B,CAAf,CAAV,CACAc,CAAS,GAAT,CACAC,CAAS,GAAT,CACA,GAAI5B,CAAQ,CAACC,KAAT,EAAkBhB,CAAtB,CAA2B,CAGvBe,CAAQ,CAACC,KAAT,CAAiBhB,CAAjB,CAIA,GAAwD,CAAC,CAArD,GAAA+B,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,aAAjC,CAAJ,CAA4D,CACxD,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,KAAJ,CAAU,QAAV,CAAR,CACArB,CAAQ,CAACsB,aAAT,CAAuBF,CAAvB,CACH,CACJ,CACJ,CACJ,CAnBD,EAvBgD,GA4C5CS,CAAAA,CAAS,CAAGH,CAAM,CAACf,CAAP,EA5CgC,CA6C5CmB,CAAS,CAAGJ,CAAM,CAACb,CAAP,EA7CgC,CAgDhDa,CAAM,CAAClB,KAAP,CAAaM,EAAb,CAAgB,QAAhB,CAA0B,UAAW,CAEjC,GAAIe,CAAS,GAAKH,CAAM,CAACf,CAAP,EAAd,EAA4BmB,CAAS,GAAKJ,CAAM,CAACb,CAAP,EAA9C,CAA0D,CACtD,GAAI5B,CAAAA,CAAG,CAAGkB,IAAI,CAACY,SAAL,CAAe,CAAC,CAACU,CAAM,CAACd,CAAP,EAAD,CAAac,CAAM,CAACZ,CAAP,EAAb,CAAD,CAA0B,CAACa,CAAM,CAACf,CAAP,EAAD,CAAae,CAAM,CAACb,CAAP,EAAb,CAA1B,CAAf,CAAV,CACAgB,CAAS,GAAT,CACAC,CAAS,GAAT,CACA,GAAI9B,CAAQ,CAACC,KAAT,EAAkBhB,CAAtB,CAA2B,CAGvBe,CAAQ,CAACC,KAAT,CAAiBhB,CAAjB,CAIA,GAAwD,CAAC,CAArD,GAAA+B,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,aAAjC,CAAJ,CAA4D,CACxD,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,KAAJ,CAAU,QAAV,CAAR,CACArB,CAAQ,CAACsB,aAAT,CAAuBF,CAAvB,CACH,CACJ,CACJ,CACJ,CAnBD,EAqBA,GAAIG,CAAAA,CAAS,CAAGpB,IAAI,CAACY,SAAL,CAAe,CAAC,CAACU,CAAM,CAACd,CAAP,EAAD,CAAac,CAAM,CAACZ,CAAP,EAAb,CAAD,CAA0B,CAACa,CAAM,CAACf,CAAP,EAAD,CAAae,CAAM,CAACb,CAAP,EAAb,CAA1B,CAAf,CAAhB,CAGAb,CAAQ,CAACR,gBAAT,CAA0B,OAA1B,CAAmC,UAAY,CAC3C,GAAIQ,CAAQ,CAACC,KAAT,EAAkBsB,CAAtB,CAAiC,CAE7B,GAAI,CACA,GAAItC,CAAAA,CAAG,CAAGkB,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAV,CACA,GAAwB,QAApB,QAAOhB,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,CAC9DwC,CAAM,CAACpB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCrB,CAAG,CAAC,CAAD,CAA1C,CACH,CACD,GAAwB,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,CAC9DyC,CAAM,CAACrB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCrB,CAAG,CAAC,CAAD,CAA1C,EACAwC,CAAM,CAACjB,KAAP,CAAaC,MAAb,GACAgB,CAAM,CAAChB,MAAP,GACAiB,CAAM,CAAClB,KAAP,CAAaC,MAAb,GACAiB,CAAM,CAACjB,MAAP,EACH,CACJ,CAAC,MAAOF,CAAP,CAAY,CAEb,CACDgB,CAAS,CAAGvB,CAAQ,CAACC,KACxB,CACJ,CApBD,EAqBAD,CAAQ,CAACR,gBAAT,CAA0B,QAA1B,CAAoC,UAAY,CAC5C,GAAIQ,CAAQ,CAACC,KAAT,EAAkBsB,CAAtB,CAAiC,CAE7B,GAAI,CACA,GAAItC,CAAAA,CAAG,CAAGkB,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAV,CACA,GAAwB,QAApB,QAAOhB,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,CAC9DwC,CAAM,CAACpB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCrB,CAAG,CAAC,CAAD,CAA1C,CAEH,CACD,GAAwB,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,CAC9DyC,CAAM,CAACrB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCrB,CAAG,CAAC,CAAD,CAA1C,EACAwC,CAAM,CAACjB,KAAP,CAAaC,MAAb,GACAgB,CAAM,CAAChB,MAAP,GACAiB,CAAM,CAAClB,KAAP,CAAaC,MAAb,GACAiB,CAAM,CAACjB,MAAP,EACH,CACJ,CAAC,MAAOF,CAAP,CAAY,CAEb,CACDgB,CAAS,CAAGvB,CAAQ,CAACC,KACxB,CACJ,CArBD,CAuBH,CAhNF,CAkNC8B,mBAAmB,CAAE,6BAASjC,CAAT,CAAmB2B,CAAnB,CAA2BC,CAA3B,CAAmC,CAEpD,GAAI1B,CAAAA,CAAQ,CAAGd,QAAQ,CAACC,cAAT,CAAwBW,CAAxB,CAAf,CACA,GAAIE,CAAQ,CAACC,KAAT,EAAoC,EAAlB,EAAAD,CAAQ,CAACC,KAA/B,CAA4C,CAGxC,GAAIC,CAAAA,CAAM,CAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAb,CACA,GAAI,CACAwB,CAAM,CAACpB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCJ,CAAM,CAAC,CAAD,CAA7C,EACA,GAAI8B,CAAAA,CAAC,CAAG,CAAC9B,CAAM,CAAC,CAAD,CAAN,CAAU,CAAV,EAAeA,CAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAhB,CAA8BA,CAAM,CAAC,CAAD,CAAN,CAAU,CAAV,EAAeA,CAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAA7C,CAAR,CACAwB,CAAM,CAACrB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuC0B,CAAvC,CACH,CAAC,MAAOzB,CAAP,CAAY,CAEb,CACDkB,CAAM,CAACjB,KAAP,CAAaC,MAAb,GACAgB,CAAM,CAAChB,MAAP,GACAiB,CAAM,CAAClB,KAAP,CAAaC,MAAb,GACAiB,CAAM,CAACjB,MAAP,EACH,CAlBmD,GAoBhDkB,CAAAA,CAAS,CAAGF,CAAM,CAACd,CAAP,EApBoC,CAqBhDiB,CAAS,CAAGH,CAAM,CAACZ,CAAP,EArBoC,CAwBpDY,CAAM,CAACjB,KAAP,CAAaM,EAAb,CAAgB,QAAhB,CAA0B,UAAW,CAEjC,GAAIa,CAAS,GAAKF,CAAM,CAACd,CAAP,EAAd,EAA4BiB,CAAS,GAAKH,CAAM,CAACZ,CAAP,EAA9C,CAA0D,CACtD,GAAI5B,CAAAA,CAAG,CAAGkB,IAAI,CAACY,SAAL,CAAe,CAAC,CAACU,CAAM,CAACd,CAAP,EAAD,CAAac,CAAM,CAACZ,CAAP,EAAb,CAAD,CAA0B,CAACa,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAd,CAA0Be,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAvC,CAA1B,CAAf,CAAV,CACAc,CAAS,GAAT,CACAC,CAAS,GAAT,CACA,GAAI5B,CAAQ,CAACC,KAAT,EAAkBhB,CAAtB,CAA2B,CAGvBe,CAAQ,CAACC,KAAT,CAAiBhB,CAAjB,CAIA,GAAwD,CAAC,CAArD,GAAA+B,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,aAAjC,CAAJ,CAA4D,CACxD,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,KAAJ,CAAU,QAAV,CAAR,CACArB,CAAQ,CAACsB,aAAT,CAAuBF,CAAvB,CACH,CACJ,CACJ,CACJ,CAnBD,EAxBoD,GA6ChDS,CAAAA,CAAS,CAAGH,CAAM,CAACf,CAAP,EA7CoC,CA8ChDmB,CAAS,CAAGJ,CAAM,CAACb,CAAP,EA9CoC,CAiDpDa,CAAM,CAAClB,KAAP,CAAaM,EAAb,CAAgB,QAAhB,CAA0B,UAAW,CAEjC,GAAIe,CAAS,GAAKH,CAAM,CAACf,CAAP,EAAd,EAA4BmB,CAAS,GAAKJ,CAAM,CAACb,CAAP,EAA9C,CAA0D,CACtD,GAAI5B,CAAAA,CAAG,CAAGkB,IAAI,CAACY,SAAL,CAAe,CAAC,CAACU,CAAM,CAACd,CAAP,EAAD,CAAac,CAAM,CAACZ,CAAP,EAAb,CAAD,CAA0B,CAACa,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAd,CAA0Be,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAvC,CAA1B,CAAf,CAAV,CACAgB,CAAS,GAAT,CACAC,CAAS,GAAT,CACA,GAAI9B,CAAQ,CAACC,KAAT,EAAkBhB,CAAtB,CAA2B,CAGvBe,CAAQ,CAACC,KAAT,CAAiBhB,CAAjB,CAIA,GAAwD,CAAC,CAArD,GAAA+B,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,aAAjC,CAAJ,CAA4D,CACxD,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,KAAJ,CAAU,QAAV,CAAR,CACArB,CAAQ,CAACsB,aAAT,CAAuBF,CAAvB,CACH,CACJ,CACJ,CACJ,CAnBD,EAqBA,GAAIG,CAAAA,CAAS,CAAGpB,IAAI,CAACY,SAAL,CAAe,CAAC,CAACU,CAAM,CAACd,CAAP,EAAD,CAAac,CAAM,CAACZ,CAAP,EAAb,CAAD,CAA0B,CAACa,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAd,CAA0Be,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAvC,CAA1B,CAAf,CAAhB,CAGAb,CAAQ,CAACR,gBAAT,CAA0B,OAA1B,CAAmC,UAAY,CAC3C,GAAIQ,CAAQ,CAACC,KAAT,EAAkBsB,CAAtB,CAAiC,CAE7B,GAAI,CACA,GAAItC,CAAAA,CAAG,CAAGkB,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAV,CACA,GAAwB,QAApB,QAAOhB,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,CAC9DwC,CAAM,CAACpB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCrB,CAAG,CAAC,CAAD,CAA1C,CACH,CACD,GAAwB,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,CAC9D,GAAI+C,CAAAA,CAAC,CAAG,CAAC/C,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,EAAYA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAb,CAAwBA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,EAAYA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAApC,CAAR,CACAyC,CAAM,CAACrB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuC0B,CAAvC,EACAP,CAAM,CAACjB,KAAP,CAAaC,MAAb,GACAgB,CAAM,CAAChB,MAAP,GACAiB,CAAM,CAAClB,KAAP,CAAaC,MAAb,GACAiB,CAAM,CAACjB,MAAP,EACH,CACJ,CAAC,MAAOF,CAAP,CAAY,CAEb,CACDgB,CAAS,CAAGvB,CAAQ,CAACC,KACxB,CACJ,CArBD,EAsBAD,CAAQ,CAACR,gBAAT,CAA0B,QAA1B,CAAoC,UAAY,CAC5C,GAAIQ,CAAQ,CAACC,KAAT,EAAkBsB,CAAtB,CAAiC,CAE7B,GAAI,CACA,GAAItC,CAAAA,CAAG,CAAGkB,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAV,CACA,GAAwB,QAApB,QAAOhB,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,CAC9DwC,CAAM,CAACpB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCrB,CAAG,CAAC,CAAD,CAA1C,CACP,CACG,GAAwB,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,CAC9D,GAAI+C,CAAAA,CAAC,CAAG,CAAC/C,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,EAAYA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAb,CAAwBA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,EAAYA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAApC,CAAR,CACAyC,CAAM,CAACrB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuC0B,CAAvC,EACAP,CAAM,CAACjB,KAAP,CAAaC,MAAb,GACAgB,CAAM,CAAChB,MAAP,GACAiB,CAAM,CAAClB,KAAP,CAAaC,MAAb,GACAiB,CAAM,CAACjB,MAAP,EACH,CACJ,CAAC,MAAOF,CAAP,CAAY,CAEb,CACDgB,CAAS,CAAGvB,CAAQ,CAACC,KACxB,CACJ,CArBD,CAsBH,CAvUF,CAyUCgC,oBAAoB,CAAE,8BAASnC,CAAT,CAAmB2B,CAAnB,CAA2BC,CAA3B,CAAmC,CAErD,GAAI1B,CAAAA,CAAQ,CAAGd,QAAQ,CAACC,cAAT,CAAwBW,CAAxB,CAAf,CACA,GAAIE,CAAQ,CAACC,KAAT,EAAoC,EAAlB,EAAAD,CAAQ,CAACC,KAA/B,CAA4C,CAIxC,GAAIC,CAAAA,CAAM,CAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAb,CACA,GAAI,CACAwB,CAAM,CAACpB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCJ,CAAM,CAAC,CAAD,CAA7C,EADA,GAEIgC,CAAAA,CAAK,CAAGhC,CAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAFZ,CAGIiC,CAAG,CAAGjC,CAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAHV,CAII8B,CAAC,CAAG,CAAC9B,CAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAD,CAAeA,CAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAf,CAJR,CAKA,GAAU,CAAN,CAAAiC,CAAJ,CAAa,CACTH,CAAC,CAAC,CAAD,CAAD,CAAOA,CAAC,CAAC,CAAD,CAAD,CAAOG,CAAG,CAACC,IAAI,CAACC,GAAL,CAASH,CAAT,CAAlB,CACAF,CAAC,CAAC,CAAD,CAAD,CAAOA,CAAC,CAAC,CAAD,CAAD,CAAOG,CAAG,CAACC,IAAI,CAACE,GAAL,CAASJ,CAAT,CACrB,CACDR,CAAM,CAACrB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuC0B,CAAvC,CACH,CAAC,MAAOzB,CAAP,CAAY,CAEb,CACDkB,CAAM,CAACjB,KAAP,CAAaC,MAAb,GACAgB,CAAM,CAAChB,MAAP,GACAiB,CAAM,CAAClB,KAAP,CAAaC,MAAb,GACAiB,CAAM,CAACjB,MAAP,EACH,CAzBoD,GA2BjDkB,CAAAA,CAAS,CAAGF,CAAM,CAACd,CAAP,EA3BqC,CA4BjDiB,CAAS,CAAGH,CAAM,CAACZ,CAAP,EA5BqC,CA+BrDY,CAAM,CAACjB,KAAP,CAAaM,EAAb,CAAgB,QAAhB,CAA0B,UAAW,CAEjC,GAAIa,CAAS,GAAKF,CAAM,CAACd,CAAP,EAAd,EAA4BiB,CAAS,GAAKH,CAAM,CAACZ,CAAP,EAA9C,CAA0D,CACtD,GAAI5B,CAAAA,CAAG,CAAGkB,IAAI,CAACY,SAAL,CAAe,CAAC,CAACU,CAAM,CAACd,CAAP,EAAD,CAAac,CAAM,CAACZ,CAAP,EAAb,CAAD,CACzB,CAACuB,IAAI,CAACG,KAAL,CAAWb,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAxB,CAAoCa,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAjD,CAAD,CACAyB,IAAI,CAACI,IAAL,CAAU,CAACd,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAd,GAA2Be,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAxC,EAAsD,CAACe,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAd,GAA2Ba,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAxC,CAAhE,CADA,CADyB,CAAf,CAAV,CAGAc,CAAS,GAAT,CACAC,CAAS,GAAT,CACA,GAAI5B,CAAQ,CAACC,KAAT,EAAkBhB,CAAtB,CAA2B,CAGvBe,CAAQ,CAACC,KAAT,CAAiBhB,CAAjB,CAIA,GAAwD,CAAC,CAArD,GAAA+B,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,aAAjC,CAAJ,CAA4D,CACxD,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,KAAJ,CAAU,QAAV,CAAR,CACArB,CAAQ,CAACsB,aAAT,CAAuBF,CAAvB,CACH,CACJ,CACJ,CACJ,CArBD,EA/BqD,GAsDjDS,CAAAA,CAAS,CAAGH,CAAM,CAACf,CAAP,EAtDqC,CAuDjDmB,CAAS,CAAGJ,CAAM,CAACb,CAAP,EAvDqC,CA0DrDa,CAAM,CAAClB,KAAP,CAAaM,EAAb,CAAgB,QAAhB,CAA0B,UAAW,CAEjC,GAAIe,CAAS,GAAKH,CAAM,CAACf,CAAP,EAAd,EAA4BmB,CAAS,GAAKJ,CAAM,CAACb,CAAP,EAA9C,CAA0D,CACtD,GAAI5B,CAAAA,CAAG,CAAGkB,IAAI,CAACY,SAAL,CAAe,CAAC,CAACU,CAAM,CAACd,CAAP,EAAD,CAAac,CAAM,CAACZ,CAAP,EAAb,CAAD,CACzB,CAACuB,IAAI,CAACG,KAAL,CAAWb,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAxB,CAAoCa,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAjD,CAAD,CACAyB,IAAI,CAACI,IAAL,CAAU,CAACd,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAd,GAA2Be,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAxC,EAAsD,CAACe,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAd,GAA2Ba,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAxC,CAAhE,CADA,CADyB,CAAf,CAAV,CAGAgB,CAAS,GAAT,CACAC,CAAS,GAAT,CACA,GAAI9B,CAAQ,CAACC,KAAT,EAAkBhB,CAAtB,CAA2B,CAGvBe,CAAQ,CAACC,KAAT,CAAiBhB,CAAjB,CAIA,GAAwD,CAAC,CAArD,GAAA+B,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,aAAjC,CAAJ,CAA4D,CACxD,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,KAAJ,CAAU,QAAV,CAAR,CACArB,CAAQ,CAACsB,aAAT,CAAuBF,CAAvB,CACH,CACJ,CACJ,CACJ,CArBD,EAwBA,GAAIG,CAAAA,CAAS,CAAGpB,IAAI,CAACY,SAAL,CAAe,CAAC,CAACU,CAAM,CAACd,CAAP,EAAD,CAAac,CAAM,CAACZ,CAAP,EAAb,CAAD,CACvB,CAACuB,IAAI,CAACG,KAAL,CAAWb,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAxB,CAAoCa,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAjD,CAAD,CACAyB,IAAI,CAACI,IAAL,CAAU,CAACd,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAd,GAA2Be,CAAM,CAACf,CAAP,GAAac,CAAM,CAACd,CAAP,EAAxC,EAAsD,CAACe,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAd,GAA2Ba,CAAM,CAACb,CAAP,GAAaY,CAAM,CAACZ,CAAP,EAAxC,CAAhE,CADA,CADuB,CAAf,CAAhB,CAKAb,CAAQ,CAACR,gBAAT,CAA0B,OAA1B,CAAmC,UAAY,CAC3C,GAAIQ,CAAQ,CAACC,KAAT,EAAkBsB,CAAtB,CAAiC,CAE7B,GAAI,CACA,GAAItC,CAAAA,CAAG,CAAGkB,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAV,CACA,GAAwB,QAApB,QAAOhB,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,CAC9DwC,CAAM,CAACpB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCrB,CAAG,CAAC,CAAD,CAA1C,CACH,CACD,GAAwB,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,IAC1DiD,CAAAA,CAAK,CAAGjD,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CADkD,CAE1DkD,CAAG,CAAGlD,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAFoD,CAG1D+C,CAAC,CAAG,CAAC/C,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAD,CAAYA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAZ,CAHsD,CAI9D,GAAU,CAAN,CAAAkD,CAAJ,CAAa,CACTH,CAAC,CAAC,CAAD,CAAD,CAAOA,CAAC,CAAC,CAAD,CAAD,CAAOG,CAAG,CAACC,IAAI,CAACC,GAAL,CAASH,CAAT,CAAlB,CACAF,CAAC,CAAC,CAAD,CAAD,CAAOA,CAAC,CAAC,CAAD,CAAD,CAAOG,CAAG,CAACC,IAAI,CAACE,GAAL,CAASJ,CAAT,CACrB,CACDR,CAAM,CAACrB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuC0B,CAAvC,EACAP,CAAM,CAACjB,KAAP,CAAaC,MAAb,GACAgB,CAAM,CAAChB,MAAP,GACAiB,CAAM,CAAClB,KAAP,CAAaC,MAAb,GACAiB,CAAM,CAACjB,MAAP,EACH,CACJ,CAAC,MAAOF,CAAP,CAAY,CAEb,CACDgB,CAAS,CAAGvB,CAAQ,CAACC,KACxB,CACJ,CA3BD,EA4BAD,CAAQ,CAACR,gBAAT,CAA0B,QAA1B,CAAoC,UAAY,CAC5C,GAAIQ,CAAQ,CAACC,KAAT,EAAkBsB,CAAtB,CAAiC,CAE7B,GAAI,CACA,GAAItC,CAAAA,CAAG,CAAGkB,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAV,CACA,GAAwB,QAApB,QAAOhB,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,CAC9DwC,CAAM,CAACpB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuCrB,CAAG,CAAC,CAAD,CAA1C,CACH,CACD,GAAwB,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAP,EAAoD,QAApB,QAAOA,CAAAA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAA3C,CAAkE,IAC1DiD,CAAAA,CAAK,CAAGjD,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CADkD,CAE1DkD,CAAG,CAAGlD,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAFoD,CAG1D+C,CAAC,CAAG,CAAC/C,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAD,CAAYA,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAZ,CAHsD,CAI9D,GAAU,CAAN,CAAAkD,CAAJ,CAAa,CACTH,CAAC,CAAC,CAAD,CAAD,CAAOA,CAAC,CAAC,CAAD,CAAD,CAAOG,CAAG,CAACC,IAAI,CAACC,GAAL,CAASH,CAAT,CAAlB,CACAF,CAAC,CAAC,CAAD,CAAD,CAAOA,CAAC,CAAC,CAAD,CAAD,CAAOG,CAAG,CAACC,IAAI,CAACE,GAAL,CAASJ,CAAT,CACrB,CACDR,CAAM,CAACrB,WAAP,CAAmBxB,CAAG,CAACyB,cAAvB,CAAuC0B,CAAvC,EACAP,CAAM,CAACjB,KAAP,CAAaC,MAAb,GACAgB,CAAM,CAAChB,MAAP,GACAiB,CAAM,CAAClB,KAAP,CAAaC,MAAb,GACAiB,CAAM,CAACjB,MAAP,EACH,CACJ,CAAC,MAAOF,CAAP,CAAY,CAEb,CACDgB,CAAS,CAAGvB,CAAQ,CAACC,KACxB,CACJ,CA3BD,CA6BH,CAzdF,CA2dCwC,WAAW,CAAE,qBAAS3C,CAAT,CAAmB4C,CAAnB,CAA2B,CAEpC,GAAI1C,CAAAA,CAAQ,CAAGd,QAAQ,CAACC,cAAT,CAAwBW,CAAxB,CAAf,CACA,GAAIE,CAAQ,CAACC,KAAT,EAAoC,EAAlB,EAAAD,CAAQ,CAACC,KAA/B,CAA4C,CAGxC,GAAI,CACAyC,CAAM,CAACC,QAAP,CAAgBxC,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAhB,CACH,CAAC,MAAOM,CAAP,CAAY,CAEb,CACDmC,CAAM,CAAClC,KAAP,CAAaC,MAAb,GACAiC,CAAM,CAACjC,MAAP,EACH,CAED,GAAImC,CAAAA,CAAY,CAAGF,CAAM,CAACG,KAAP,EAAnB,CAGAH,CAAM,CAAClC,KAAP,CAAaM,EAAb,CAAgB,QAAhB,CAA0B,UAAW,CAEjC,GAAI8B,CAAY,EAAIF,CAAM,CAACG,KAAP,EAApB,CAAoC,CAChC,GAAI5D,CAAAA,CAAG,CAAGkB,IAAI,CAACY,SAAL,CAAe2B,CAAM,CAACG,KAAP,EAAf,CAAV,CACAD,CAAY,GAAZ,CACA,GAAI5C,CAAQ,CAACC,KAAT,EAAkBhB,CAAtB,CAA2B,CAGvBe,CAAQ,CAACC,KAAT,CAAiBhB,CAAjB,CAIA,GAAwD,CAAC,CAArD,GAAA+B,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,aAAjC,CAAJ,CAA4D,CACxD,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,KAAJ,CAAU,QAAV,CAAR,CACArB,CAAQ,CAACsB,aAAT,CAAuBF,CAAvB,CACH,CACJ,CACJ,CACJ,CAlBD,EAoBA,GAAIG,CAAAA,CAAS,CAAGpB,IAAI,CAACY,SAAL,CAAe2B,CAAM,CAACG,KAAP,EAAf,CAAhB,CAGA7C,CAAQ,CAACR,gBAAT,CAA0B,OAA1B,CAAmC,UAAY,CAC3C,GAAIQ,CAAQ,CAACC,KAAT,GAAmBsB,CAAvB,CAAkC,CAE9B,GAAI,CACA,GAAItC,CAAAA,CAAG,CAAGkB,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAV,CACA,GAAkB,QAAd,QAAOhB,CAAAA,CAAX,CAA4B,CACxByD,CAAM,CAACC,QAAP,CAAgB1D,CAAhB,EACAyD,CAAM,CAAClC,KAAP,CAAaC,MAAb,GACAiC,CAAM,CAACjC,MAAP,EACH,CACJ,CAAC,MAAOF,CAAP,CAAY,CAEb,CACDgB,CAAS,CAAGvB,CAAQ,CAACC,KACxB,CACJ,CAfD,EAgBAD,CAAQ,CAACR,gBAAT,CAA0B,QAA1B,CAAoC,UAAY,CAC5C,GAAIQ,CAAQ,CAACC,KAAT,GAAmBsB,CAAvB,CAAkC,CAE9B,GAAI,CACA,GAAItC,CAAAA,CAAG,CAAGkB,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACC,KAApB,CAAV,CACA,GAAkB,QAAd,QAAOhB,CAAAA,CAAX,CAA4B,CACxByD,CAAM,CAACC,QAAP,CAAgB1D,CAAhB,EACAyD,CAAM,CAAClC,KAAP,CAAaC,MAAb,GACAiC,CAAM,CAACjC,MAAP,EACH,CACJ,CAAC,MAAOF,CAAP,CAAY,CAEb,CACDgB,CAAS,CAAGvB,CAAQ,CAACC,KACxB,CACJ,CAfD,CAgBH,CApiBF,CAsiBN,CAviBC,CAAN","sourcesContent":["/// NOTE! This code does eval() a string with no validation.\n// So lets hope this is the correct way to name a Moodle AMD module\ndefine([\"qtype_stack/jsxgraphcore-lazy\"], function(JXG) {\n    return {\n            find_input_id: function(divid, name) {\n                var tmp = document.getElementById(divid);\n                while ((tmp = tmp.parentElement) && !(tmp.classList.contains(\"formulation\") && tmp.parentElement.classList.contains(\"content\"))) {}\n                tmp = tmp.querySelector('input[id$=\"_' + name + '\"]');\n                // We use this function to also tie into the change tracking of Moodle.\n                // We do it here so that all possible code written by authors will also be tracked.\n                // The author just needst to generate a change event they do not need to know how the VLE works.\n                tmp.addEventListener('change', function(e) {\n                    M.core_formchangechecker.set_form_changed();\n                });\n                return tmp.id;\n            },\n\n            bind_point: function(inputRef, point) {\n                // This function takes a JXG point object and binds its coordinates to a given input.\n                var theInput = document.getElementById(inputRef);\n                if (theInput.value && theInput.value != '') {\n                    // if a value exists move the point to it.\n                    // the value is stored as a list of float values e.g. \"[1,0.43]\"\n                    var coords = JSON.parse(theInput.value);\n                    try {\n                        point.setPosition(JXG.COORDS_BY_USER, coords);\n                    } catch (err) {\n                        // We do not care about this.\n                    }\n                    point.board.update();\n                    point.update();\n                }\n\n                var initialX = point.X();\n                var initialY = point.Y();\n\n                // Then the binding from graph to input.\n                point.board.on('update', function() {\n                    // We do not want to set the input before the point actually moves.\n                    if (initialX !== point.X() || initialY !== point.Y()) {\n                        var tmp = JSON.stringify([point.X(), point.Y()]);\n                        initialX = false; // ignore these after initial change.\n                        initialY = false;\n                        if (theInput.value != tmp) {\n                            // Avoid resetting this, as some event models migth trigger\n                            // change events even when no change actually happens.\n                            theInput.value = tmp;\n                            // As we set the inputs value programmatically no events\n                            // will be fired. But for two way binding we want to fire them...\n                            // However we do not need this in the preview where it annoys people.\n                            if (window.location.pathname.indexOf('preview.php') === -1) {\n                                var e = new Event('change');\n                                theInput.dispatchEvent(e);\n                            }\n                        }\n                    }\n                });\n\n                var lastValue = JSON.stringify([point.X(), point.Y()]);\n\n                // Then from input to graph. 'input' for live stuff and 'change' for other.\n                theInput.addEventListener('input', function(e) {\n                    if (theInput.value != lastValue) {\n                        // Only when something changed.\n                        try {\n                            var tmp = JSON.parse(theInput.value);\n                            if (typeof tmp[0] == 'number' && typeof tmp[1] == 'number') {\n                                point.setPosition(JXG.COORDS_BY_USER, tmp);\n                                point.board.update();\n                                point.update();\n                            }\n                        } catch (err) {\n                            // We do not care about this.\n                        }\n                        lastValue = theInput.value;\n                    }\n                });\n                theInput.addEventListener('change', function(e) {\n                    if (theInput.value != lastValue) {\n                        // Only when something changed.\n                        try {\n                            var tmp = JSON.parse(theInput.value);\n                            if (typeof tmp[0] == 'number' && typeof tmp[1] == 'number') {\n                                point.setPosition(JXG.COORDS_BY_USER, tmp);\n                                point.board.update();\n                                point.update();\n                            }\n                        } catch (err) {\n                            // We do not care about this.\n                        }\n                        lastValue = theInput.value;\n                    }\n                });\n            },\n\n            bind_point_dual: function(inputRef, point1, point2) {\n                // This function takes two JXG point object and binds their coordinates to a given input.\n                var theInput = document.getElementById(inputRef);\n                if (theInput.value && theInput.value != '') {\n                    // if a value exists move the points there.\n                    // the value is stored as a list of float values e.g. \"[[1,0.43],[2.1,-4]]\"\n                    var coords = JSON.parse(theInput.value);\n                    try {\n                        point1.setPosition(JXG.COORDS_BY_USER, coords[0]);\n                        point2.setPosition(JXG.COORDS_BY_USER, coords[1]);\n                    } catch (err) {\n                        // We do not care about this.\n                    }\n                    point1.board.update();\n                    point1.update();\n                    point2.board.update();\n                    point2.update();\n                }\n\n                var initial1X = point1.X();\n                var initial1Y = point1.Y();\n\n                // Then the binding from graph to input.\n                point1.board.on('update', function() {\n                    // We do not want to set the input before the point actually moves.\n                    if (initial1X !== point1.X() || initial1Y !== point1.Y()) {\n                        var tmp = JSON.stringify([[point1.X(), point1.Y()],[point2.X(), point2.Y()]]);\n                        initial1X = false; // ignore these after initial change.\n                        initial1Y = false;\n                        if (theInput.value != tmp) {\n                            // Avoid resetting this, as some event models migth trigger\n                            // change events even when no change actually happens.\n                            theInput.value = tmp;\n                            // As we set the inputs value programmatically no events\n                            // will be fired. But for two way binding we want to fire them...\n                            // However we do not need this in the preview where it annoys people.\n                            if (window.location.pathname.indexOf('preview.php') === -1) {\n                                var e = new Event('change');\n                                theInput.dispatchEvent(e);\n                            }\n                        }\n                    }\n                });\n\n                var initial2X = point2.X();\n                var initial2Y = point2.Y();\n\n                // Then the binding from graph to input.\n                point2.board.on('update', function() {\n                    // We do not want to set the input before the point actually moves.\n                    if (initial2X !== point2.X() || initial2Y !== point2.Y()) {\n                        var tmp = JSON.stringify([[point1.X(), point1.Y()],[point2.X(), point2.Y()]]);\n                        initial2X = false; // ignore these after initial change.\n                        initial2Y = false;\n                        if (theInput.value != tmp) {\n                            // Avoid resetting this, as some event models migth trigger\n                            // change events even when no change actually happens.\n                            theInput.value = tmp;\n                            // As we set the inputs value programmatically no events\n                            // will be fired. But for two way binding we want to fire them...\n                            // However we do not need this in the preview where it annoys people.\n                            if (window.location.pathname.indexOf('preview.php') === -1) {\n                                var e = new Event('change');\n                                theInput.dispatchEvent(e);\n                            }\n                        }\n                    }\n                });\n\n                var lastValue = JSON.stringify([[point1.X(), point1.Y()],[point2.X(), point2.Y()]]);\n\n                // Then from input to graph. 'input' for live stuff and 'change' for other.\n                theInput.addEventListener('input', function(e) {\n                    if (theInput.value != lastValue) {\n                        // Only when something changed.\n                        try {\n                            var tmp = JSON.parse(theInput.value);\n                            if (typeof tmp[0][0] == 'number' && typeof tmp[0][1] == 'number') {\n                                point1.setPosition(JXG.COORDS_BY_USER, tmp[0]);\n                            }\n                            if (typeof tmp[1][0] == 'number' && typeof tmp[1][1] == 'number') {\n                                point2.setPosition(JXG.COORDS_BY_USER, tmp[1]);\n                                point1.board.update();\n                                point1.update();\n                                point2.board.update();\n                                point2.update();\n                            }\n                        } catch (err) {\n                            // We do not care about this.\n                        }\n                        lastValue = theInput.value;\n                    }\n                });\n                theInput.addEventListener('change', function(e) {\n                    if (theInput.value != lastValue) {\n                        // Only when something changed.\n                        try {\n                            var tmp = JSON.parse(theInput.value);\n                            if (typeof tmp[0][0] == 'number' && typeof tmp[0][1] == 'number') {\n                                point1.setPosition(JXG.COORDS_BY_USER, tmp[0]);\n\n                            }\n                            if (typeof tmp[1][0] == 'number' && typeof tmp[1][1] == 'number') {\n                                point2.setPosition(JXG.COORDS_BY_USER, tmp[1]);\n                                point1.board.update();\n                                point1.update();\n                                point2.board.update();\n                                point2.update();\n                            }\n                        } catch (err) {\n                            // We do not care about this.\n                        }\n                        lastValue = theInput.value;\n                    }\n                });\n\n            },\n\n            bind_point_relative: function(inputRef, point1, point2) {\n                // This function takes two JXG point object and binds their coordinates to a given input.\n                var theInput = document.getElementById(inputRef);\n                if (theInput.value && theInput.value != '') {\n                    // if a value exists move the points there.\n                    // the value is stored as a list of float values e.g. \"[[1,0.43],[2.1,-4]]\"\n                    var coords = JSON.parse(theInput.value);\n                    try {\n                        point1.setPosition(JXG.COORDS_BY_USER, coords[0]);\n                        var b = [coords[0][0] + coords[1][0], coords[0][1] + coords[1][1]];\n                        point2.setPosition(JXG.COORDS_BY_USER, b);\n                    } catch (err) {\n                        // We do not care about this.\n                    }\n                    point1.board.update();\n                    point1.update();\n                    point2.board.update();\n                    point2.update();\n                }\n\n                var initial1X = point1.X();\n                var initial1Y = point1.Y();\n\n                // Then the binding from graph to input.\n                point1.board.on('update', function() {\n                    // We do not want to set the input before the point actually moves.\n                    if (initial1X !== point1.X() || initial1Y !== point1.Y()) {\n                        var tmp = JSON.stringify([[point1.X(), point1.Y()],[point2.X() - point1.X(), point2.Y() - point1.Y()]]);\n                        initial1X = false; // ignore these after initial change.\n                        initial1Y = false;\n                        if (theInput.value != tmp) {\n                            // Avoid resetting this, as some event models migth trigger\n                            // change events even when no change actually happens.\n                            theInput.value = tmp;\n                            // As we set the inputs value programmatically no events\n                            // will be fired. But for two way binding we want to fire them...\n                            // However we do not need this in the preview where it annoys people.\n                            if (window.location.pathname.indexOf('preview.php') === -1) {\n                                var e = new Event('change');\n                                theInput.dispatchEvent(e);\n                            }\n                        }\n                    }\n                });\n\n                var initial2X = point2.X();\n                var initial2Y = point2.Y();\n\n                // Then the binding from graph to input.\n                point2.board.on('update', function() {\n                    // We do not want to set the input before the point actually moves.\n                    if (initial2X !== point2.X() || initial2Y !== point2.Y()) {\n                        var tmp = JSON.stringify([[point1.X(), point1.Y()],[point2.X() - point1.X(), point2.Y() - point1.Y()]]);\n                        initial2X = false; // ignore these after initial change.\n                        initial2Y = false;\n                        if (theInput.value != tmp) {\n                            // Avoid resetting this, as some event models migth trigger\n                            // change events even when no change actually happens.\n                            theInput.value = tmp;\n                            // As we set the inputs value programmatically no events\n                            // will be fired. But for two way binding we want to fire them...\n                            // However we do not need this in the preview where it annoys people.\n                            if (window.location.pathname.indexOf('preview.php') === -1) {\n                                var e = new Event('change');\n                                theInput.dispatchEvent(e);\n                            }\n                        }\n                    }\n                });\n\n                var lastValue = JSON.stringify([[point1.X(), point1.Y()],[point2.X() - point1.X(), point2.Y() - point1.Y()]]);\n\n                // Then from input to graph. 'input' for live stuff and 'change' for other.\n                theInput.addEventListener('input', function(e) {\n                    if (theInput.value != lastValue) {\n                        // Only when something changed.\n                        try {\n                            var tmp = JSON.parse(theInput.value);\n                            if (typeof tmp[0][0] == 'number' && typeof tmp[0][1] == 'number') {\n                                point1.setPosition(JXG.COORDS_BY_USER, tmp[0]);\n                            }\n                            if (typeof tmp[1][0] == 'number' && typeof tmp[1][1] == 'number') {\n                                var b = [tmp[0][0] + tmp[1][0], tmp[0][1] + tmp[1][1]];\n                                point2.setPosition(JXG.COORDS_BY_USER, b);\n                                point1.board.update();\n                                point1.update();\n                                point2.board.update();\n                                point2.update();\n                            }\n                        } catch (err) {\n                            // We do not care about this.\n                        }\n                        lastValue = theInput.value;\n                    }\n                });\n                theInput.addEventListener('change', function(e) {\n                    if (theInput.value != lastValue) {\n                        // Only when something changed.\n                        try {\n                            var tmp = JSON.parse(theInput.value);\n                            if (typeof tmp[0][0] == 'number' && typeof tmp[0][1] == 'number') {\n                                point1.setPosition(JXG.COORDS_BY_USER, tmp[0]);\n                        }\n                            if (typeof tmp[1][0] == 'number' && typeof tmp[1][1] == 'number') {\n                                var b = [tmp[0][0] + tmp[1][0], tmp[0][1] + tmp[1][1]];\n                                point2.setPosition(JXG.COORDS_BY_USER, b);\n                                point1.board.update();\n                                point1.update();\n                                point2.board.update();\n                                point2.update();\n                            }\n                        } catch (err) {\n                            // We do not care about this.\n                        }\n                        lastValue = theInput.value;\n                    }\n                });\n            },\n\n            bind_point_direction: function(inputRef, point1, point2) {\n                // This function takes two JXG point object and binds their coordinates to a given input.\n                var theInput = document.getElementById(inputRef);\n                if (theInput.value && theInput.value != '') {\n                    // if a value exists move the points there.\n                    // the value is stored as a list of float values e.g. \"[[1,0.43],[2.1,1.1]]\"\n                    // The second pair is now the angle in radians and the length.\n                    var coords = JSON.parse(theInput.value);\n                    try {\n                        point1.setPosition(JXG.COORDS_BY_USER, coords[0]);\n                        var angle = coords[1][0];\n                        var len = coords[1][1];\n                        var b = [coords[0][0], coords[0][1]];\n                        if (len > 0) {\n                            b[0] = b[0] + len*Math.cos(angle);\n                            b[1] = b[1] + len*Math.sin(angle);\n                        }\n                        point2.setPosition(JXG.COORDS_BY_USER, b);\n                    } catch (err) {\n                        // We do not care about this.\n                    }\n                    point1.board.update();\n                    point1.update();\n                    point2.board.update();\n                    point2.update();\n                }\n\n                var initial1X = point1.X();\n                var initial1Y = point1.Y();\n\n                // Then the binding from graph to input.\n                point1.board.on('update', function() {\n                    // We do not want to set the input before the point actually moves.\n                    if (initial1X !== point1.X() || initial1Y !== point1.Y()) {\n                        var tmp = JSON.stringify([[point1.X(), point1.Y()],\n                        [Math.atan2(point2.Y() - point1.Y(), point2.X() - point1.X()),\n                        Math.sqrt((point2.X() - point1.X())*(point2.X() - point1.X()) + (point2.Y() - point1.Y())*(point2.Y() - point1.Y()))]]);\n                        initial1X = false; // ignore these after initial change.\n                        initial1Y = false;\n                        if (theInput.value != tmp) {\n                            // Avoid resetting this, as some event models migth trigger\n                            // change events even when no change actually happens.\n                            theInput.value = tmp;\n                            // As we set the inputs value programmatically no events\n                            // will be fired. But for two way binding we want to fire them...\n                            // However we do not need this in the preview where it annoys people.\n                            if (window.location.pathname.indexOf('preview.php') === -1) {\n                                var e = new Event('change');\n                                theInput.dispatchEvent(e);\n                            }\n                        }\n                    }\n                });\n\n                var initial2X = point2.X();\n                var initial2Y = point2.Y();\n\n                // Then the binding from graph to input.\n                point2.board.on('update', function() {\n                    // We do not want to set the input before the point actually moves.\n                    if (initial2X !== point2.X() || initial2Y !== point2.Y()) {\n                        var tmp = JSON.stringify([[point1.X(), point1.Y()],\n                        [Math.atan2(point2.Y() - point1.Y(), point2.X() - point1.X()),\n                        Math.sqrt((point2.X() - point1.X())*(point2.X() - point1.X()) + (point2.Y() - point1.Y())*(point2.Y() - point1.Y()))]]);\n                        initial2X = false; // ignore these after initial change.\n                        initial2Y = false;\n                        if (theInput.value != tmp) {\n                            // Avoid resetting this, as some event models migth trigger\n                            // change events even when no change actually happens.\n                            theInput.value = tmp;\n                            // As we set the inputs value programmatically no events\n                            // will be fired. But for two way binding we want to fire them...\n                            // However we do not need this in the preview where it annoys people.\n                            if (window.location.pathname.indexOf('preview.php') === -1) {\n                                var e = new Event('change');\n                                theInput.dispatchEvent(e);\n                            }\n                        }\n                    }\n                });\n\n\n                var lastValue = JSON.stringify([[point1.X(), point1.Y()],\n                        [Math.atan2(point2.Y() - point1.Y(), point2.X() - point1.X()),\n                        Math.sqrt((point2.X() - point1.X())*(point2.X() - point1.X()) + (point2.Y() - point1.Y())*(point2.Y() - point1.Y()))]]);\n\n                // Then from input to graph. 'input' for live stuff and 'change' for other.\n                theInput.addEventListener('input', function(e) {\n                    if (theInput.value != lastValue) {\n                        // Only when something changed.\n                        try {\n                            var tmp = JSON.parse(theInput.value);\n                            if (typeof tmp[0][0] == 'number' && typeof tmp[0][1] == 'number') {\n                                point1.setPosition(JXG.COORDS_BY_USER, tmp[0]);\n                            }\n                            if (typeof tmp[1][0] == 'number' && typeof tmp[1][1] == 'number') {\n                                var angle = tmp[1][0];\n                                var len = tmp[1][1];\n                                var b = [tmp[0][0], tmp[0][1]];\n                                if (len > 0) {\n                                    b[0] = b[0] + len*Math.cos(angle);\n                                    b[1] = b[1] + len*Math.sin(angle);\n                                }\n                                point2.setPosition(JXG.COORDS_BY_USER, b);\n                                point1.board.update();\n                                point1.update();\n                                point2.board.update();\n                                point2.update();\n                            }\n                        } catch (err) {\n                            // We do not care about this.\n                        }\n                        lastValue = theInput.value;\n                    }\n                });\n                theInput.addEventListener('change', function(e) {\n                    if (theInput.value != lastValue) {\n                        // Only when something changed.\n                        try {\n                            var tmp = JSON.parse(theInput.value);\n                            if (typeof tmp[0][0] == 'number' && typeof tmp[0][1] == 'number') {\n                                point1.setPosition(JXG.COORDS_BY_USER, tmp[0]);\n                            }\n                            if (typeof tmp[1][0] == 'number' && typeof tmp[1][1] == 'number') {\n                                var angle = tmp[1][0];\n                                var len = tmp[1][1];\n                                var b = [tmp[0][0], tmp[0][1]];\n                                if (len > 0) {\n                                    b[0] = b[0] + len*Math.cos(angle);\n                                    b[1] = b[1] + len*Math.sin(angle);\n                                }\n                                point2.setPosition(JXG.COORDS_BY_USER, b);\n                                point1.board.update();\n                                point1.update();\n                                point2.board.update();\n                                point2.update();\n                            }\n                        } catch (err) {\n                            // We do not care about this.\n                        }\n                        lastValue = theInput.value;\n                    }\n                });\n\n            },\n\n            bind_slider: function(inputRef, slider) {\n                // This function takes a JXG slider object and binds its value to a given input.\n                var theInput = document.getElementById(inputRef);\n                if (theInput.value && theInput.value != '') {\n                    // if a value exists move the slider to it.\n                    // the value is stored as a float value \"0.43\"\n                    try {\n                        slider.setValue(JSON.parse(theInput.value));\n                    } catch (err) {\n                        // We do not care about this.\n                    }\n                    slider.board.update();\n                    slider.update();\n                }\n\n                var initialValue = slider.Value();\n\n                // The binding from graph to input.\n                slider.board.on('update', function() {\n                    // We do not want to set the input before the point actually moves.\n                    if (initialValue != slider.Value()) {\n                        var tmp = JSON.stringify(slider.Value());\n                        initialValue = false;\n                        if (theInput.value != tmp) {\n                            // Avoid resetting this, as some event models migth trigger\n                            // change events even when no change actually happens.\n                            theInput.value = tmp;\n                            // As we set the inputs value programmatically no events\n                            // will be fired. But for two way binding we want to fire them...\n                            // However we do not need this in the preview where it annoys people.\n                            if (window.location.pathname.indexOf('preview.php') === -1) {\n                                var e = new Event('change');\n                                theInput.dispatchEvent(e);\n                            }\n                        }\n                    }\n                });\n\n                var lastValue = JSON.stringify(slider.Value());\n\n                // Then from input to graph. 'input' for live stuff and 'change' for other.\n                theInput.addEventListener('input', function(e) {\n                    if (theInput.value !== lastValue) {\n                        // Only when something changed.\n                        try {\n                            var tmp = JSON.parse(theInput.value);\n                            if (typeof tmp == 'number') {\n                                slider.setValue(tmp);\n                                slider.board.update();\n                                slider.update();\n                            }\n                        } catch (err) {\n                            // We do not care about this.\n                        }\n                        lastValue = theInput.value;\n                    }\n                });\n                theInput.addEventListener('change', function(e) {\n                    if (theInput.value !== lastValue) {\n                        // Only when something changed.\n                        try {\n                            var tmp = JSON.parse(theInput.value);\n                            if (typeof tmp == 'number') {\n                                slider.setValue(tmp);\n                                slider.board.update();\n                                slider.update();\n                            }\n                        } catch (err) {\n                            // We do not care about this.\n                        }\n                        lastValue = theInput.value;\n                    }\n                });\n            }\n        };\n    });\n"],"file":"jsxgraph.min.js"}