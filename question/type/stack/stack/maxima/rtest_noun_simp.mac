zeroAdd(x);
x$
zeroAdd(0+x);
x$
zeroAdd(0+0+x);
x$
zeroAdd(x+0);
x$
zeroAdd(0*x);
0*x$
zeroAdd(x*0);
x*0$
zeroAdd(0^x);
0^x$
zeroAdd(x^0);
x^0$

zeroMul(x);
x$
zeroMul(x+0);
x+0$
zeroMul(0*x);
0$
zeroMul(x*0);
0$
zeroMul(0^x);
0^x$
zeroMul(x^0);
x^0$
zeroMul(0*0*x);
0$
zeroMul(sin(0*x));
sin(0*x)$

oneMul(x);
x$
oneMul(x+1);
x+1$
oneMul(1*x);
x$
oneMul(x*1);
x$
oneMul(1^x);
1^x$
oneMul(x^1);
x^1$
oneMul(1*1*x);
x$
oneMul(sin(1*x));
sin(1*x)$


onePow(1);
1$
onePow(x^1);
x^1$
onePow(1^x);
1$
onePow((1+x)^1);
(1+x)^1$
onePow(0^1);
0^1$
onePow(1^0);
1$

idPow(1);
1$
idPow(x^1);
x$
idPow(1^x);
1^x$
idPow((1+x)^1);
(1+x)$
idPow(0^1);
0$

zeroPow(1);
1$
zeroPow(x^0);
x^0$
zeroPow(0^x);
0$
zeroPow(0^0);
0^0$
zeroPow(1+x);
1+x$
zeroPow(0^(x-x));
0$

zPow(1);
1$
zPow(x^0);
1$
zPow(0^x);
0^x$
zPow(0^0);
0^0$
zPow(1+x);
1+x$

assAdd((a+b)+c);
a+b+c$
assAdd(a+(b+c));
a+b+c$
assAdd((a+b)+(c+d));
a+b+c+d$

assMul((a*b)*c);
a*b*c$

comMul(x);
x$
comMul(1);
1$
comMul(2*x*3);
2*3*x$
comMul(2*3.0*%pi);
2*3.0*%pi$


intAddp(3 noun+ UNARY_MINUS noun* 2);
true$

intAdd(1+2);
3$
intAdd(1+x+2);
3+x$

intMul(2*3);
6$
intMul(2*x*3);
6*x$
intMul(UNARY_MINUS noun* 2 noun* UNARY_MINUS noun* 6);
12 noun* UNARY_MINUS noun* UNARY_MINUS$

intPow(2^3);
8$
intPow(2^x);
2^x$
intPow(0^0);
0^0;

intFac(7);
7$
intFac(18);
2 noun\* 3 noun\^ 2$

equals_commute_prepare((a/b)/c);
a noun* (UNARY_RECIP(b)) noun* (UNARY_RECIP(c))$
equals_commute_prepare(a/(b/c));
a noun* UNARY_RECIP(b noun* UNARY_RECIP(c))$

divDivp(a noun* UNARY_RECIP(b noun* UNARY_RECIP(c)))$
true$
divDivp(UNARY_RECIP(UNARY_RECIP(b)));
true$
divDivp(a noun* UNARY_RECIP(UNARY_RECIP(b)));
true$
divDivp(a noun* (UNARY_RECIP(b)) noun* (UNARY_RECIP(c)));
false;
divDivp(UNARY_RECIP(b));
false$
divDivp(UNARY_RECIP(b noun* c));
false$

divDiv(UNARY_RECIP(UNARY_RECIP(b)));
b$
divDiv(a noun* UNARY_RECIP(UNARY_RECIP(b)));
a noun* b$
divDiv(a noun* UNARY_RECIP(b noun* UNARY_RECIP(c)));
a noun* c noun* UNARY_RECIP(b)$
divDiv(a noun* UNARY_RECIP(b noun* B noun* UNARY_RECIP(c)));
a noun* c noun* UNARY_RECIP(b noun* B)$
divDiv(A noun* a noun* (UNARY_RECIP(b noun* UNARY_RECIP(c))) noun* (UNARY_RECIP(B noun* UNARY_RECIP(C))));
A noun* a noun* (UNARY_RECIP(B noun* UNARY_RECIP(C))) noun* c noun* UNARY_RECIP(b)$

divDiv(a noun* (UNARY_RECIP(b)) noun* (UNARY_RECIP(c)));
a noun* (UNARY_RECIP(b)) noun* (UNARY_RECIP(c))$
divDiv(UNARY_RECIP(b));
UNARY_RECIP(b)$
divDiv(UNARY_RECIP(b noun* c));
UNARY_RECIP(b noun* c)$

divCancel(a noun* b noun* UNARY_RECIP(a noun* c));
b noun* UNARY_RECIP(c)$
divCancel(a noun* UNARY_RECIP(a noun* c));
UNARY_RECIP(c)$
divCancel((a noun+ b) noun* UNARY_RECIP(a noun+ c));
(a noun+ b) noun* UNARY_RECIP(a noun+ c)$
divCancel(A noun* (a noun+ b) noun* UNARY_RECIP(a noun+ b));
A$
divCancel(UNARY_MINUS noun* a noun* UNARY_RECIP(UNARY_MINUS noun* b));
a noun* UNARY_RECIP(b)$

negDist(UNARY_MINUS noun* x noun* (UNARY_MINUS noun* x noun+ 1));
(UNARY_MINUS noun* (UNARY_MINUS noun* x) noun+ UNARY_MINUS noun* 1) noun* x$

negOrd(a+UNARY_MINUS noun* b);
a + UNARY_MINUS noun\* b$

negOrd(b+UNARY_MINUS noun* a);
UNARY_MINUS noun* (UNARY_MINUS noun* b+a)$

negOrd(b+UNARY_MINUS noun* 3 noun* a);
b+UNARY_MINUS noun\* 3 noun\* a$

negOrd(b+UNARY_MINUS noun* a+c);
UNARY_MINUS noun\* (UNARY_MINUS noun\* b+a+UNARY_MINUS noun\* c)$
