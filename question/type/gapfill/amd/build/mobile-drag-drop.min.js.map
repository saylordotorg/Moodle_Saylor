{"version":3,"file":"mobile-drag-drop.min.js","sources":["../src/mobile-drag-drop.js"],"sourcesContent":["/*eslint-disable*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.MobileDragDrop = global.MobileDragDrop || {})));\n}(this, (function (exports) { 'use strict';\n\nvar CLASS_PREFIX = \"dnd-poly-\";\nvar CLASS_DRAG_IMAGE = CLASS_PREFIX + \"drag-image\";\nvar CLASS_DRAG_IMAGE_SNAPBACK = CLASS_PREFIX + \"snapback\";\nvar CLASS_DRAG_OPERATION_ICON = CLASS_PREFIX + \"icon\";\nvar EVENT_PREFIX = \"dnd-poly-\";\nvar EVENT_DRAG_DRAGSTART_PENDING = EVENT_PREFIX + \"dragstart-pending\";\nvar EVENT_DRAG_DRAGSTART_CANCEL = EVENT_PREFIX + \"dragstart-cancel\";\nvar ALLOWED_EFFECTS = [\"none\", \"copy\", \"copyLink\", \"copyMove\", \"link\", \"linkMove\", \"move\", \"all\"];\nvar DROP_EFFECTS = [\"none\", \"copy\", \"move\", \"link\"];\n\nfunction detectFeatures() {\n    var features = {\n        dragEvents: (\"ondragstart\" in document.documentElement),\n        draggable: (\"draggable\" in document.documentElement),\n        userAgentSupportingNativeDnD: undefined\n    };\n    var isBlinkEngine = !!(window.chrome) || /chrome/i.test(navigator.userAgent);\n    features.userAgentSupportingNativeDnD = !((/iPad|iPhone|iPod|Android/.test(navigator.userAgent))\n        ||\n            (isBlinkEngine && (\"ontouchstart\" in document.documentElement)));\n    return features;\n}\nfunction supportsPassiveEventListener() {\n    var supportsPassiveEventListeners = false;\n    try {\n        var opts = Object.defineProperty({}, \"passive\", {\n            get: function () {\n                supportsPassiveEventListeners = true;\n            }\n        });\n        window.addEventListener(\"test\", null, opts);\n    }\n    catch (e) {\n    }\n    return supportsPassiveEventListeners;\n}\n\nvar supportsPassive = supportsPassiveEventListener();\nfunction isDOMElement(object) {\n    return object && object.tagName;\n}\nfunction addDocumentListener(ev, handler, passive) {\n    if (passive === void 0) { passive = true; }\n    document.addEventListener(ev, handler, supportsPassive ? { passive: passive } : false);\n}\nfunction removeDocumentListener(ev, handler) {\n    document.removeEventListener(ev, handler);\n}\nfunction onEvt(el, event, handler, capture) {\n    if (capture === void 0) { capture = false; }\n    var options = supportsPassive ? { passive: true, capture: capture } : capture;\n    el.addEventListener(event, handler, options);\n    return {\n        off: function () {\n            el.removeEventListener(event, handler, options);\n        }\n    };\n}\nfunction prepareNodeCopyAsDragImage(srcNode, dstNode) {\n    if (srcNode.nodeType === 1) {\n        var cs = getComputedStyle(srcNode);\n        for (var i = 0; i < cs.length; i++) {\n            var csName = cs[i];\n            dstNode.style.setProperty(csName, cs.getPropertyValue(csName), cs.getPropertyPriority(csName));\n        }\n        dstNode.style.pointerEvents = \"none\";\n        dstNode.removeAttribute(\"id\");\n        dstNode.removeAttribute(\"class\");\n        dstNode.removeAttribute(\"draggable\");\n        if (dstNode.nodeName === \"CANVAS\") {\n            var canvasSrc = srcNode;\n            var canvasDst = dstNode;\n            var canvasSrcImgData = canvasSrc.getContext(\"2d\").getImageData(0, 0, canvasSrc.width, canvasSrc.height);\n            canvasDst.getContext(\"2d\").putImageData(canvasSrcImgData, 0, 0);\n        }\n    }\n    if (srcNode.hasChildNodes()) {\n        for (var i = 0; i < srcNode.childNodes.length; i++) {\n            prepareNodeCopyAsDragImage(srcNode.childNodes[i], dstNode.childNodes[i]);\n        }\n    }\n}\nfunction createDragImage(sourceNode) {\n    var dragImage = sourceNode.cloneNode(true);\n    prepareNodeCopyAsDragImage(sourceNode, dragImage);\n    return dragImage;\n}\nfunction average(array) {\n    if (array.length === 0) {\n        return 0;\n    }\n    return array.reduce((function (s, v) {\n        return v + s;\n    }), 0) / array.length;\n}\nfunction isTouchIdentifierContainedInTouchEvent(touchEvent, touchIdentifier) {\n    for (var i = 0; i < touchEvent.changedTouches.length; i++) {\n        var touch = touchEvent.changedTouches[i];\n        if (touch.identifier === touchIdentifier) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction updateCentroidCoordinatesOfTouchesIn(coordinateProp, event, outPoint) {\n    var pageXs = [], pageYs = [];\n    for (var i = 0; i < event.touches.length; i++) {\n        var touch = event.touches[i];\n        pageXs.push(touch[coordinateProp + \"X\"]);\n        pageYs.push(touch[coordinateProp + \"Y\"]);\n    }\n    outPoint.x = average(pageXs);\n    outPoint.y = average(pageYs);\n}\nvar TRANSFORM_CSS_VENDOR_PREFIXES = [\"\", \"-webkit-\"];\nfunction extractTransformStyles(sourceNode) {\n    return TRANSFORM_CSS_VENDOR_PREFIXES.map(function (prefix) {\n        var transform = sourceNode.style[prefix + \"transform\"];\n        if (!transform || transform === \"none\") {\n            return \"\";\n        }\n        return transform.replace(/translate\\(\\D*\\d+[^,]*,\\D*\\d+[^,]*\\)\\s*/g, \"\");\n    });\n}\nfunction translateElementToPoint(element, pnt, originalTransforms, offset, centerOnCoordinates) {\n    if (centerOnCoordinates === void 0) { centerOnCoordinates = true; }\n    var x = pnt.x, y = pnt.y;\n    if (offset) {\n        x += offset.x;\n        y += offset.y;\n    }\n    if (centerOnCoordinates) {\n        x -= (parseInt(element.offsetWidth, 10) / 2);\n        y -= (parseInt(element.offsetHeight, 10) / 2);\n    }\n    var translate = \"translate3d(\" + x + \"px,\" + y + \"px, 0)\";\n    for (var i = 0; i < TRANSFORM_CSS_VENDOR_PREFIXES.length; i++) {\n        var transformProp = TRANSFORM_CSS_VENDOR_PREFIXES[i] + \"transform\";\n        element.style[transformProp] = translate + \" \" + originalTransforms[i];\n    }\n}\nfunction applyDragImageSnapback(sourceEl, dragImage, dragImageTransforms, transitionEndCb) {\n    var cs = getComputedStyle(sourceEl);\n    if (cs.visibility === \"hidden\" || cs.display === \"none\") {\n        console.log(\"dnd-poly: source node is not visible. skipping snapback transition.\");\n        transitionEndCb();\n        return;\n    }\n    dragImage.classList.add(CLASS_DRAG_IMAGE_SNAPBACK);\n    var csDragImage = getComputedStyle(dragImage);\n    var durationInS = parseFloat(csDragImage.transitionDuration);\n    if (isNaN(durationInS) || durationInS === 0) {\n        console.log(\"dnd-poly: no transition used - skipping snapback\");\n        transitionEndCb();\n        return;\n    }\n    console.log(\"dnd-poly: starting dragimage snap back\");\n    var rect = sourceEl.getBoundingClientRect();\n    var pnt = {\n        x: rect.left,\n        y: rect.top\n    };\n    pnt.x += (document.body.scrollLeft || document.documentElement.scrollLeft);\n    pnt.y += (document.body.scrollTop || document.documentElement.scrollTop);\n    pnt.x -= parseInt(cs.marginLeft, 10);\n    pnt.y -= parseInt(cs.marginTop, 10);\n    var delayInS = parseFloat(csDragImage.transitionDelay);\n    var durationInMs = Math.round((durationInS + delayInS) * 1000);\n    translateElementToPoint(dragImage, pnt, dragImageTransforms, undefined, false);\n    setTimeout(transitionEndCb, durationInMs);\n}\n\nvar DataTransfer = (function () {\n    function DataTransfer(_dataStore, _setDragImageHandler) {\n        this._dataStore = _dataStore;\n        this._setDragImageHandler = _setDragImageHandler;\n        this._dropEffect = DROP_EFFECTS[0];\n    }\n    Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\n        get: function () {\n            return this._dropEffect;\n        },\n        set: function (value) {\n            if (this._dataStore.mode !== 0\n                && ALLOWED_EFFECTS.indexOf(value) > -1) {\n                this._dropEffect = value;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataTransfer.prototype, \"types\", {\n        get: function () {\n            if (this._dataStore.mode !== 0) {\n                return Object.freeze(this._dataStore.types);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\n        get: function () {\n            return this._dataStore.effectAllowed;\n        },\n        set: function (value) {\n            if (this._dataStore.mode === 2\n                && ALLOWED_EFFECTS.indexOf(value) > -1) {\n                this._dataStore.effectAllowed = value;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DataTransfer.prototype.setData = function (type, data) {\n        if (this._dataStore.mode === 2) {\n            if (type.indexOf(\" \") > -1) {\n                throw new Error(\"illegal arg: type contains space\");\n            }\n            this._dataStore.data[type] = data;\n            if (this._dataStore.types.indexOf(type) === -1) {\n                this._dataStore.types.push(type);\n            }\n        }\n    };\n    DataTransfer.prototype.getData = function (type) {\n        if (this._dataStore.mode === 1\n            || this._dataStore.mode === 2) {\n            return this._dataStore.data[type] || \"\";\n        }\n    };\n    DataTransfer.prototype.clearData = function (format) {\n        if (this._dataStore.mode === 2) {\n            if (format && this._dataStore.data[format]) {\n                delete this._dataStore.data[format];\n                var index = this._dataStore.types.indexOf(format);\n                if (index > -1) {\n                    this._dataStore.types.splice(index, 1);\n                }\n                return;\n            }\n            this._dataStore.data = {};\n            this._dataStore.types = [];\n        }\n    };\n    DataTransfer.prototype.setDragImage = function (image, x, y) {\n        if (this._dataStore.mode === 2) {\n            this._setDragImageHandler(image, x, y);\n        }\n    };\n    return DataTransfer;\n}());\n\nfunction tryFindDraggableTarget(event) {\n    var el = event.target;\n    do {\n        if (el.draggable === false) {\n            continue;\n        }\n        if (el.draggable === true) {\n            return el;\n        }\n        if (el.getAttribute\n            && el.getAttribute(\"draggable\") === \"true\") {\n            return el;\n        }\n    } while ((el = el.parentNode) && el !== document.body);\n}\nfunction determineDropEffect(effectAllowed, sourceNode) {\n    if (!effectAllowed) {\n        if (sourceNode.nodeType === 3 && sourceNode.tagName === \"A\") {\n            return DROP_EFFECTS[3];\n        }\n        return DROP_EFFECTS[1];\n    }\n    if (effectAllowed === ALLOWED_EFFECTS[0]) {\n        return DROP_EFFECTS[0];\n    }\n    if (effectAllowed.indexOf(ALLOWED_EFFECTS[1]) === 0 || effectAllowed === ALLOWED_EFFECTS[7]) {\n        return DROP_EFFECTS[1];\n    }\n    if (effectAllowed.indexOf(ALLOWED_EFFECTS[4]) === 0) {\n        return DROP_EFFECTS[3];\n    }\n    if (effectAllowed === ALLOWED_EFFECTS[6]) {\n        return DROP_EFFECTS[2];\n    }\n    return DROP_EFFECTS[1];\n}\nfunction createDragEventFromTouch(targetElement, e, type, cancelable, window, dataTransfer, relatedTarget) {\n    if (relatedTarget === void 0) { relatedTarget = null; }\n    var touch = e.changedTouches[0];\n    var dndEvent = new Event(type, {\n        bubbles: true,\n        cancelable: cancelable\n    });\n    dndEvent.dataTransfer = dataTransfer;\n    dndEvent.relatedTarget = relatedTarget;\n    dndEvent.screenX = touch.screenX;\n    dndEvent.screenY = touch.screenY;\n    dndEvent.clientX = touch.clientX;\n    dndEvent.clientY = touch.clientY;\n    dndEvent.pageX = touch.pageX;\n    dndEvent.pageY = touch.pageY;\n    var targetRect = targetElement.getBoundingClientRect();\n    dndEvent.offsetX = dndEvent.clientX - targetRect.left;\n    dndEvent.offsetY = dndEvent.clientY - targetRect.top;\n    return dndEvent;\n}\nfunction dispatchDragEvent(dragEvent, targetElement, touchEvent, dataStore, dataTransfer, cancelable, relatedTarget) {\n    if (cancelable === void 0) { cancelable = true; }\n    if (relatedTarget === void 0) { relatedTarget = null; }\n    console.log(\"dnd-poly: dispatching \" + dragEvent);\n    var leaveEvt = createDragEventFromTouch(targetElement, touchEvent, dragEvent, cancelable, document.defaultView, dataTransfer, relatedTarget);\n    var cancelled = !targetElement.dispatchEvent(leaveEvt);\n    dataStore.mode = 0;\n    return cancelled;\n}\nfunction determineDragOperation(effectAllowed, dropEffect) {\n    if (!effectAllowed || effectAllowed === ALLOWED_EFFECTS[7]) {\n        return dropEffect;\n    }\n    if (dropEffect === DROP_EFFECTS[1]) {\n        if (effectAllowed.indexOf(DROP_EFFECTS[1]) === 0) {\n            return DROP_EFFECTS[1];\n        }\n    }\n    else if (dropEffect === DROP_EFFECTS[3]) {\n        if (effectAllowed.indexOf(DROP_EFFECTS[3]) === 0 || effectAllowed.indexOf(\"Link\") > -1) {\n            return DROP_EFFECTS[3];\n        }\n    }\n    else if (dropEffect === DROP_EFFECTS[2]) {\n        if (effectAllowed.indexOf(DROP_EFFECTS[2]) === 0 || effectAllowed.indexOf(\"Move\") > -1) {\n            return DROP_EFFECTS[2];\n        }\n    }\n    return DROP_EFFECTS[0];\n}\n\nvar DragOperationController = (function () {\n    function DragOperationController(_initialEvent, _config, _sourceNode, _dragOperationEndedCb) {\n        this._initialEvent = _initialEvent;\n        this._config = _config;\n        this._sourceNode = _sourceNode;\n        this._dragOperationEndedCb = _dragOperationEndedCb;\n        this._dragOperationState = 0;\n        this._immediateUserSelection = null;\n        this._currentDropTarget = null;\n        console.log(\"dnd-poly: setting up potential drag operation..\");\n        this._lastTouchEvent = _initialEvent;\n        this._initialTouch = _initialEvent.changedTouches[0];\n        this._touchMoveHandler = this._onTouchMove.bind(this);\n        this._touchEndOrCancelHandler = this._onTouchEndOrCancel.bind(this);\n        addDocumentListener(\"touchmove\", this._touchMoveHandler, false);\n        addDocumentListener(\"touchend\", this._touchEndOrCancelHandler, false);\n        addDocumentListener(\"touchcancel\", this._touchEndOrCancelHandler, false);\n    }\n    DragOperationController.prototype._setup = function () {\n        var _this = this;\n        console.log(\"dnd-poly: starting drag and drop operation\");\n        this._dragOperationState = 1;\n        this._currentDragOperation = DROP_EFFECTS[0];\n        this._dragDataStore = {\n            data: {},\n            effectAllowed: undefined,\n            mode: 3,\n            types: [],\n        };\n        this._currentHotspotCoordinates = {\n            x: null,\n            y: null\n        };\n        this._dragImagePageCoordinates = {\n            x: null,\n            y: null\n        };\n        var dragImageSrc = this._sourceNode;\n        this._dataTransfer = new DataTransfer(this._dragDataStore, function (element, x, y) {\n            dragImageSrc = element;\n            if (typeof x === \"number\" || typeof y === \"number\") {\n                _this._dragImageOffset = {\n                    x: x || 0,\n                    y: y || 0\n                };\n            }\n        });\n        this._dragDataStore.mode = 2;\n        this._dataTransfer.dropEffect = DROP_EFFECTS[0];\n        if (dispatchDragEvent(\"dragstart\", this._sourceNode, this._lastTouchEvent, this._dragDataStore, this._dataTransfer)) {\n            console.log(\"dnd-poly: dragstart cancelled\");\n            this._dragOperationState = 3;\n            this._cleanup();\n            return false;\n        }\n        updateCentroidCoordinatesOfTouchesIn(\"page\", this._lastTouchEvent, this._dragImagePageCoordinates);\n        var dragImage = this._config.dragImageSetup(dragImageSrc);\n        this._dragImageTransforms = extractTransformStyles(dragImage);\n        dragImage.style.position = \"absolute\";\n        dragImage.style.left = \"0px\";\n        dragImage.style.top = \"0px\";\n        dragImage.style.zIndex = \"999999\";\n        dragImage.classList.add(CLASS_DRAG_IMAGE);\n        dragImage.classList.add(CLASS_DRAG_OPERATION_ICON);\n        this._dragImage = dragImage;\n        if (!this._dragImageOffset) {\n            if (this._config.dragImageOffset) {\n                this._dragImageOffset = {\n                    x: this._config.dragImageOffset.x,\n                    y: this._config.dragImageOffset.y\n                };\n            }\n            else if (this._config.dragImageCenterOnTouch) {\n                var cs = getComputedStyle(dragImageSrc);\n                this._dragImageOffset = {\n                    x: 0 - parseInt(cs.marginLeft, 10),\n                    y: 0 - parseInt(cs.marginTop, 10)\n                };\n            }\n            else {\n                var targetRect = dragImageSrc.getBoundingClientRect();\n                var cs = getComputedStyle(dragImageSrc);\n                this._dragImageOffset = {\n                    x: targetRect.left - this._initialTouch.clientX - parseInt(cs.marginLeft, 10) + targetRect.width / 2,\n                    y: targetRect.top - this._initialTouch.clientY - parseInt(cs.marginTop, 10) + targetRect.height / 2\n                };\n            }\n        }\n        translateElementToPoint(this._dragImage, this._dragImagePageCoordinates, this._dragImageTransforms, this._dragImageOffset, this._config.dragImageCenterOnTouch);\n        document.body.appendChild(this._dragImage);\n        this._iterationIntervalId = window.setInterval(function () {\n            if (_this._iterationLock) {\n                console.log(\"dnd-poly: iteration skipped because previous iteration hast not yet finished.\");\n                return;\n            }\n            _this._iterationLock = true;\n            _this._dragAndDropProcessModelIteration();\n            _this._iterationLock = false;\n        }, this._config.iterationInterval);\n        return true;\n    };\n    DragOperationController.prototype._cleanup = function () {\n        console.log(\"dnd-poly: cleanup\");\n        if (this._iterationIntervalId) {\n            clearInterval(this._iterationIntervalId);\n            this._iterationIntervalId = null;\n        }\n        removeDocumentListener(\"touchmove\", this._touchMoveHandler);\n        removeDocumentListener(\"touchend\", this._touchEndOrCancelHandler);\n        removeDocumentListener(\"touchcancel\", this._touchEndOrCancelHandler);\n        if (this._dragImage) {\n            this._dragImage.parentNode.removeChild(this._dragImage);\n            this._dragImage = null;\n        }\n        this._dragOperationEndedCb(this._config, this._lastTouchEvent, this._dragOperationState);\n    };\n    DragOperationController.prototype._onTouchMove = function (event) {\n        var _this = this;\n        if (isTouchIdentifierContainedInTouchEvent(event, this._initialTouch.identifier) === false) {\n            return;\n        }\n        this._lastTouchEvent = event;\n        if (this._dragOperationState === 0) {\n            var startDrag = void 0;\n            if (this._config.dragStartConditionOverride) {\n                try {\n                    startDrag = this._config.dragStartConditionOverride(event);\n                }\n                catch (e) {\n                    console.error(\"dnd-poly: error in dragStartConditionOverride hook: \" + e);\n                    startDrag = false;\n                }\n            }\n            else {\n                startDrag = (event.touches.length === 1);\n            }\n            if (!startDrag) {\n                this._cleanup();\n                return;\n            }\n            if (this._setup() === true) {\n                this._initialEvent.preventDefault();\n                event.preventDefault();\n            }\n            return;\n        }\n        console.log(\"dnd-poly: moving draggable..\");\n        event.preventDefault();\n        updateCentroidCoordinatesOfTouchesIn(\"client\", event, this._currentHotspotCoordinates);\n        updateCentroidCoordinatesOfTouchesIn(\"page\", event, this._dragImagePageCoordinates);\n        if (this._config.dragImageTranslateOverride) {\n            try {\n                var handledDragImageTranslate_1 = false;\n                this._config.dragImageTranslateOverride(event, {\n                    x: this._currentHotspotCoordinates.x,\n                    y: this._currentHotspotCoordinates.y\n                }, this._immediateUserSelection, function (offsetX, offsetY) {\n                    if (!_this._dragImage) {\n                        return;\n                    }\n                    handledDragImageTranslate_1 = true;\n                    _this._currentHotspotCoordinates.x += offsetX;\n                    _this._currentHotspotCoordinates.y += offsetY;\n                    _this._dragImagePageCoordinates.x += offsetX;\n                    _this._dragImagePageCoordinates.y += offsetY;\n                    translateElementToPoint(_this._dragImage, _this._dragImagePageCoordinates, _this._dragImageTransforms, _this._dragImageOffset, _this._config.dragImageCenterOnTouch);\n                });\n                if (handledDragImageTranslate_1) {\n                    return;\n                }\n            }\n            catch (e) {\n                console.log(\"dnd-poly: error in dragImageTranslateOverride hook: \" + e);\n            }\n        }\n        translateElementToPoint(this._dragImage, this._dragImagePageCoordinates, this._dragImageTransforms, this._dragImageOffset, this._config.dragImageCenterOnTouch);\n    };\n    DragOperationController.prototype._onTouchEndOrCancel = function (event) {\n        if (isTouchIdentifierContainedInTouchEvent(event, this._initialTouch.identifier) === false) {\n            return;\n        }\n        if (this._config.dragImageTranslateOverride) {\n            try {\n                this._config.dragImageTranslateOverride(undefined, undefined, undefined, function () {\n                });\n            }\n            catch (e) {\n                console.log(\"dnd-poly: error in dragImageTranslateOverride hook: \" + e);\n            }\n        }\n        if (this._dragOperationState === 0) {\n            this._cleanup();\n            return;\n        }\n        event.preventDefault();\n        this._dragOperationState = (event.type === \"touchcancel\") ? 3 : 2;\n    };\n    DragOperationController.prototype._dragAndDropProcessModelIteration = function () {\n        var _this = this;\n        var previousDragOperation = this._currentDragOperation;\n        this._dragDataStore.mode = 3;\n        this._dataTransfer.dropEffect = DROP_EFFECTS[0];\n        var dragCancelled = dispatchDragEvent(\"drag\", this._sourceNode, this._lastTouchEvent, this._dragDataStore, this._dataTransfer);\n        if (dragCancelled) {\n            console.log(\"dnd-poly: drag event cancelled.\");\n            this._currentDragOperation = DROP_EFFECTS[0];\n        }\n        if (dragCancelled || this._dragOperationState === 2 || this._dragOperationState === 3) {\n            var dragFailed = this._dragOperationEnded(this._dragOperationState);\n            if (dragFailed) {\n                applyDragImageSnapback(this._sourceNode, this._dragImage, this._dragImageTransforms, function () {\n                    _this._finishDragOperation();\n                });\n                return;\n            }\n            this._finishDragOperation();\n            return;\n        }\n        var newUserSelection = this._config.elementFromPoint(this._currentHotspotCoordinates.x, this._currentHotspotCoordinates.y);\n        console.log(\"dnd-poly: new immediate user selection is: \" + newUserSelection);\n        var previousTargetElement = this._currentDropTarget;\n        if (newUserSelection !== this._immediateUserSelection && newUserSelection !== this._currentDropTarget) {\n            this._immediateUserSelection = newUserSelection;\n            if (this._currentDropTarget !== null) {\n                this._dragDataStore.mode = 3;\n                this._dataTransfer.dropEffect = DROP_EFFECTS[0];\n                dispatchDragEvent(\"dragexit\", this._currentDropTarget, this._lastTouchEvent, this._dragDataStore, this._dataTransfer, false);\n            }\n            if (this._immediateUserSelection === null) {\n                this._currentDropTarget = this._immediateUserSelection;\n                console.log(\"dnd-poly: current drop target changed to null\");\n            }\n            else {\n                this._dragDataStore.mode = 3;\n                this._dataTransfer.dropEffect = determineDropEffect(this._dragDataStore.effectAllowed, this._sourceNode);\n                if (dispatchDragEvent(\"dragenter\", this._immediateUserSelection, this._lastTouchEvent, this._dragDataStore, this._dataTransfer)) {\n                    console.log(\"dnd-poly: dragenter default prevented\");\n                    this._currentDropTarget = this._immediateUserSelection;\n                    this._currentDragOperation = determineDragOperation(this._dataTransfer.effectAllowed, this._dataTransfer.dropEffect);\n                }\n                else {\n                    if (this._immediateUserSelection !== document.body) {\n                        this._currentDropTarget = document.body;\n                    }\n                }\n            }\n        }\n        if (previousTargetElement !== this._currentDropTarget && (isDOMElement(previousTargetElement))) {\n            console.log(\"dnd-poly: current drop target changed.\");\n            this._dragDataStore.mode = 3;\n            this._dataTransfer.dropEffect = DROP_EFFECTS[0];\n            dispatchDragEvent(\"dragleave\", previousTargetElement, this._lastTouchEvent, this._dragDataStore, this._dataTransfer, false, this._currentDropTarget);\n        }\n        if (isDOMElement(this._currentDropTarget)) {\n            this._dragDataStore.mode = 3;\n            this._dataTransfer.dropEffect = determineDropEffect(this._dragDataStore.effectAllowed, this._sourceNode);\n            if (dispatchDragEvent(\"dragover\", this._currentDropTarget, this._lastTouchEvent, this._dragDataStore, this._dataTransfer) === false) {\n                console.log(\"dnd-poly: dragover not prevented on possible drop-target.\");\n                this._currentDragOperation = DROP_EFFECTS[0];\n            }\n            else {\n                console.log(\"dnd-poly: dragover prevented.\");\n                this._currentDragOperation = determineDragOperation(this._dataTransfer.effectAllowed, this._dataTransfer.dropEffect);\n            }\n        }\n        console.log(\"dnd-poly: d'n'd iteration ended. current drag operation: \" + this._currentDragOperation);\n        if (previousDragOperation !== this._currentDragOperation) {\n            this._dragImage.classList.remove(CLASS_PREFIX + previousDragOperation);\n        }\n        var currentDragOperationClass = CLASS_PREFIX + this._currentDragOperation;\n        this._dragImage.classList.add(currentDragOperationClass);\n    };\n    DragOperationController.prototype._dragOperationEnded = function (state) {\n        console.log(\"dnd-poly: drag operation end detected with \" + this._currentDragOperation);\n        var dragFailed = (this._currentDragOperation === DROP_EFFECTS[0]\n            || this._currentDropTarget === null\n            || state === 3);\n        if (dragFailed) {\n            if (isDOMElement(this._currentDropTarget)) {\n                this._dragDataStore.mode = 3;\n                this._dataTransfer.dropEffect = DROP_EFFECTS[0];\n                dispatchDragEvent(\"dragleave\", this._currentDropTarget, this._lastTouchEvent, this._dragDataStore, this._dataTransfer, false);\n            }\n        }\n        else {\n            if (isDOMElement(this._currentDropTarget)) {\n                this._dragDataStore.mode = 1;\n                this._dataTransfer.dropEffect = this._currentDragOperation;\n                if (dispatchDragEvent(\"drop\", this._currentDropTarget, this._lastTouchEvent, this._dragDataStore, this._dataTransfer) ===\n                    true) {\n                    this._currentDragOperation = this._dataTransfer.dropEffect;\n                }\n                else {\n                    this._currentDragOperation = DROP_EFFECTS[0];\n                }\n            }\n        }\n        return dragFailed;\n    };\n    DragOperationController.prototype._finishDragOperation = function () {\n        console.log(\"dnd-poly: dragimage snap back transition ended\");\n        this._dragDataStore.mode = 3;\n        this._dataTransfer.dropEffect = this._currentDragOperation;\n        dispatchDragEvent(\"dragend\", this._sourceNode, this._lastTouchEvent, this._dragDataStore, this._dataTransfer, false);\n        this._dragOperationState = 2;\n        this._cleanup();\n    };\n    return DragOperationController;\n}());\n\nvar config = {\n    iterationInterval: 150,\n    tryFindDraggableTarget: tryFindDraggableTarget,\n    dragImageSetup: createDragImage,\n    elementFromPoint: function (x, y) { return document.elementFromPoint(x, y); }\n};\nvar activeDragOperation;\nfunction onTouchstart(e) {\n    console.log(\"dnd-poly: global touchstart\");\n    if (activeDragOperation) {\n        console.log(\"dnd-poly: drag operation already active\");\n        return;\n    }\n    var dragTarget = config.tryFindDraggableTarget(e);\n    if (!dragTarget) {\n        console.log(\"dnd-poly: no draggable at touchstart coordinates\");\n        return;\n    }\n    try {\n        activeDragOperation = new DragOperationController(e, config, dragTarget, dragOperationEnded);\n    }\n    catch (err) {\n        dragOperationEnded(config, e, 3);\n        throw err;\n    }\n}\nfunction onDelayTouchstart(evt) {\n    console.log(\"dnd-poly: setup delayed dragstart..\");\n    var el = evt.target;\n    var heldItem = function () {\n        console.log(\"dnd-poly: starting delayed drag..\");\n        end.off();\n        cancel.off();\n        move.off();\n        scroll.off();\n        onTouchstart(evt);\n    };\n    var onReleasedItem = function (event) {\n        console.log(\"dnd-poly: aborting delayed drag because of \" + event.type);\n        end.off();\n        cancel.off();\n        move.off();\n        scroll.off();\n        if (el) {\n            el.dispatchEvent(new CustomEvent(EVENT_DRAG_DRAGSTART_CANCEL, { bubbles: true, cancelable: true }));\n        }\n        clearTimeout(timer);\n    };\n    if (el) {\n        el.dispatchEvent(new CustomEvent(EVENT_DRAG_DRAGSTART_PENDING, { bubbles: true, cancelable: true }));\n    }\n    var timer = window.setTimeout(heldItem, config.holdToDrag);\n    var end = onEvt(el, \"touchend\", onReleasedItem);\n    var cancel = onEvt(el, \"touchcancel\", onReleasedItem);\n    var move = onEvt(el, \"touchmove\", onReleasedItem);\n    var scroll = onEvt(window, \"scroll\", onReleasedItem, true);\n}\nfunction dragOperationEnded(_config, event, state) {\n    if (state === 0) {\n        console.log(\"dnd-poly: Drag never started. Last event was \" + event.type);\n        if (_config.defaultActionOverride) {\n            try {\n                _config.defaultActionOverride(event);\n                if (event.defaultPrevented) {\n                    console.log(\"dnd-poly: defaultActionOverride has taken care of triggering the default action. preventing default on original event\");\n                }\n            }\n            catch (e) {\n                console.log(\"dnd-poly: error in defaultActionOverride: \" + e);\n            }\n        }\n    }\n    activeDragOperation = null;\n}\nfunction polyfill(override) {\n    if (override) {\n        Object.keys(override).forEach(function (key) {\n            config[key] = override[key];\n        });\n    }\n    if (!config.forceApply) {\n        var detectedFeatures = detectFeatures();\n        if (detectedFeatures.userAgentSupportingNativeDnD\n            && detectedFeatures.draggable\n            && detectedFeatures.dragEvents) {\n            return false;\n        }\n    }\n    console.log(\"dnd-poly: Applying mobile drag and drop polyfill.\");\n    if (config.holdToDrag) {\n        console.log(\"dnd-poly: holdToDrag set to \" + config.holdToDrag);\n        addDocumentListener(\"touchstart\", onDelayTouchstart, false);\n    }\n    else {\n        addDocumentListener(\"touchstart\", onTouchstart, false);\n    }\n    return true;\n}\n\nexports.polyfill = polyfill;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map"],"names":["global","factory","this","exports","ALLOWED_EFFECTS","DROP_EFFECTS","supportsPassive","supportsPassiveEventListeners","opts","Object","defineProperty","get","window","addEventListener","e","supportsPassiveEventListener","isDOMElement","object","tagName","addDocumentListener","ev","handler","passive","document","removeDocumentListener","removeEventListener","onEvt","el","event","capture","options","off","prepareNodeCopyAsDragImage","srcNode","dstNode","nodeType","cs","getComputedStyle","i","length","csName","style","setProperty","getPropertyValue","getPropertyPriority","pointerEvents","removeAttribute","nodeName","canvasSrc","canvasDst","canvasSrcImgData","getContext","getImageData","width","height","putImageData","hasChildNodes","childNodes","average","array","reduce","s","v","isTouchIdentifierContainedInTouchEvent","touchEvent","touchIdentifier","changedTouches","identifier","updateCentroidCoordinatesOfTouchesIn","coordinateProp","outPoint","pageXs","pageYs","touches","touch","push","x","y","TRANSFORM_CSS_VENDOR_PREFIXES","translateElementToPoint","element","pnt","originalTransforms","offset","centerOnCoordinates","parseInt","offsetWidth","offsetHeight","translate","transformProp","DataTransfer","_dataStore","_setDragImageHandler","_dropEffect","prototype","set","value","mode","indexOf","enumerable","configurable","freeze","types","effectAllowed","setData","type","data","Error","getData","clearData","format","index","splice","setDragImage","image","determineDropEffect","sourceNode","dispatchDragEvent","dragEvent","targetElement","dataStore","dataTransfer","cancelable","relatedTarget","console","log","leaveEvt","dndEvent","Event","bubbles","screenX","screenY","clientX","clientY","pageX","pageY","targetRect","getBoundingClientRect","offsetX","left","offsetY","top","createDragEventFromTouch","defaultView","cancelled","dispatchEvent","determineDragOperation","dropEffect","activeDragOperation","DragOperationController","_initialEvent","_config","_sourceNode","_dragOperationEndedCb","_dragOperationState","_immediateUserSelection","_currentDropTarget","_lastTouchEvent","_initialTouch","_touchMoveHandler","_onTouchMove","bind","_touchEndOrCancelHandler","_onTouchEndOrCancel","_setup","_this","_currentDragOperation","_dragDataStore","undefined","_currentHotspotCoordinates","_dragImagePageCoordinates","dragImageSrc","_dataTransfer","_dragImageOffset","_cleanup","dragImage","dragImageSetup","_dragImageTransforms","map","prefix","transform","replace","position","zIndex","classList","add","CLASS_PREFIX","_dragImage","dragImageOffset","dragImageCenterOnTouch","marginLeft","marginTop","body","appendChild","_iterationIntervalId","setInterval","_iterationLock","_dragAndDropProcessModelIteration","iterationInterval","clearInterval","parentNode","removeChild","startDrag","dragStartConditionOverride","error","preventDefault","dragImageTranslateOverride","handledDragImageTranslate_1","previousDragOperation","dragCancelled","_dragOperationEnded","sourceEl","dragImageTransforms","transitionEndCb","visibility","display","csDragImage","durationInS","parseFloat","transitionDuration","isNaN","rect","scrollLeft","documentElement","scrollTop","delayInS","transitionDelay","durationInMs","Math","round","setTimeout","applyDragImageSnapback","_finishDragOperation","newUserSelection","elementFromPoint","previousTargetElement","remove","currentDragOperationClass","state","dragFailed","config","tryFindDraggableTarget","target","draggable","getAttribute","cloneNode","onTouchstart","dragTarget","dragOperationEnded","err","onDelayTouchstart","evt","onReleasedItem","end","cancel","move","scroll","CustomEvent","EVENT_PREFIX","clearTimeout","timer","holdToDrag","defaultActionOverride","defaultPrevented","polyfill","override","keys","forEach","key","forceApply","detectedFeatures","features","dragEvents","userAgentSupportingNativeDnD","isBlinkEngine","chrome","test","navigator","userAgent","module","define","amd","MobileDragDrop"],"mappings":"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"}