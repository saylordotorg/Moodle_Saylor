{"version":3,"file":"jquery.ui.touch-punch-improved.min.js","sources":["../src/jquery.ui.touch-punch-improved.js"],"sourcesContent":["/*\n * JQuery UI Touch Punch Improved 0.3.1\n *\n *\n * Copyright 2013, Chris Hutchinson <chris@brushd.com>\n * Original jquery-ui-touch-punch Copyright 2011, Dave Furfero\n * Dual licensed under the MIT or GPL Version 2 licenses.\n *\n * Depends:\n * jquery.ui.widget.js\n * jquery.ui.mouse.js\n */\n(function(factory) {\n    if (typeof define === \"function\" && define.amd) {\n\n        // AMD. Register as an anonymous module.\n        define([\"jquery\", \"jqueryui\"], factory);\n    } else {\n\n        // Browser globals.\n        factory(window.jQuery);\n    }\n}(function($) {\n    var pointerEnabled = window.navigator.pointerEnabled\n        || window.navigator.msPointerEnabled;\n\n    // Detect touch support.\n    $.support.touch = 'ontouchend' in document || pointerEnabled;\n\n    // Ignore browsers without touch support or mouse support.\n    if (!$.support.touch || !$.ui.mouse) {\n        return;\n    }\n\n    var mouseProto = $.ui.mouse.prototype,\n        _mouseInit = mouseProto._mouseInit,\n        touchHandled;\n\n    /**\n     *  See http://stackoverflow.com/a/12714084/220825.\n     * @param {*} touch\n     * @returns {object}\n     */\n    function fixTouch(touch) {\n        var winPageX = window.pageXOffset,\n            winPageY = window.pageYOffset,\n            x = touch.clientX,\n            y = touch.clientY;\n\n        if (touch.pageY === 0 && Math.floor(y) > Math.floor(touch.pageY)\n         || touch.pageX === 0 && Math.floor(x) > Math.floor(touch.pageX)) {\n            // ...iOS4 clientX/clientY have the value that should have been.\n            // ...in pageX/pageY. While pageX/page/ have the value 0.\n            x = x - winPageX;\n            y = y - winPageY;\n        } else if (y < (touch.pageY - winPageY) || x < (touch.pageX - winPageX)) {\n            // Some Android browsers have totally bogus values for clientX/Y.\n            // when scrolling/zooming a page. Detectable since clientX/clientY.\n            // should never be smaller than pageX/pageY minus page scroll.\n            x = touch.pageX - winPageX;\n            y = touch.pageY - winPageY;\n        }\n\n        return {\n            clientX: x,\n            clientY: y\n        };\n    }\n\n    /**\n     * Simulate a mouse event based on a corresponding touch event\n     * @param {Object} event A touch event\n     * @param {String} simulatedType The corresponding mouse event\n     */\n    function simulateMouseEvent(event, simulatedType) {\n        // Ignore multi-touch events.\n        if ((!pointerEnabled && event.originalEvent.touches.length > 1) || (pointerEnabled && !event.isPrimary)) {\n            return;\n        }\n\n        var touch = pointerEnabled ? event.originalEvent : event.originalEvent.changedTouches[0],\n            simulatedEvent = document.createEvent('MouseEvents'),\n            coord = fixTouch(touch);\n\n        // Check if element is an input or a textarea.\n        if ($(touch.target).is(\"input\") || $(touch.target).is(\"textarea\")) {\n            event.stopPropagation();\n        } else {\n            event.preventDefault();\n        }\n\n        // Initialize the simulated mouse event using the touch event's coordinates.\n        simulatedEvent.initMouseEvent(\n            simulatedType, // ...type.\n            true, // ...bubbles.\n            true, // ...cancelable.\n            window, // ...view.\n            1, // ...detail\n            event.screenX || touch.screenX, // ...screenX.\n            event.screenY || touch.screenY, // ...screenY.\n            event.clientX || coord.clientX, // ...clientX.\n            event.clientY || coord.clientY, // ...clientY.\n            false, // ...ctrlKey.\n            false, // ...altKey.\n            false, // ...shiftKey.\n            false, // ...metaKey.\n            0, // ...button.\n            null // ...relatedTarget.\n        );\n\n        // Dispatch the simulated event to the target element.\n        event.target.dispatchEvent(simulatedEvent);\n    }\n\n    /**\n     * Handle the jQuery UI widget's touchstart events\n     * @param {Object} event The widget element's touchstart event\n     */\n    mouseProto._touchStart = function(event) {\n        var self = this;\n\n        // Ignore the event if another widget is already being handled.\n        if (touchHandled || (!pointerEnabled && !self._mouseCapture(event.originalEvent.changedTouches[0]))) {\n            return;\n        }\n\n        // Set the flag to prevent other widgets from inheriting the touch event.\n        touchHandled = true;\n\n        // Track movement to determine if interaction was a click.\n        self._touchMoved = false;\n\n        // Simulate the mouseover event.\n        simulateMouseEvent(event, 'mouseover');\n\n        // Simulate the mousemove event.\n        simulateMouseEvent(event, 'mousemove');\n\n        // Simulate the mousedown event.\n        simulateMouseEvent(event, 'mousedown');\n    };\n\n    /**\n     * Handle the jQuery UI widget's touchmove events\n     * @param {Object} event The document's touchmove event\n     */\n    mouseProto._touchMove = function(event) {\n        // Ignore event if not handled.\n        if (!touchHandled) {\n            return;\n        }\n\n        // Interaction was not a click.\n        this._touchMoved = true;\n\n        // Simulate the mousemove event.\n        simulateMouseEvent(event, 'mousemove');\n    };\n\n    /**\n     * Handle the jQuery UI widget's touchend events\n     * @param {Object} event The document's touchend event\n     */\n    mouseProto._touchEnd = function(event) {\n        // Ignore event if not handled.\n        if (!touchHandled) {\n            return;\n        }\n\n        // Simulate the mouseup event.\n        simulateMouseEvent(event, 'mouseup');\n\n        // Simulate the mouseout event.\n        simulateMouseEvent(event, 'mouseout');\n\n        // If the touch interaction did not move, it should trigger a click.\n        if (!this._touchMoved) {\n            // Simulate the click event.\n            simulateMouseEvent(event, 'click');\n        }\n\n        // Unset the flag to allow other widgets to inherit the touch event.\n        touchHandled = false;\n    };\n\n    /**\n     * A duck punch of the $.ui.mouse _mouseInit method to support touch events.\n     * This method extends the widget with bound touch event handlers that\n     * translate touch events to mouse events and pass them to the widget's\n     * original mouse event handling methods.\n     */\n    mouseProto._mouseInit = function() {\n        var self = this;\n\n        self.element.on({\n            'touchstart': $.proxy(self, '_touchStart'),\n            'touchmove': $.proxy(self, '_touchMove'),\n            'touchend': $.proxy(self, '_touchEnd'),\n            'pointerDown': $.proxy(self, '_touchStart'),\n            'pointerMove': $.proxy(self, '_touchMove'),\n            'pointerUp': $.proxy(self, '_touchEnd'),\n            'MSPointerDown': $.proxy(self, '_touchStart'),\n            'MSPointerMove': $.proxy(self, '_touchMove'),\n            'MSPointerUp': $.proxy(self, '_touchEnd')\n        });\n\n        // Call the original $.ui.mouse init method.\n        _mouseInit.call(self);\n    };\n\n}));"],"names":["factory","$","pointerEnabled","window","navigator","msPointerEnabled","support","touch","document","ui","mouse","touchHandled","mouseProto","prototype","_mouseInit","_touchStart","event","this","_mouseCapture","originalEvent","changedTouches","_touchMoved","simulateMouseEvent","_touchMove","_touchEnd","element","on","proxy","call","simulatedType","touches","length","isPrimary","simulatedEvent","createEvent","coord","winPageX","pageXOffset","winPageY","pageYOffset","x","clientX","y","clientY","pageY","Math","floor","pageX","fixTouch","target","is","stopPropagation","preventDefault","initMouseEvent","screenX","screenY","dispatchEvent","define","amd","jQuery"],"mappings":"AAYC,IAASA,QAAAA,QAUR,SAASC,OACHC,eAAiBC,OAAOC,UAAUF,gBAC/BC,OAAOC,UAAUC,oBAGxBJ,EAAEK,QAAQC,MAAQ,eAAgBC,UAAYN,eAGzCD,EAAEK,QAAQC,OAAUN,EAAEQ,GAAGC,WAM1BC,aAFAC,WAAaX,EAAEQ,GAAGC,MAAMG,UACxBC,WAAaF,WAAWE,WAmF5BF,WAAWG,YAAc,SAASC,OAI1BL,eAAkBT,iBAHXe,KAGmCC,cAAcF,MAAMG,cAAcC,eAAe,MAK/FT,cAAe,EARJM,KAWNI,aAAc,EAGnBC,mBAAmBN,MAAO,aAG1BM,mBAAmBN,MAAO,aAG1BM,mBAAmBN,MAAO,eAO9BJ,WAAWW,WAAa,SAASP,OAExBL,oBAKAU,aAAc,EAGnBC,mBAAmBN,MAAO,eAO9BJ,WAAWY,UAAY,SAASR,OAEvBL,eAKLW,mBAAmBN,MAAO,WAG1BM,mBAAmBN,MAAO,YAGrBC,KAAKI,aAENC,mBAAmBN,MAAO,SAI9BL,cAAe,IASnBC,WAAWE,WAAa,WACTG,KAENQ,QAAQC,GAAG,YACEzB,EAAE0B,MAHTV,KAGqB,yBACfhB,EAAE0B,MAJRV,KAIoB,uBACfhB,EAAE0B,MALPV,KAKmB,yBACXhB,EAAE0B,MANVV,KAMsB,2BACdhB,EAAE0B,MAPVV,KAOsB,wBAChBhB,EAAE0B,MARRV,KAQoB,2BACVhB,EAAE0B,MATZV,KASwB,6BACdhB,EAAE0B,MAVZV,KAUwB,0BAChBhB,EAAE0B,MAXVV,KAWsB,eAIjCH,WAAWc,KAfAX,gBAtHNK,mBAAmBN,MAAOa,qBAEzB3B,gBAAkBc,MAAMG,cAAcW,QAAQC,OAAS,GAAO7B,iBAAmBc,MAAMgB,gBAIzFzB,MAAQL,eAAiBc,MAAMG,cAAgBH,MAAMG,cAAcC,eAAe,GAClFa,eAAiBzB,SAAS0B,YAAY,eACtCC,eAvCU5B,WACV6B,SAAWjC,OAAOkC,YAClBC,SAAWnC,OAAOoC,YAClBC,EAAIjC,MAAMkC,QACVC,EAAInC,MAAMoC,eAEM,IAAhBpC,MAAMqC,OAAeC,KAAKC,MAAMJ,GAAKG,KAAKC,MAAMvC,MAAMqC,QACtC,IAAhBrC,MAAMwC,OAAeF,KAAKC,MAAMN,GAAKK,KAAKC,MAAMvC,MAAMwC,QAGtDP,GAAQJ,SACRM,GAAQJ,WACDI,EAAKnC,MAAMqC,MAAQN,UAAaE,EAAKjC,MAAMwC,MAAQX,YAI1DI,EAAIjC,MAAMwC,MAAQX,SAClBM,EAAInC,MAAMqC,MAAQN,UAGf,CACHG,QAASD,EACTG,QAASD,GAiBDM,CAASzC,OAGjBN,EAAEM,MAAM0C,QAAQC,GAAG,UAAYjD,EAAEM,MAAM0C,QAAQC,GAAG,YAClDlC,MAAMmC,kBAENnC,MAAMoC,iBAIVnB,eAAeoB,eACXxB,eACA,GACA,EACA1B,OACA,EACAa,MAAMsC,SAAW/C,MAAM+C,QACvBtC,MAAMuC,SAAWhD,MAAMgD,QACvBvC,MAAMyB,SAAWN,MAAMM,QACvBzB,MAAM2B,SAAWR,MAAMQ,SACvB,GACA,GACA,GACA,EACA,EACA,MAIJ3B,MAAMiC,OAAOO,cAAcvB,mBAlGT,mBAAXwB,QAAyBA,OAAOC,IAGvCD,sDAAO,CAAC,SAAU,YAAazD,SAI/BA,QAAQG,OAAOwD"}