{"version":3,"file":"questionedit.min.js","sources":["../src/questionedit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript code for the gapfill question type.\n *\n * @copyright  2017 Marcus Green\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* The data is stored in a hidden field */\ndefine(['jquery', 'qtype_gapfill/Item'], function($, Item) {\n  return {\n    init: function() {\n      $('#id_answerdisplay').change(function() {\n        var selected = $(this).val();\n        if (selected == 'gapfill') {\n          $('#id_fixedgapsize').prop('disabled', false);\n          $(\"#id_optionsaftertext\").prop('disabled', true).prop('checked', false);\n          $('#id_singleuse').prop('disabled', true).prop('checked', false);\n          $('#id_disableregex').prop('disabled', false);\n\n        }\n        if (selected == 'dragdrop') {\n          $('#id_optionsaftertext').prop('disabled', false);\n          $('#id_singleuse').prop('disabled', false);\n          $('#id_fixedgapsize').prop('disabled', false);\n          $('#id_disableregex').prop('disabled', false);\n        }\n        if (selected == 'dropdown') {\n          $('#id_fixedgapsize').prop('disabled', true).prop('checked', false);\n          $('#id_optionsaftertext').prop('disabled', true).prop('checked', false);\n          $('#id_singleuse').prop('disabled', true).prop('checked', false);\n          $('#id_disableregex').prop('disabled', true).prop('checked', false);\n        }\n\n\n      });\n      /* A click on the itemsettings button */\n      $('#id_itemsettings_button').on('click', function() {\n        var attoIsLive = $('.editor_atto').length;\n        /* Show error if Atto is not loaded. It might be because the page has not finished loading\n         * or because plain text elements are being used or (perhaps less likely as time goes on)\n         * the HTMLarea editor is being used. It might be possible to work with those other editors\n         * but limiting to Atto keeps things straightforward and maintainable.\n         */\n        if (attoIsLive < 1) {\n          $('#id_error_itemsettings_button').css({\n            display: 'inline',\n            color: 'red',\n          });\n          $('#id_error_itemsettings_button')[0].innerHTML = M.util.get_string(\n            'itemsettingserror',\n            'qtype_gapfill'\n          );\n          return;\n        }\n        $('#questiontext .atto_html_button').attr('disabled', 'true');\n        if ($('#id_questiontexteditable').get(0).isContentEditable) {\n          $('#id_questiontexteditable').attr('contenteditable', 'false');\n          $('#fitem_id_questiontext')\n            .find('button')\n            .attr('disabled', 'true');\n          var settingformheight = $('#id_questiontexteditable').css('height');\n          var settingformwidth = $('#id_questiontexteditable').css('width');\n          $('#id_questiontexteditable').css('display', 'none');\n          /* Copy the styles from attos editable area so the canvas looks the same (except gray) */\n          $('#id_itemsettings_canvas').css(\n            copyStyles($('#id_questiontexteditable'))\n          );\n          var ed = $('#id_questiontexteditable').closest(\n            '.editor_atto_content_wrap'\n          );\n          $('#id_itemsettings_canvas')\n            .appendTo(ed)\n            .css('position', 'relative');\n          $('#id_itemsettings_canvas').css({\n            display: 'block',\n            background: 'lightgrey',\n          });\n\n          /* Copy the real html to the feedback editing html */\n          $('#id_itemsettings_canvas').html(\n            $('#id_questiontexteditable').prop('innerHTML')\n          );\n          $('#id_itemsettings_canvas').css({\n            height: settingformheight,\n            width: settingformwidth,\n          });\n          $('#id_itemsettings_canvas').css({height: '100%', width: '100%'});\n          $('#id_itemsettings_button').html(\n            M.util.get_string('editquestiontext', 'qtype_gapfill')\n          );\n          /* Setting the height by hand gets around a quirk of MSIE */\n          $('#id_itemsettings_canvas').height(\n            $('#id_questiontexteditable').height()\n          );\n          /* Disable the buttons on questiontext but not on the feedback form */\n          /* wrapContent should be the last on this block as it sometimes falls over with an error */\n          wrapContent($('#id_itemsettings_canvas')[0]);\n        } else {\n          $('#id_questiontexteditable').css({\n            display: 'block',\n            backgroundColor: 'white',\n          });\n          $('#id_questiontexteditable').attr('contenteditable', 'true');\n          $('#id_itemsettings_canvas').css('display', 'none');\n          $('#fitem_id_questiontext')\n            .find('button')\n            .removeAttr('disabled');\n          $('#id_settings_popup').css('display', 'none');\n          $('#id_itemsettings_button').html(\n            M.util.get_string('additemsettings', 'qtype_gapfill')\n          );\n          $('[class^=atto_]').removeAttr('disabled');\n        }\n      });\n\n      /* A click on the text */\n      $('#id_itemsettings_canvas').on('click', function(e) {\n        /*\n         * Questiontext needs to be edditable and the target must start\n         * with id followed by one or more digits and an underscore\n         * */\n        if (\n          !$('#id_questiontexteditable').get(0).isContentEditable &&\n          e.target.id.match(/^id[0-9]+_/)\n        ) {\n          var delimitchars = $('#id_delimitchars').val();\n          var item = new Item(e.target.innerHTML, delimitchars);\n\n          // Var item = new Item(e.target.innerHTML, delimitchars);\n          var itemsettings = item.getItemSettings(e.target);\n          if (itemsettings === null || itemsettings.length === 0) {\n            $('#id_correcteditable').html('');\n            $('#id_incorrecteditable').html('');\n          } else {\n            $('#id_correcteditable').html(itemsettings.correctfeedback);\n            $('#id_incorrecteditable').html(itemsettings.incorrectfeedback);\n          }\n          $(\"label[for*='id_correct']\").text(\n            M.util.get_string('correct', 'qtype_gapfill')\n          );\n          $(\"label[for*='id_incorrect']\").text(\n            M.util.get_string('incorrect', 'qtype_gapfill')\n          );\n          $('#id_itemsettings_popup .atto_image_button').attr(\n            'disabled',\n            'true'\n          );\n          $('#id_itemsettings_popup .atto_media_button').attr(\n            'disabled',\n            'true'\n          );\n          $('#id_itemsettings_popup .atto_managefiles_button').attr(\n            'disabled',\n            'true'\n          );\n          var title = M.util.get_string('additemsettings', 'qtype_gapfill');\n          /* The html jquery call will turn any encoded entities such as &gt; to html, i.e. > */\n          title +=\n            ': ' +\n            $('<div/>')\n              .html(item.stripdelim())\n              .text();\n          require(['jquery', 'jqueryui'], function($) {\n            $('#id_itemsettings_popup').dialog({\n              position: {\n                my: 'right',\n                at: 'right',\n                of: '#id_itemsettings_canvas',\n              },\n              height: 500,\n              width: '70%',\n              modal: false,\n              title: title,\n              buttons: [\n                {\n                  text: 'OK',\n                  id: 'SaveItemFeedback',\n                  click: function() {\n                    var JSONstr = item.updateJson(e);\n                    $('[class^=atto_]').removeAttr('disabled');\n                    $(\"[name='itemsettings']\").val(JSONstr);\n                    $('.ui-dialog-content').dialog('close');\n                    /* Set editable to true as it is checked at the start of click */\n                    $('#id_questiontexteditable').attr(\n                      'contenteditable',\n                      'true'\n                    );\n                    $('#id_itemsettings_button').click();\n                  },\n                },\n              ],\n            });\n          });\n        }\n      });\n\n      /**\n       * Convert an object to an array\n       * @param {object} obj\n       * @return {array}\n       */\n      function toArray(obj) {\n        var arr = [];\n        for (var i = 0, iLen = obj.length; i < iLen; i++) {\n          arr.push(obj[i]);\n        }\n        return arr;\n      }\n\n      // Wrap the words of an element and child elements in a span.\n      // Recurs over child elements, add an ID and class to the wrapping span.\n      // Does not affect elements with no content, or those to be excluded.\n      var wrapContent = (function() {\n        return function(el) {\n          var count = 0;\n          var gaps = [];\n          // If element provided, start there, otherwise use the body.\n          el = el && el.parentNode ? el : document.body;\n          // Get all child nodes as a static array.\n          var node,\n            nodes = toArray(el.childNodes);\n          if (el.id === 'id_questiontextfeedback' && count > 0) {\n            count = 0;\n          }\n          var frag, text;\n          var delimitchars = $('#id_delimitchars').val();\n          var l = delimitchars.substring(0, 1);\n          var r = delimitchars.substring(1, 2);\n          var regex = new RegExp('(\\\\' + l + '.*?\\\\' + r + ')', 'g');\n          var sp,\n            span = document.createElement('span');\n          // Tag names of elements to skip, there are more to add.\n          var skip = {\n            script: '',\n            button: '',\n            input: '',\n            select: '',\n            textarea: '',\n            option: '',\n          };\n          // For each child node...\n          for (var i = 0, iLen = nodes.length; i < iLen; i++) {\n            node = nodes[i];\n            // If it's an element, call wrapContent.\n            if (node.nodeType === 1 && !(node.tagName.toLowerCase() in skip)) {\n              wrapContent(node);\n              // If it's a text node, wrap words.\n            } else if (node.nodeType === 3) {\n              var textsplit = new RegExp('(\\\\' + l + '.*?\\\\' + r + ')', 'g');\n              text = node.data.split(textsplit);\n              if (text) {\n                // Create a fragment, handy suckers these.\n                frag = document.createDocumentFragment();\n                for (var j = 0, jLen = text.length; j < jLen; j++) {\n                  // If not whitespace, wrap it and append to the fragment.\n                  doGap(text, span, j);\n                }\n              }\n              // Replace the original node with the fragment.\n              node.parentNode.replaceChild(frag, node);\n            }\n          }\n          /**\n           * Process each gap\n           *\n           * @param {*} text\n           * @param {*} span\n           * @param {*} j\n           */\n          function doGap(text, span, j) {\n            gaps = [];\n            if (regex.test(text[j])) {\n              sp = span.cloneNode(false);\n              count++;\n              sp.className = 'item';\n              var item = new Item(text[j], $('#id_delimitchars').val());\n              if (item.gaptext > '') {\n                var instance = 0;\n                for (var k = 0; k < gaps.length; ++k) {\n                  if (gaps[k] === item.text) {\n                    instance++;\n                  }\n                }\n                item.id = 'id' + count + '_' + instance;\n                sp.id = item.id;\n                var is = item.getItemSettings(item);\n                if (item.striptags(is.correctfeedback) > '') {\n                  sp.className = 'hascorrect';\n                }\n                if (item.striptags(is.incorrectfeedback) > '') {\n                  sp.className = sp.className + ' ' + 'hasnocorrect';\n                }\n                gaps.push(item.gaptext);\n              }\n              sp.appendChild(document.createTextNode(text[j]));\n              frag.appendChild(sp);\n              // Otherwise, just append it to the fragment.\n            } else {\n              frag.appendChild(document.createTextNode(text[j]));\n            }\n          }\n        };\n      })();\n      /**\n       *\n       * @param {array} source\n       * @return {array} product\n       */\n      function copyStyles(source) {\n        // The map to return with requested styles and values as KVP.\n        var product = {};\n        // The style object from the DOM element we need to iterate through.\n        var style;\n        // Recycle the name of the style attribute.\n        var name;\n        // Prevent from empty selector.\n        if (source.length) {\n          // Otherwise, we need to get everything.\n          var dom = source.get(0);\n          if (window.getComputedStyle) {\n            // Convenience methods to turn css case ('background-image') to camel ('backgroundImage').\n            var pattern = /-([a-z])/g;\n            var uc = function(a, b) {\n              return b.toUpperCase();\n            };\n            var camelize = function(string) {\n              return string.replace(pattern, uc);\n            };\n            // Make sure we're getting a good reference.\n            if ((style = window.getComputedStyle(dom, null))) {\n              var camel, value;\n              for (var i = 0, l = style.length; i < l; i++) {\n                name = style[i];\n                camel = camelize(name);\n                value = style.getPropertyValue(name);\n                product[camel] = value;\n              }\n            } else if ((style = dom.currentStyle)) {\n              for (name in style) {\n                product[name] = style[name];\n              }\n            } else if ((style = dom.style)) {\n              product = getStyle(style, product, name);\n            }\n            return product;\n          }\n        }\n        return false;\n      }\n      /**\n       * TODO check if this function is needed\n       * @param {string} style\n       * @param {object} product\n       * @param {string} name\n       * @returns {string}\n       */\n      function getStyle(style, product, name) {\n        for (name in style) {\n          if (typeof style[name] != 'function') {\n            product[name] = style[name];\n          }\n        }\n        return product;\n      }\n    },\n  };\n});\n"],"names":["define","$","Item","init","change","selected","this","val","prop","on","length","css","display","color","innerHTML","M","util","get_string","attr","get","isContentEditable","find","settingformheight","settingformwidth","source","style","name","product","dom","window","getComputedStyle","pattern","uc","a","b","toUpperCase","camelize","string","replace","camel","value","i","l","getPropertyValue","currentStyle","getStyle","copyStyles","ed","closest","appendTo","background","html","height","width","wrapContent","backgroundColor","removeAttr","e","target","id","match","delimitchars","item","itemsettings","getItemSettings","correctfeedback","incorrectfeedback","text","title","stripdelim","require","dialog","position","my","at","of","modal","buttons","click","JSONstr","updateJson","el","node","frag","count","gaps","nodes","obj","arr","iLen","push","toArray","parentNode","document","body","childNodes","sp","substring","r","regex","RegExp","span","createElement","skip","script","button","input","select","textarea","option","nodeType","tagName","toLowerCase","textsplit","data","split","createDocumentFragment","j","jLen","doGap","replaceChild","test","cloneNode","className","gaptext","instance","k","is","striptags","appendChild","createTextNode"],"mappings":"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"}