define("core_user/participantsfilter",["exports","./local/participantsfilter/filtertypes/courseid","core_table/dynamic","./local/participantsfilter/filter","core/str","core/notification","core/pending","./local/participantsfilter/selectors","core/templates","core/custom_interaction_events","jquery"],(function(_exports,_courseid,DynamicTable,_filter,_str,_notification,_pending,_selectors,_templates,_custom_interaction_events,_jquery){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_courseid=_interopRequireDefault(_courseid),DynamicTable=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(DynamicTable),_filter=_interopRequireDefault(_filter),_notification=_interopRequireDefault(_notification),_pending=_interopRequireDefault(_pending),_selectors=_interopRequireDefault(_selectors),_templates=_interopRequireDefault(_templates),_custom_interaction_events=_interopRequireDefault(_custom_interaction_events),_jquery=_interopRequireDefault(_jquery);var _systemImportTransformerGlobalIdentifier="undefined"!=typeof window?window:"undefined"!=typeof self?self:"undefined"!=typeof global?global:{};function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}_exports.init=participantsRegionId=>{const filterSet=document.querySelector("#".concat(participantsRegionId)),activeFilters={courseid:new _courseid.default("courseid",filterSet)},getFilterRegion=()=>filterSet.querySelector(_selectors.default.filterset.regions.filterlist),addFilterRow=()=>{const pendingPromise=new _pending.default("core_user/participantsfilter:addFilterRow"),rownum=1+getFilterRegion().querySelectorAll(_selectors.default.filter.region).length;return _templates.default.renderForPromise("core_user/local/participantsfilter/filterrow",{rownumber:rownum}).then((_ref=>{let{html:html,js:js}=_ref;return _templates.default.appendNodeContents(getFilterRegion(),html,js)})).then((filterRow=>{const typeList=filterSet.querySelector(_selectors.default.data.typeList);return filterRow.forEach((contentNode=>{const contentTypeList=contentNode.querySelector(_selectors.default.filter.fields.type);contentTypeList&&(contentTypeList.innerHTML=typeList.innerHTML)})),filterRow})).then((filterRow=>(updateFiltersOptions(),filterRow))).then((result=>(pendingPromise.resolve(),result))).catch(_notification.default.exception)},addFilter=async(filterRow,filterType,initialFilterValues)=>{filterRow.dataset.filterType=filterType;const filterDataNode=(filterType=>filterSet.querySelector(_selectors.default.filterset.regions.datasource).querySelector(_selectors.default.data.fields.byName(filterType)))(filterType);let Filter=_filter.default;null!=filterDataNode&&filterDataNode.dataset.filterTypeClass&&(Filter=await("function"==typeof _systemImportTransformerGlobalIdentifier.define&&_systemImportTransformerGlobalIdentifier.define.amd?new Promise((function(resolve,reject){_systemImportTransformerGlobalIdentifier.require([filterDataNode.dataset.filterTypeClass],resolve,reject)})):"undefined"!=typeof module&&module.exports&&"undefined"!=typeof require||"undefined"!=typeof module&&module.component&&_systemImportTransformerGlobalIdentifier.require&&"component"===_systemImportTransformerGlobalIdentifier.require.loader?Promise.resolve(require(filterDataNode.dataset.filterTypeClass)):Promise.resolve(_systemImportTransformerGlobalIdentifier[filterDataNode.dataset.filterTypeClass]))),activeFilters[filterType]=new Filter(filterType,filterSet,initialFilterValues);const typeField=filterRow.querySelector(_selectors.default.filter.fields.type);return typeField.value=filterType,typeField.disabled="disabled",updateFiltersOptions(),activeFilters[filterType]},removeOrReplaceFilterRow=(filterRow,refreshContent)=>{1===getFilterRegion().querySelectorAll(_selectors.default.filter.region).length?replaceFilterRow(filterRow,refreshContent):removeFilterRow(filterRow,refreshContent)},removeFilterRow=async function(filterRow){let refreshContent=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const filterType=filterRow.querySelector(_selectors.default.filter.fields.type),hasFilterValue=!!filterType.value;removeFilterObject(filterRow.dataset.filterType),filterRow.remove(),updateFiltersOptions(),hasFilterValue&&refreshContent&&updateTableFromFilter();const filterLegends=await getAvailableFilterLegends();getFilterRegion().querySelectorAll(_selectors.default.filter.region).forEach(((filterRow,index)=>{filterRow.querySelector("legend").innerText=filterLegends[index]}))},replaceFilterRow=function(filterRow){let refreshContent=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],rowNum=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return removeFilterObject(filterRow.dataset.filterType),_templates.default.renderForPromise("core_user/local/participantsfilter/filterrow",{rownumber:rowNum}).then((_ref2=>{let{html:html,js:js}=_ref2;return _templates.default.replaceNode(filterRow,html,js)})).then((filterRow=>{const typeList=filterSet.querySelector(_selectors.default.data.typeList);return filterRow.forEach((contentNode=>{const contentTypeList=contentNode.querySelector(_selectors.default.filter.fields.type);contentTypeList&&(contentTypeList.innerHTML=typeList.innerHTML)})),filterRow})).then((filterRow=>(updateFiltersOptions(),filterRow))).then((filterRow=>refreshContent?updateTableFromFilter():filterRow)).catch(_notification.default.exception)},removeFilterObject=filterName=>{if(filterName){const filter=activeFilters[filterName];filter&&(filter.tearDown(),delete activeFilters[filterName])}},updateFiltersOptions=()=>{const filters=getFilterRegion().querySelectorAll(_selectors.default.filter.region);filters.forEach((filterRow=>{filterRow.querySelectorAll(_selectors.default.filter.fields.type+" option").forEach((option=>{option.value===filterRow.dataset.filterType?(option.classList.remove("hidden"),option.disabled=!1):activeFilters[option.value]?(option.classList.add("hidden"),option.disabled=!0):(option.classList.remove("hidden"),option.disabled=!1)}))}));const addRowButton=filterSet.querySelector(_selectors.default.filterset.actions.addRow);filterSet.querySelectorAll(_selectors.default.data.fields.all).length<=filters.length?addRowButton.setAttribute("disabled","disabled"):addRowButton.removeAttribute("disabled"),1===filters.length?(filterSet.querySelector(_selectors.default.filterset.regions.filtermatch).classList.add("hidden"),filterSet.querySelector(_selectors.default.filterset.fields.join).value=2,filterSet.dataset.filterverb=2):filterSet.querySelector(_selectors.default.filterset.regions.filtermatch).classList.remove("hidden")},setFilterFromConfig=config=>{const filterConfig=Object.entries(config.filters);if(!filterConfig.length)return Promise.resolve();filterSet.querySelector(_selectors.default.filterset.fields.join).value=config.jointype;const filterPromises=filterConfig.map((_ref3=>{let[filterType,filterData]=_ref3;if("courseid"===filterType)return!1;const filterValues=filterData.values;return!!filterValues.length&&addFilterRow().then((_ref4=>{let[filterRow]=_ref4;return addFilter(filterRow,filterType,filterValues)}))})).filter((promise=>promise));return filterPromises.length?Promise.all(filterPromises).then((()=>{getFilterRegion().querySelectorAll(_selectors.default.filter.region).forEach((filterRow=>{filterRow.querySelector(_selectors.default.filter.fields.type).value||removeOrReplaceFilterRow(filterRow,!1)}))})).then(updateFiltersOptions).then(updateTableFromFilter):Promise.resolve()},updateTableFromFilter=()=>{const pendingPromise=new _pending.default("core_user/participantsfilter:updateTableFromFilter"),filters={};return Object.values(activeFilters).forEach((filter=>{filters[filter.filterValue.name]=filter.filterValue})),DynamicTable.setFilters(DynamicTable.getTableFromId(filterSet.dataset.tableRegion),{jointype:parseInt(filterSet.querySelector(_selectors.default.filterset.fields.join).value,10),filters:filters}).then((result=>(pendingPromise.resolve(),result))).catch(_notification.default.exception)},getAvailableFilterLegends=async()=>{const maxFilters=document.querySelector(_selectors.default.data.typeListSelect).length-1;let requests=[];[...Array(maxFilters)].forEach(((_,rowIndex)=>{requests.push({key:"filterrowlegend",component:"core_user",param:rowIndex+1})}));return await(0,_str.get_strings)(requests).then((fetchedStrings=>fetchedStrings)).catch(_notification.default.exception)};filterSet.querySelector(_selectors.default.filterset.region).addEventListener("click",(e=>{e.target.closest(_selectors.default.filterset.actions.addRow)&&(e.preventDefault(),addFilterRow()),e.target.closest(_selectors.default.filterset.actions.applyFilters)&&(e.preventDefault(),updateTableFromFilter()),e.target.closest(_selectors.default.filterset.actions.resetFilters)&&(e.preventDefault(),(()=>{const pendingPromise=new _pending.default("core_user/participantsfilter:setFilterFromConfig");getFilterRegion().querySelectorAll(_selectors.default.filter.region).forEach((filterRow=>removeOrReplaceFilterRow(filterRow,!1))),updateTableFromFilter().then((result=>(pendingPromise.resolve(),result)))})())})),filterSet.querySelector(_selectors.default.filterset.regions.filterlist).addEventListener("click",(e=>{e.target.closest(_selectors.default.filter.actions.remove)&&(e.preventDefault(),removeOrReplaceFilterRow(e.target.closest(_selectors.default.filter.region),!0))}));let filterRegion=(0,_jquery.default)(getFilterRegion());_custom_interaction_events.default.define(filterRegion,[_custom_interaction_events.default.events.accessibleChange]),filterRegion.on(_custom_interaction_events.default.events.accessibleChange,(e=>{const typeField=e.target.closest(_selectors.default.filter.fields.type);if(typeField&&typeField.value){const filter=e.target.closest(_selectors.default.filter.region);addFilter(filter,typeField.value)}})),filterSet.querySelector(_selectors.default.filterset.fields.join).addEventListener("change",(e=>{filterSet.dataset.filterverb=e.target.value}));const tableRoot=DynamicTable.getTableFromId(filterSet.dataset.tableRegion),initialFilters=DynamicTable.getFilters(tableRoot);if(initialFilters){const initialFilterPromise=new _pending.default("core_user/participantsfilter:setFilterFromConfig");setFilterFromConfig(initialFilters).then((()=>initialFilterPromise.resolve())).catch()}}}));

//# sourceMappingURL=participantsfilter.min.js.map