{"version":3,"sources":["../src/poodll_flashrecorder.js"],"names":["define","$","log","utils","uploader","lz","debug","instanceprops","fetch_instance_props","widgetid","init_instance_props","savebutton","audiodatacontrol","config","supports_current_browser","iOS","is_ios","isAndroid","is_android","flashonandroid","mediatype","embed","element","flashmp3_cloudbypass","posturl","cloudbypassurl","filename","s3filename","using_s3","ip","ie","is_ie","flashmp3audio_widgetjson","replace","swfopts","parseJSON","swf","savebuttonstyle","savebuttonid","savecontrol","M","util","get_string","append","audiodatacontrolid","prepend","clone","init","setCanvasAttribute","registerevents","audioblob","click","audiodata","atob","val","haveaudiodata","length","Output","audioblobdata","i","push","charCodeAt","Blob","Uint8Array","type","uploadBlob","callMethod"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log', 'filter_poodll/utils_amd', 'filter_poodll/uploader', 'filter_poodll/lzloader'], function ($, log, utils, uploader, lz) {\n\n    \"use strict\"; // jshint ;\n\n    log.debug('PoodLL Flash Recorder: initialising');\n\n    return {\n\n        instanceprops: [],\n\n        fetch_instance_props: function (widgetid) {\n            return this.instanceprops[widgetid];\n        },\n\n        init_instance_props: function (widgetid) {\n            var props = {};\n            props.savebutton = null;\n            props.audiodatacontrol = null;\n            props.config = null;\n            props.uploader = null;\n            this.instanceprops[widgetid] = props\n        },\n\n        // This recorder supports the current browser\n        supports_current_browser: function (config) {\n            var iOS = utils.is_ios();\n            var isAndroid = utils.is_android();\n            if (iOS || (!config.flashonandroid && isAndroid)) {\n                return false;\n            } else {\n                if (config.mediatype != 'audio') {\n                    return false;\n                }\n\n                log.debug('PoodLL Flash Recorder: supports this browser');\n                return true;\n            }\n        },\n\n        // Perform the embed of this recorder on the page\n        //into the element passed in. with config\n        embed: function (element, config) {\n\n            //if we are bypassing cloud tweak a few things\n            if (config.flashmp3_cloudbypass == 1) {\n                config.posturl = config.cloudbypassurl;\n                config.filename = false;\n                config.s3filename = false;\n                config.using_s3 = false;\n            }\n            this.init_instance_props(config.widgetid);\n            var ip = this.fetch_instance_props(config.widgetid);\n\n            //if this is internet explorer, we can't use js uploader\n            //because flash wont pass filedata correctly to DOM\n            //we need to upload direct from flash\n            ip.ie = utils.is_ie();\n            if (ip.ie) {\n                config.flashmp3audio_widgetjson = config.flashmp3audio_widgetjson.replace('sendmethod=post', 'sendmethod=ajax');\n            }\n\n            //set config\n            ip.config = config;\n\n            //swf recorder\n            var swfopts = $.parseJSON(config.flashmp3audio_widgetjson);\n            lz.embed.swf(swfopts);\n\n            //savebutton\n            var savebuttonstyle = '';\n            if (ip.ie) {\n                savebuttonstyle = ' style=\"display: none\" ';\n            }\n            var savebuttonid = config.widgetid + '_savebutton';\n            var savecontrol = '<button id=\"' + savebuttonid + '\" type=\"button\" class=\"poodll_save-recording\"' + savebuttonstyle + '>' + M.util.get_string('recui_save', 'filter_poodll') + '</button>';\n            $(element).append(savecontrol);\n\n\n            //audio control\n            var audiodatacontrolid = config.widgetid + '_adc';\n            var audiocontrol = '<input type=\"hidden\" name=\"audiodatacontrol\" id=\"' + audiodatacontrolid + '\" value=\"\" />';\n            $(element).prepend(audiocontrol);\n\n            //init the uploader\n            ip.uploader = uploader.clone();\n            ip.uploader.init(element, config);\n\n            //register events\n            lz.embed[config.widgetid].setCanvasAttribute('audiodatacontrol', audiodatacontrolid);\n            ip.savebutton = $('#' + savebuttonid);\n            ip.audiodatacontrol = $('#' + audiodatacontrolid);\n            this.registerevents(config.widgetid);\n        },\n\n        registerevents: function (widgetid) {\n            var ip = this.fetch_instance_props(widgetid);\n            ip.audioblob = false;\n\n            ip.savebutton.click(function () {\n                //here we convert a string of base64 data into a blob which represents \n                //an mp3 file.  \n                var audiodata = atob(ip.audiodatacontrol.val());\n\n                //we check if there is actually any data,because if not we want to complain\n                //if this is a resubmit, impossible though, we pass through to upload\n                var haveaudiodata = audiodata && audiodata.length > 0;\n                if (!haveaudiodata && !ip.audioblob) {\n                    ip.uploader.Output(M.util.get_string('recui_nothingtosaveerror', 'filter_poodll'));\n                    return false;\n                }\n\n                //create our audioblob if it is empty .. most likely\n                if (!ip.audioblob && haveaudiodata) {\n                    var audioblobdata = [];\n                    for (var i = 0; i < audiodata.length; i++) {\n                        audioblobdata.push(audiodata.charCodeAt(i));\n                    }\n                    ip.audioblob = new Blob([new Uint8Array(audioblobdata)], {type: 'audio/mpeg3'});\n                }\n\n                //and we upload that blob\n                ip.uploader.uploadBlob(ip.audioblob, 'audio/mpeg3');\n                //we would like to disable the recorder here\n                var apicall = 'poodllapi.mp3_disable()';\n                lz.embed[ip.config.widgetid].callMethod(apicall);\n\n                //we no longer need the data in the audiodata control and it will get submitted\n                //with the form which we don't want. So we clear it here. Justin 2017-03/03\n                ip.audiodatacontrol.val('');\n\n\n                //just in case\n                return false;\n            });//end of save button click\n\n        }\n    }//end of returned object\n});//total end"],"file":"poodll_flashrecorder.min.js"}