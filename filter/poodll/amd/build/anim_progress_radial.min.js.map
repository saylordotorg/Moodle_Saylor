{"version":3,"sources":["../src/anim_progress_radial.js"],"names":["define","$","log","debug","playcanvas","context","x","y","currenttime","enabled","showpercent","drawparams","lineWidth","barColor","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","font","textAlign","textBaseline","clone","extend","init","barcolor","get","width","height","getContext","setDrawParam","paramkey","paramvalue","clear","clearRect","fetchCurrent","stop","start","that","strokeStyle","setLineDash","draw","radius","Math","min","circ","PI","quart","current","beginPath","arc","fillText","parseInt","stroke","requestAnimationFrame","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log'], function ($, log) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Radial Progress: initialising');\n\n    return {\n\n        playcanvas: null,\n        context: null,\n        x: null,\n        y: null,\n        currenttime: 0,\n        enabled: false,\n        showpercent: false,\n        drawparams: {\n            lineWidth: 10,\n            barColor: '#ad2323',\n            shadowOffsetX: 0,\n            shadowOffsetY: 0,\n            shadowBlur: 10,\n            shadowColor: '#fff',\n            font: '18px Arial',\n            textAlign: \"center\",\n            textBaseline: 'middle'\n        },\n\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        //pass in config, the jquery video/audio object, and a function to be called when conversion has finshed\n        init: function (playcanvas, barcolor, showpercent) {\n            //stash the key actors for calling from draw\n            this.playcanvas = playcanvas.get(0);\n            this.x = this.playcanvas.width / 2;\n            this.y = this.playcanvas.height / 2;\n            this.context = this.playcanvas.getContext('2d');\n            if (showpercent) {\n                this.showpercent = showpercent;\n            }\n            if (showpercent) {\n                this.setDrawParam('barColor', barcolor);\n            }\n        },\n\n        setDrawParam: function (paramkey, paramvalue) {\n            this.drawparams[paramkey] = paramvalue;\n        },\n\n        clear: function () {\n            this.context.clearRect(0, 0, this.playcanvas.width, this.playcanvas.height);\n        },\n        fetchCurrent: function () {\n            return 0;\n        },\n\n        stop: function () {\n            this.enabled = false;\n            //this.clear();\n        },\n\n        start: function () {\n            this.clear();\n            this.enabled = true;\n            var that = this;\n\n            //set draw params, l\n            this.context.lineWidth = this.drawparams.lineWidth;\n            this.context.strokeStyle = this.drawparams.barColor;\n            this.context.setLineDash([]);\n            this.context.shadowOffsetX = this.drawparams.shadowOffsetX;\n            this.context.shadowOffsetY = this.drawparams.shadowOffsetY;\n            this.context.shadowBlur = this.drawparams.shadowBlur;\n            this.context.shadowColor = this.drawparams.shadowColor;\n            this.context.font = this.drawparams.font;\n            this.context.textAlign = this.drawparams.textAlign;\n            this.context.textBaseline = this.drawparams.textBaseline;\n\n\n            var draw = function () {\n                if (!that.enabled) {\n                    return;\n                }\n                that.clear();\n                var radius = Math.min(that.x, that.y) - that.context.lineWidth;//65;\n                var counterClockwise = false;\n                var circ = Math.PI * 2;\n                var quart = Math.PI / 2;\n                var current = that.fetchCurrent();\n                that.context.beginPath();\n                that.context.arc(that.x, that.y, radius, -(quart), ((circ) * current) - quart, counterClockwise);\n\n                //draw progress if we are doing that\n                if (that.showpercent) {\n                    that.context.fillText(parseInt(current * 100) + '%', that.x, that.y);\n                }\n\n                that.context.stroke();\n\n                var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n                    window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n                requestAnimationFrame(draw);\n\n            }//end of draw\n            draw();\n        }//end of enable\n    };//end of returned object\n});//total end\n"],"file":"anim_progress_radial.min.js"}