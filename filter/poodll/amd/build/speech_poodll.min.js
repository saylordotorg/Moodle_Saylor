define ("filter_poodll/speech_poodll",["jquery","core/log","filter_poodll/speech_browser","filter_poodll/speech_awstranscriber"],function(a,b,c,d){"use strict";b.debug("speech_poodll: initialising");return{recognizer:null,clone:function clone(){return a.extend(!0,{},this)},will_work_ok:function will_work_ok(a){if("streamingtranscriber"in a){switch(a.streamingtranscriber){case"aws":return d.will_work_ok(a);case"browser":return c.will_work_ok(a);}}return c.will_work_ok(a)||d.will_work_ok(a)},init:function init(a){if("streamingtranscriber"in a){switch(a.streamingtranscriber){case"aws":this.recognizer=d.clone();this.recognizer.init(a);break;case"browser":this.recognizer=c.clone();this.recognizer.init(a);break;}}if(!this.recognizer){if(c.will_work_ok(a)){this.recognizer=c.clone();this.recognizer.init(a)}else if(d.will_work_ok(a)){this.recognizer=d.clone();this.recognizer.init(a)}else{b.debug("no usable speech recognizer found");return!1}}},set_grammar:function set_grammar(a){this.recognizer.set_grammar(a)},start:function start(a){if(!this.recognizer){return}this.recognizer.onfinalspeechcapture=this.onfinalspeechcapture;this.recognizer.oninterimspeechcapture=this.oninterimspeechcapture;if(this.recognizer){this.recognizer.start(a)}},stop:function stop(){if(!this.recognizer){return}if(this.recognizer){this.recognizer.stop()}},onfinalspeechcapture:function onfinalspeechcapture(a){if(!this.recognizer){return}b.debug("final:"+a)},oninterimspeechcapture:function oninterimspeechcapture(a){if(!this.recognizer){return}b.debug("interim:"+a)}}});
//# sourceMappingURL=speech_poodll.min.js.map
