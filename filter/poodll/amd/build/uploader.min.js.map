{"version":3,"sources":["../src/uploader.js"],"names":["define","$","log","upskin_plain","debug","config","clone","extend","init","element","upskin","initControls","registerEvents","that","hermes","on","fetchNewUploadDetails","xhr","XMLHttpRequest","onreadystatechange","readyState","status","payload","responseText","payloadobject","JSON","parse","returnCode","messageObject","id","type","code","message","returnMessage","postMessage","allowedURL","posturl","postURL","filename","s3filename","s3root","cloudfilename","shortfilename","cloudroot","shortroot","xhrparams","wstoken","moodlewsrestformat","mediatype","parent","appid","owner","region","expiredays","transcode","transcoder","transcribe","subtitle","language","transcribevocab","notificationurl","sourcemimetype","serverurl","M","cfg","wwwroot","open","setRequestHeader","send","uploadBlob","blob","filetype","uploadFile","extractFilename","returntext","start","indexOf","end","substring","length","fetchFileExtension","ext","split","pokeFilename","uploader","upc","updatecontrol","window","document","get","value","showMessage","util","get_string","trigger","alertRecorderSuccess","widgetid","hasOwnProperty","onuploadsuccess","alertRecorderFailure","onuploadfailure","completeAfterProcessing","waitms","iframeembed","mediaurl","mediafilename","sourcefilename","transcripturl","transcriptfilename","ajax","url","method","cache","error","setTimeout","success","data","textStatus","doUploadCompleteCallback","callbackObject","callbackjs","executeFunctionByName","postProcessUpload","e","currentTarget","deactivateProgressSession","off","preventPrematureLeaving","filedata","sourceext","using_s3","initProgressSession","update_filenames","postprocess_s3_upload","Blob","params","encodeURIComponent","p2","p3","p4","p5","reader","FileReader","readAsDataURL","onloadend","base64filedata","result","uploadMultiPartFile","replace","formData","FormData","append","navigator","sendBeacon","thedata","fetch","body","credentials","functionName","context","args","namespaces","func","pop","i","call","dataURItoBlob","dataURI","mimetype","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Output","msg"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log', 'filter_poodll/upskin_plain'], function ($, log, upskin_plain) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Universal Uploader: initialising');\n\n    return {\n\n        config: null,\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        init: function (element, config, upskin) {\n            this.config = config;\n            if (upskin) {\n                this.upskin = upskin;\n            } else {\n                this.upskin = upskin_plain.clone();\n                this.upskin.init(config, element, false, false);\n            }\n            this.upskin.initControls();\n            this.registerEvents();\n        },\n\n        registerEvents: function () {\n            var that = this;\n            //whteboard does not have a hermes\n           if(this.config.hermes) {\n                this.config.hermes.on('fetch_upload_url', function (e) {\n                    that.fetchNewUploadDetails();\n                });\n           }\n        },\n\n        fetchNewUploadDetails: function () {\n\n            //The REST API we are calling\n            var functionname = 'local_cpapi_fetch_upload_details';\n\n            //fetch the Posturl. We need this.\n            //set up our ajax request\n            var xhr = new XMLHttpRequest();\n            var that = this;\n\n            //set up our handler for the response\n            xhr.onreadystatechange = function (e) {\n                if (this.readyState === 4) {\n                    if (xhr.status == 200) {\n\n                        //get a yes or forgetit or tryagain\n                        var payload = xhr.responseText;\n                        var payloadobject = JSON.parse(payload);\n                        if (payloadobject) {\n\n                            //returnCode > 0  indicates an error\n                            if (payloadobject.returnCode > 0) {\n                                //We alert the iframe host that something did not go right\n                                var messageObject = {};\n                                messageObject.id = that.config.id;\n                                messageObject.type = \"error\";\n                                messageObject.code = payloadobject.returnCode;\n                                messageObject.message = payloadobject.returnMessage;\n                                that.config.hermes.postMessage(messageObject);\n                                return;\n                                //if all good, then lets do the embed\n                            } else {\n                                that.config.allowedURL = payloadobject.allowedURL;\n                                that.config.posturl = payloadobject.postURL;\n                                that.config.filename = payloadobject.filename;\n                                that.config.s3filename = payloadobject.s3filename;\n                                that.config.s3root = payloadobject.s3root;\n                                that.config.cloudfilename = payloadobject.shortfilename;\n                                that.config.cloudroot = payloadobject.shortroot;\n                            }\n\n                        } else {\n                            log.debug('error:' + payloadobject.message);\n\n                        }\n                    } else {\n                        log.debug('Not 200 response:' + xhr.status);\n                    }\n                }\n            };\n\n            //log.debug(params);\n            var xhrparams = \"wstoken=\" + this.config.wstoken\n                + \"&wsfunction=\" + functionname\n                + \"&moodlewsrestformat=\" + this.config.moodlewsrestformat\n                + \"&mediatype=\" + this.config.mediatype\n                + '&parent=' + this.config.parent\n                + '&appid=' + this.config.appid\n                + '&owner=' + this.config.owner\n                + '&region=' + this.config.region\n                + '&expiredays=' + this.config.expiredays\n                + '&transcode=' + this.config.transcode\n                + '&transcoder=' + this.config.transcoder\n                + '&transcribe=' + this.config.transcribe\n                + '&subtitle=' + this.config.subtitle\n                + '&transcribelanguage=' + this.config.language\n                + '&transcribevocab=' + this.config.transcribevocab\n                + '&notificationurl=' + this.config.notificationurl\n                + '&sourcemimetype=' + this.config.sourcemimetype;\n\n            var serverurl = M.cfg.wwwroot + \"/webservice/rest/server.php\";\n            xhr.open(\"POST\", serverurl, true);\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            xhr.send(xhrparams);\n        },\n\n        uploadBlob: function (blob, filetype) {\n            this.uploadFile(blob, filetype);\n            return;\n        },\n        //extract filename from the text returned as response to upload\n        extractFilename: function (returntext) {\n            var searchkey = \"success<filename>\";\n            var start = returntext.indexOf(searchkey);\n            if (start < 1) {\n                return false;\n            }\n            var end = returntext.indexOf(\"</filename>\");\n            var filename = returntext.substring(start + (searchkey.length), end);\n            return filename;\n        },\n\n        //fetch file extension from the filetype\n        fetchFileExtension: function (filetype) {\n            var ext = \"mp3\";\n            //in the case of a string like this:\n            // \"audio/webm;codecs=opus\" we do not the codecs\n            if(filetype.indexOf(';')>0){\n                filetype = filetype.split(';')[0];\n            }\n            switch (filetype) {\n                case \"image/jpeg\":\n                    ext = \"jpg\";\n                    break;\n                case \"image/png\":\n                    ext = \"png\";\n                    break;\n                case \"audio/wav\":\n                    ext = \"wav\";\n                    break;\n                case \"audio/ogg\":\n                    ext = \"ogg\";\n                    break;\n                case \"audio/mpeg3\":\n                    ext = \"mp3\";\n                    break;\n                case \"audio/mp3\":\n                    ext = \"mp3\";\n                    break;\n                case \"audio/webm\":\n                    ext = \"webm\";\n                    break;\n                case \"audio/wma\":\n                    ext = \"wma\";\n                    break;\n                case \"audio/x-mpeg-3\":\n                    ext = \"mp3\";\n                    break;\n                case \"audio/mp4\":\n                case \"audio/m4a\":\n                case \"audio/x-m4a\":\n                    ext = \"m4a\";\n                    break;\n                case \"audio/3gpp\":\n                    ext = \"3gpp\";\n                    break;\n                case \"video/mpeg3\":\n                    ext = \"3gpp\";\n                    break;\n                case \"video/m4v\":\n                    ext = \"m4v\";\n                    break;\n                case \"video/mp4\":\n                    ext = \"mp4\";\n                    break;\n                case \"video/mov\":\n                case \"video/quicktime\":\n                    ext = \"mov\";\n                    break;\n                case \"video/webm\":\n                    ext = \"webm\";\n                    break;\n                case \"video/wmv\":\n                    ext = \"wmv\";\n                    break;\n                case \"video/ogg\":\n                    ext = \"ogg\";\n                    break;\n            }\n            return ext;\n        },\n\n        pokeFilename: function (filename, uploader) {\n\n            var upc = '';\n            if (typeof uploader.config.updatecontrol !== 'undefined' && uploader.config.updatecontrol !== '') {\n                upc = $('[id=\"' + uploader.config.updatecontrol + '\"]');\n                //the code below used to work until odd chars in question id annoyed jquery 3\n                //upc = $('#' + uploader.config.updatecontrol);\n            }\n            if (upc.length < 1) {\n                upc = $('[id=\"' + uploader.config.updatecontrol + '\"]', window.parent.document);\n            }\n            if (upc.length > 0) {\n                upc.get(0).value = filename;\n            } else {\n                log.debug('upload failed #2');\n                uploader.upskin.showMessage(M.util.get_string('recui_uploaderror', 'filter_poodll'), 'recui_uploaderror');\n                return false;\n            }\n            upc.trigger('change');\n            return true;\n        },\n\n        alertRecorderSuccess: function (widgetid) {\n            if (this.config.hasOwnProperty('onuploadsuccess')) {\n                this.config.onuploadsuccess(widgetid);\n            }\n        },\n\n        alertRecorderFailure: function (widgetid) {\n            if (this.config.hasOwnProperty('onuploadfailure')) {\n                this.config.onuploadfailure(widgetid);\n            }\n        },\n\n        //We can detect conversion by pinging the s3 out filename\n        //this is only done in the iFrame\n        completeAfterProcessing: function (uploader, filename, waitms) {\n\n            //alert the skin that we are awaiting processing\n            this.upskin.showMessage(M.util.get_string('recui_awaitingconversion', 'filter_poodll'), 'recui_awaitingconversion');\n\n            //this will always be true ...\n            if (uploader.config.iframeembed) {\n                filename = uploader.config.s3root + uploader.config.s3filename;\n            }\n\n            //We alert the iframe host that a file is now awaiting conversion\n            var messageObject = {};\n            messageObject.type = \"awaitingprocessing\";\n            messageObject.mediaurl = filename;\n            messageObject.mediafilename = uploader.config.s3filename;\n            messageObject.sourcefilename = uploader.config.sourcefilename;\n            messageObject.sourcemimetype = uploader.config.sourcemimetype;\n            messageObject.s3root = uploader.config.s3root;\n            messageObject.id = uploader.config.id;\n            messageObject.updatecontrol = uploader.config.updatecontrol;\n            if (uploader.config.transcribe) {\n                messageObject.transcripturl = filename + '.txt';\n                messageObject.transcriptfilename = uploader.config.s3filename + '.txt';\n            }\n            uploader.config.hermes.postMessage(messageObject);\n\n            //we commence a series of ping and retries until the recorded file is available\n            var that = this;\n            $.ajax({\n                url: uploader.config.s3root + uploader.config.s3filename,\n                method: 'HEAD',\n                cache: false,\n                error: function () {\n                    //We get here if its a 404 or 403. So settimout here and wait for file to arrive\n                    //we increment the timeout period each time to prevent bottlenecks\n                    log.debug('403 errors are normal here, till the file arrives back from conversion');\n                    setTimeout(function () {\n                        that.completeAfterProcessing(uploader, filename, waitms + 500);\n                    }, waitms);\n                },\n                success: function (data, textStatus, xhr) {\n                    switch (xhr.status) {\n                        case 200:\n                            that.doUploadCompleteCallback(uploader, filename);\n                            break;\n                        default:\n                            setTimeout(function () {\n                                that.completeAfterProcessing(uploader, filename, waitms + 500);\n                            }, waitms);\n                    }\n\n                }\n            });\n        },\n\n        doUploadCompleteCallback: function (uploader, filename) {\n\n            //in the case of an iframeembed we need a full URL not just a filename\n            if (uploader.config.iframeembed) {\n                filename = uploader.config.s3root + uploader.config.s3filename;\n            }\n\n            //For callbackjs and for postmessage we need an array of stuff\n            var callbackObject = new Array();\n            callbackObject[0] = uploader.config.widgetid;\n            callbackObject[1] = \"filesubmitted\";\n            callbackObject[2] = filename;\n            callbackObject[3] = uploader.config.updatecontrol;\n            callbackObject[4] = uploader.config.s3filename;\n\n            //alert the skin that we were successful\n            this.upskin.showMessage(M.util.get_string('recui_uploadsuccess', 'filter_poodll'), 'recui_uploadsuccess');\n\n            //invoke callbackjs if we have one, otherwise just update the control(default behav.)\n            if (!uploader.config.iframeembed) {\n                if (uploader.config.callbackjs && uploader.config.callbackjs != '') {\n                    if (typeof(uploader.config.callbackjs) === 'function') {\n                        uploader.config.callbackjs(callbackObject);\n                    } else {\n                        //this was the old rubbish way, where the callback was a function name\n                        this.executeFunctionByName(uploader.config.callbackjs, window, callbackObject);\n                    }\n                } else {\n                    //by default we just poke the filename\n                    uploader.pokeFilename(filename, uploader);\n                }\n            } else {\n                //in the case of an iframeembed we will also post a message to the host, they can choose to handle it or not\n                //The callback object above scan prob. be phased out. But not all integrations will use iframes either.\n                var messageObject = {};\n                messageObject.type = \"filesubmitted\";\n                messageObject.mediaurl = uploader.config.s3root + uploader.config.s3filename;\n                messageObject.mediafilename = uploader.config.s3filename;\n                messageObject.sourcefilename = uploader.config.sourcefilename;\n                messageObject.sourcemimetype = uploader.config.sourcemimetype;\n                messageObject.s3root = uploader.config.s3root;\n                messageObject.id = uploader.config.id;\n                messageObject.updatecontrol = uploader.config.updatecontrol;\n                if (uploader.config.transcribe) {\n                    messageObject.transcripturl = uploader.config.s3root + uploader.config.s3filename + '.txt';\n                    messageObject.transcriptfilename = uploader.config.s3filename + '.txt';\n                }\n\n                uploader.config.hermes.postMessage(messageObject);\n            }\n        },\n\n        //after an upload handle the filename poke and callback call\n        postProcessUpload: function (e, uploader) {\n            var xhr = e.currentTarget;\n            if (xhr.readyState == 4) {\n\n                uploader.upskin.deactivateProgressSession();\n\n                //deactivate premature leaving\n                $(window).off('beforeunload', this.preventPrematureLeaving);\n\n                if (xhr.status == 200) {\n                    var filename = uploader.config.filename;\n                    if (!filename) {\n                        filename = uploader.extractFilename(xhr.responseText);\n                    }\n                    if (!filename) {\n                        log.debug('upload failed #1');\n                        log.debug(xhr);\n                        return;\n                    }\n\n                    //Alert any listeners about the upload complete\n                    //in an iframeembed we only  do this after conversion is complete. so we run a poll to check compl.\n                    //in standard Moodle we have a placeholder file to deal with any slow conversions. so we don't poll\n                    if (uploader.config.iframeembed) {\n                        this.completeAfterProcessing(uploader, filename, 1000);\n                    } else {\n                        this.doUploadCompleteCallback(uploader, filename);\n                    }\n\n                    //alert the recorder that this was successful\n                    this.alertRecorderSuccess(uploader.config.widgetid);\n\n                } else {\n                    log.debug('upload failed #3');\n                    log.debug(xhr);\n                    uploader.upskin.showMessage(M.util.get_string('recui_uploaderror', 'filter_poodll'), 'recui_uploaderror');\n\n                    //alert the recorder that this failed\n                    this.alertRecorderFailure(uploader.config.widgetid);\n\n                } //end of if status 200\n            }//end of if ready state 4\n\n        },\n\n        preventPrematureLeaving: function(){\n            return M.util.get_string('recui_waitwaitstilluploading', 'filter_poodll');\n        },\n\n        // upload Media file to wherever\n        uploadFile: function (filedata, sourcemimetype) {\n\n            var xhr = new XMLHttpRequest();\n            var config = this.config;\n            var uploader = this;\n\n            //get the file extension from the filetype\n            var sourceext = this.fetchFileExtension(sourcemimetype);\n\n            //is this an iframe embed\n            if (typeof config.iframeembed == 'undefined') {\n                config.iframeembed = false;\n            }\n\n            //are we using s3\n            var using_s3 = config.using_s3;\n\n            //Handle UI display of this upload\n            this.upskin.initProgressSession(xhr);\n\n            //Add a page unload check ..\n            $(window).on('beforeunload', this.preventPrematureLeaving);\n\n            //alert user that we are now uploading\n            this.upskin.showMessage(M.util.get_string('recui_uploading', 'filter_poodll'), 'recui_uploading');\n\n            //init sourcemimetype and sourcefilename\n            uploader.config.sourcemimetype = sourcemimetype;\n            uploader.config.sourcefilename = uploader.config.s3filename;\n\n            xhr.onreadystatechange = function (e) {\n                if (using_s3 && this.readyState === 4) {\n                    if (config.iframeembed) {\n                        uploader.update_filenames(uploader, sourceext);\n                    } else {\n                        //ping Moodle and inform that we have a new file\n                        uploader.postprocess_s3_upload(uploader);\n                    }\n                }\n                uploader.postProcessUpload(e, uploader);\n\n            };\n\n            if (using_s3) {\n                xhr.open(\"put\", config.posturl, true);\n                xhr.setRequestHeader(\"Content-Type\", 'application/octet-stream');\n                xhr.send(filedata);\n            } else {\n\n                //We NEED to redo this bit of code ..\n                //its duplicating!!!\n                if (!(filedata instanceof Blob)) {\n                    log.debug('filedata is not blob');\n                    var params = \"datatype=uploadfile\";\n                    //We must URI encode the filedata, because otherwise the \"+\" characters get turned into spaces\n                    //spent hours tracking that down ...justin 20121012\n                    params += \"&paramone=\" + encodeURIComponent(filedata);\n                    params += \"&paramtwo=\" + sourceext;\n                    params += \"&paramthree=\" + config.mediatype;\n                    params += \"&requestid=\" + config.widgetid;\n                    params += \"&contextid=\" + config.p2;\n                    params += \"&component=\" + config.p3;\n                    params += \"&filearea=\" + config.p4;\n                    params += \"&itemid=\" + config.p5;\n\n                    xhr.open(\"POST\", config.posturl, true);\n                    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                    //xhr.setRequestHeader(\"Content-length\", params.length);\n                    //xhr.setRequestHeader(\"Connection\", \"close\");\n                    xhr.send(params);\n                } else {\n                    log.debug('filedata is blob');\n                    //we have to base64 string the blob  before sending it\n                    var reader = new window.FileReader();\n                    reader.readAsDataURL(filedata);\n                    reader.onloadend = function () {\n                        var base64filedata = reader.result;\n                        //log.debug(params);\n                        var params = \"datatype=uploadfile\";\n                        //We must URI encode the filedata, because otherwise the \"+\" characters get turned into spaces\n                        //spent hours tracking that down ...justin 20121012\n                        params += \"&paramone=\" + encodeURIComponent(base64filedata);\n                        params += \"&paramtwo=\" + sourceext;\n                        params += \"&paramthree=\" + config.mediatype;\n                        params += \"&requestid=\" + config.widgetid;\n                        params += \"&contextid=\" + config.p2;\n                        params += \"&component=\" + config.p3;\n                        params += \"&filearea=\" + config.p4;\n                        params += \"&itemid=\" + config.p5;\n\n                        xhr.open(\"POST\", config.posturl, true);\n                        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                        xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                        // xhr.setRequestHeader(\"Content-length\", params.length);\n                        // xhr.setRequestHeader(\"Connection\", \"close\");\n                        xhr.send(params);\n                    };//end of fileread on load end\n                }//end of if blob\n            }//end of if using_s3\n        },\n\n        // upload Media file to wherever\n        uploadMultiPartFile: function (filedata, sourcemimetype) {\n\n            var xhr = new XMLHttpRequest();\n            var config = this.config;\n            var uploader = this;\n\n            //get the file extension from the filetype\n            var sourceext = this.fetchFileExtension(sourcemimetype);\n\n            //is this an iframe embed\n            if (typeof config.iframeembed == 'undefined') {\n                config.iframeembed = false;\n            }\n\n            //are we using s3\n            var using_s3 = config.using_s3;\n\n            //Handle UI display of this upload\n            this.upskin.initProgressSession(xhr);\n\n            //Add a page unload check ..\n            $(window).on('beforeunload', this.preventPrematureLeaving);\n\n            //alert user that we are now uploading\n            this.upskin.showMessage(M.util.get_string('recui_uploading', 'filter_poodll'), 'recui_uploading');\n\n            //init sourcemimetype and sourcefilename\n            uploader.config.sourcemimetype = sourcemimetype;\n            uploader.config.sourcefilename = uploader.config.s3filename;\n\n            xhr.onreadystatechange = function (e) {\n                if (using_s3 && this.readyState === 4) {\n                    if (config.iframeembed) {\n                        uploader.update_filenames(uploader, sourceext);\n                    } else {\n                        //ping Moodle and inform that we have a new file\n                        uploader.postprocess_s3_upload(uploader);\n                    }\n                }\n                uploader.postProcessUpload(e, uploader);\n\n            };\n\n            if (using_s3) {\n                xhr.open(\"put\", config.posturl, true);\n                xhr.setRequestHeader(\"Content-Type\", 'application/octet-stream');\n                xhr.send(filedata);\n            }//end of if using_s3\n        },\n\n        update_filenames: function (uploader, sourceext) {\n            var config = uploader.config;\n\n            //now its a bit hacky, but\n            // only now do we know the true final file extension (ext) and mimetype of unconv. media\n            // so we want to save that and if the user is NOT transcoding,\n            //we want to change the s3filename from the default mp4/mp3 to whatever the mimetype inidicates, ie sourceext\n\n            switch (config.mediatype) {\n                case 'audio':\n                    //source info\n                    uploader.config.sourcefilename = config.s3filename.replace('.mp3', '.' + sourceext);\n                    if (!config.transcode) {\n                        uploader.config.s3filename = uploader.config.sourcefilename;\n                        //do we need this, I think its old and noone uses it.\n                        uploader.config.cloudfilename = uploader.config.s3filename;\n                    }\n                    break;\n                case 'video':\n                    uploader.config.sourcefilename = config.s3filename.replace('.mp4', '.' + sourceext);\n                    if (!config.transcode) {\n                        uploader.config.s3filename = uploader.config.sourcefilename;\n                    }\n                    break;\n            }\n        },\n\n        postprocess_s3_upload: function (uploader) {\n            var config = uploader.config;\n            const formData = new FormData();\n            formData.append(\"datatype\", \"handles3upload\");\n            formData.append(\"contextid\", config.p2);\n            formData.append(\"component\", config.p3);\n            formData.append(\"filearea\", config.p4);\n            formData.append(\"itemid\", config.p5);\n            formData.append(\"filename\", config.filename);\n            formData.append(\"mediatype\", config.mediatype);\n            //navigator beacon polyfill\n            if (!navigator.sendBeacon) {\n                navigator.sendBeacon = function (url, thedata) {\n                    window.fetch(url, {method: 'POST', body: thedata, credentials: 'include'});\n                };\n            }\n            //we use navigator beacon over xhr because there are times believe it or not, when a page load happens and that kills\n            //the request. causing lost files\n            navigator.sendBeacon(M.cfg.wwwroot + '/filter/poodll/poodllfilelib.php', formData);\n\n        },\n\n        //function to call the callback function with arguments\n        executeFunctionByName: function (functionName, context, args) {\n\n            //var args = Array.prototype.slice.call(arguments).splice(2);\n            var namespaces = functionName.split(\".\");\n            var func = namespaces.pop();\n            for (var i = 0; i < namespaces.length; i++) {\n                context = context[namespaces[i]];\n            }\n            return context[func].call(this, args);\n        },\n\n        dataURItoBlob: function (dataURI, mimetype) {\n            var byteString = atob(dataURI.split(',')[1]);\n            var ab = new ArrayBuffer(byteString.length);\n            var ia = new Uint8Array(ab);\n            for (var i = 0; i < byteString.length; i++) {\n                ia[i] = byteString.charCodeAt(i);\n            }\n            return new Blob([ab], {type: mimetype});\n        },//end of dataURItoBlob\n\n        //some recorder skins call this directly, so we just pass it through to the upskin\n        Output: function (msg) {\n            this.upskin.showMessage(msg, 'recorderskinmsg');\n        }\n    };//end of returned object\n});//total end\n"],"file":"uploader.min.js"}