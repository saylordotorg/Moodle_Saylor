{"version":3,"sources":["../src/soundtouch.js"],"names":["root","factory","define","amd","CloudPoodll","_SCAN_OFFSETS","AUTOSEQ_TEMPO_LOW","AUTOSEQ_TEMPO_TOP","AUTOSEQ_AT_MIN","AUTOSEQ_AT_MAX","AUTOSEQ_K","AUTOSEEK_AT_MIN","AUTOSEEK_AT_MAX","AUTOSEEK_K","extend","a","b","i","g","__lookupGetter__","s","__lookupSetter__","__defineGetter__","__defineSetter__","testFloatEqual","AbstractFifoSamplePipe","createBuffers","inputBuffer","FifoSampleBuffer","outputBuffer","prototype","_inputBuffer","_outputBuffer","clear","RateTransposer","call","_reset","rate","_rate","slopeCount","prevSampleL","prevSampleR","process","numFrames","frameCount","ensureAdditionalCapacity","numFramesOutput","_transpose","receive","put","src","vector","srcOffset","startIndex","dest","destOffset","endIndex","used","out","srcIndex","_vector","Float32Array","_position","_frameCount","position","rewind","putSamples","samples","sourceOffset","length","numSamples","ensureCapacity","set","subarray","putBuffer","buffer","receiveSamples","output","extract","minLength","newVector","SimpleFilter","sourceSound","pipe","_pipe","historyBufferSize","_sourcePosition","outputBufferPosition","RangeError","newOutputBufferPosition","sourcePosition","fillInputBuffer","numFramesExtracted","fillOutputBuffer","numInputFrames","target","Math","min","currentFrames","max","handleSampleData","e","data","Stretch","sampleRate","bQuickSeek","bMidBufferDirty","pMidBuffer","overlapLength","bAutoSeqSetting","bAutoSeekSetting","_tempo","setParameters","_clearMidBuffer","aSampleRate","aSequenceMS","aSeekWindowMS","aOverlapMS","overlapMs","sequenceMs","seekWindowMs","calcSeqParameters","calculateOverlapLength","tempo","newTempo","intskip","nominalSkip","seekWindowLength","skipFract","floor","sampleReq","seekLength","inputChunkSize","outputChunkSize","overlapInMsec","newOvl","pRefMidBuffer","checkLimits","x","mi","ma","seq","seek","quickSeek","enable","seekBestOverlapPosition","seekBestOverlapPositionStereoQuick","seekBestOverlapPositionStereo","bestOffs","bestCorr","corr","precalcCorrReferenceStereo","Number","MIN_VALUE","calcCrossCorrStereo","j","scanCount","corrOffset","tempOffset","cnt2","temp","mixingPos","compare","mixing","mixingOffset","overlap","ovlPos","overlapStereo","pInputPos","pInput","pOutput","pOutputPos","fTemp","fScale","fi","pInputOffset","pOutputOffset","ovlSkip","offset","start","SoundTouch","rateTransposer","tdStretch","_intermediateBuffer","virtualPitch","virtualRate","virtualTempo","_calculateEffectiveRateAndTempo","rateChange","tempoChange","pitch","pitchOctaves","exp","pitchSemitones","previousTempo","previousRate","WebAudioBufferSource","l","getChannelData","r","soundtouch","getWebAudioNode","context","filter","node","createScriptProcessor","onaudioprocess","framesExtracted","disconnect"],"mappings":"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","sourcesContent":["/*\n * SoundTouch JS audio processing library\n * Copyright (c) Olli Parviainen\n * Copyright (c) Ryan Berdeen\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n */\n\n/**\n * root is our root object context, ie. window if we are in a browser\n * factory is a method that builds and returns our module\n */\n(function(root, factory) {\n    // If AMD is available, use the define() method to load our dependencies\n    //and declare our module\n    if (typeof define === 'function' && define.amd) {\n        define([], function() {\n            return factory(root);\n        });\n    }\n    // Otherwise we will attach our module to root, and pass references to our\n    // dependencies into the factory. We're assuming that our dependencies are\n    // also attached to root here, but they could come from anywhere\n    else\n    {\n        root.CloudPoodll = factory(root);\n    }\n})(this, function() {\n    /**\n     * Giving this value for the sequence length sets automatic parameter value\n     * according to tempo setting (recommended)\n     */\n    var USE_AUTO_SEQUENCE_LEN = 0;\n\n    /**\n     * Default length of a single processing sequence, in milliseconds. This determines to how\n     * long sequences the original sound is chopped in the time-stretch algorithm.\n     *\n     * The larger this value is, the lesser sequences are used in processing. In principle\n     * a bigger value sounds better when slowing down tempo, but worse when increasing tempo\n     * and vice versa.\n     *\n     * Increasing this value reduces computational burden and vice versa.\n     */\n        //var DEFAULT_SEQUENCE_MS = 130\n    var DEFAULT_SEQUENCE_MS = USE_AUTO_SEQUENCE_LEN;\n\n    /**\n     * Giving this value for the seek window length sets automatic parameter value\n     * according to tempo setting (recommended)\n     */\n    var USE_AUTO_SEEKWINDOW_LEN = 0;\n\n    /**\n     * Seeking window default length in milliseconds for algorithm that finds the best possible\n     * overlapping location. This determines from how wide window the algorithm may look for an\n     * optimal joining location when mixing the sound sequences back together.\n     *\n     * The bigger this window setting is, the higher the possibility to find a better mixing\n     * position will become, but at the same time large values may cause a \"drifting\" artifact\n     * because consequent sequences will be taken at more uneven intervals.\n     *\n     * If there's a disturbing artifact that sounds as if a constant frequency was drifting\n     * around, try reducing this setting.\n     *\n     * Increasing this value increases computational burden and vice versa.\n     */\n        //var DEFAULT_SEEKWINDOW_MS = 25;\n    var DEFAULT_SEEKWINDOW_MS = USE_AUTO_SEEKWINDOW_LEN;\n\n    /**\n     * Overlap length in milliseconds. When the chopped sound sequences are mixed back together,\n     * to form a continuous sound stream, this parameter defines over how long period the two\n     * consecutive sequences are let to overlap each other.\n     *\n     * This shouldn't be that critical parameter. If you reduce the DEFAULT_SEQUENCE_MS setting\n     * by a large amount, you might wish to try a smaller value on this.\n     *\n     * Increasing this value increases computational burden and vice versa.\n     */\n    var DEFAULT_OVERLAP_MS = 8;\n\n    // Table for the hierarchical mixing position seeking algorithm\n    var _SCAN_OFFSETS = [\n        [\n            124,\n            186,\n            248,\n            310,\n            372,\n            434,\n            496,\n            558,\n            620,\n            682,\n            744,\n            806,\n            868,\n            930,\n            992,\n            1054,\n            1116,\n            1178,\n            1240,\n            1302,\n            1364,\n            1426,\n            1488,\n            0\n        ],\n        [\n            -100,\n            -75,\n            -50,\n            -25,\n            25,\n            50,\n            75,\n            100,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            -20,\n            -15,\n            -10,\n            -5,\n            5,\n            10,\n            15,\n            20,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            -4,\n            -3,\n            -2,\n            -1,\n            1,\n            2,\n            3,\n            4,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n\n    // Adjust tempo param according to tempo, so that variating processing sequence length is used\n    // at varius tempo settings, between the given low...top limits\n    var AUTOSEQ_TEMPO_LOW = 0.5; // auto setting low tempo range (-50%)\n    var AUTOSEQ_TEMPO_TOP = 2.0; // auto setting top tempo range (+100%)\n\n    // sequence-ms setting values at above low & top tempo\n    var AUTOSEQ_AT_MIN = 125.0;\n    var AUTOSEQ_AT_MAX = 50.0;\n    var AUTOSEQ_K =\n        (AUTOSEQ_AT_MAX - AUTOSEQ_AT_MIN) /\n        (AUTOSEQ_TEMPO_TOP - AUTOSEQ_TEMPO_LOW);\n    var AUTOSEQ_C = AUTOSEQ_AT_MIN - AUTOSEQ_K * AUTOSEQ_TEMPO_LOW;\n\n    // seek-window-ms setting values at above low & top tempo\n    var AUTOSEEK_AT_MIN = 25.0;\n    var AUTOSEEK_AT_MAX = 15.0;\n    var AUTOSEEK_K =\n        (AUTOSEEK_AT_MAX - AUTOSEEK_AT_MIN) /\n        (AUTOSEQ_TEMPO_TOP - AUTOSEQ_TEMPO_LOW);\n    var AUTOSEEK_C = AUTOSEEK_AT_MIN - AUTOSEEK_K * AUTOSEQ_TEMPO_LOW;\n\n    function extend(a, b) {\n        for (var i in b) {\n            var g = b.__lookupGetter__(i),\n                s = b.__lookupSetter__(i);\n            if (g || s) {\n                if (g) {\n                    a.__defineGetter__(i, g);\n                }\n                if (s) {\n                    a.__defineSetter__(i, s);\n                }\n            } else {\n                a[i] = b[i];\n            }\n        }\n        return a;\n    }\n\n    function testFloatEqual(a, b) {\n        return (a > b ? a - b : b - a) > 1e-10;\n    }\n\n    function AbstractFifoSamplePipe(createBuffers) {\n        if (createBuffers) {\n            this.inputBuffer = new FifoSampleBuffer();\n            this.outputBuffer = new FifoSampleBuffer();\n        } else {\n            this.inputBuffer = this.outputBuffer = null;\n        }\n    }\n    AbstractFifoSamplePipe.prototype = {\n        get inputBuffer() {\n            return this._inputBuffer;\n        },\n        set inputBuffer(inputBuffer) {\n            this._inputBuffer = inputBuffer;\n        },\n        get outputBuffer() {\n            return this._outputBuffer;\n        },\n        set outputBuffer(outputBuffer) {\n            this._outputBuffer = outputBuffer;\n        },\n        clear: function() {\n            this._inputBuffer.clear();\n            this._outputBuffer.clear();\n        }\n    };\n\n    function RateTransposer(createBuffers) {\n        AbstractFifoSamplePipe.call(this, createBuffers);\n        this._reset();\n        this.rate = 1;\n    }\n    extend(RateTransposer.prototype, AbstractFifoSamplePipe.prototype);\n    extend(RateTransposer.prototype, {\n        set rate(rate) {\n            this._rate = rate;\n            // TODO aa filter\n        },\n        _reset: function() {\n            this.slopeCount = 0;\n            this.prevSampleL = 0;\n            this.prevSampleR = 0;\n        },\n        process: function() {\n            // TODO aa filter\n            var numFrames = this._inputBuffer.frameCount;\n            this._outputBuffer.ensureAdditionalCapacity(\n                numFrames / this._rate + 1\n            );\n            var numFramesOutput = this._transpose(numFrames);\n            this._inputBuffer.receive();\n            this._outputBuffer.put(numFramesOutput);\n        },\n        _transpose: function(numFrames) {\n            if (numFrames === 0) {\n                return 0; // No work.\n            }\n\n            var src = this._inputBuffer.vector;\n            var srcOffset = this._inputBuffer.startIndex;\n\n            var dest = this._outputBuffer.vector;\n            var destOffset = this._outputBuffer.endIndex;\n\n            var used = 0;\n            var i = 0;\n\n            while (this.slopeCount < 1.0) {\n                dest[destOffset + 2 * i] =\n                    (1.0 - this.slopeCount) * this.prevSampleL +\n                    this.slopeCount * src[srcOffset];\n                dest[destOffset + 2 * i + 1] =\n                    (1.0 - this.slopeCount) * this.prevSampleR +\n                    this.slopeCount * src[srcOffset + 1];\n                i++;\n                this.slopeCount += this._rate;\n            }\n\n            this.slopeCount -= 1.0;\n\n            if (numFrames != 1) {\n                // eslint-disable-next-line no-constant-condition\n                out: while (true) {\n                    while (this.slopeCount > 1.0) {\n                        this.slopeCount -= 1.0;\n                        used++;\n                        if (used >= numFrames - 1) {\n                            break out;\n                        }\n                    }\n\n                    var srcIndex = srcOffset + 2 * used;\n                    dest[destOffset + 2 * i] =\n                        (1.0 - this.slopeCount) * src[srcIndex] +\n                        this.slopeCount * src[srcIndex + 2];\n                    dest[destOffset + 2 * i + 1] =\n                        (1.0 - this.slopeCount) * src[srcIndex + 1] +\n                        this.slopeCount * src[srcIndex + 3];\n\n                    i++;\n                    this.slopeCount += this._rate;\n                }\n            }\n\n            this.prevSampleL = src[srcOffset + 2 * numFrames - 2];\n            this.prevSampleR = src[srcOffset + 2 * numFrames - 1];\n\n            return i;\n        }\n    });\n\n    function FifoSampleBuffer() {\n        this._vector = new Float32Array();\n        this._position = 0;\n        this._frameCount = 0;\n    }\n    FifoSampleBuffer.prototype = {\n        get vector() {\n            return this._vector;\n        },\n        get position() {\n            return this._position;\n        },\n        get startIndex() {\n            return this._position * 2;\n        },\n        get frameCount() {\n            return this._frameCount;\n        },\n        get endIndex() {\n            return (this._position + this._frameCount) * 2;\n        },\n        clear: function(frameCount) {\n            this.receive(frameCount);\n            this.rewind();\n        },\n        put: function(numFrames) {\n            this._frameCount += numFrames;\n        },\n        putSamples: function(samples, position, numFrames) {\n            position = position || 0;\n            var sourceOffset = position * 2;\n            if (!(numFrames >= 0)) {\n                numFrames = (samples.length - sourceOffset) / 2;\n            }\n            var numSamples = numFrames * 2;\n\n            this.ensureCapacity(numFrames + this._frameCount);\n\n            var destOffset = this.endIndex;\n            this._vector.set(\n                samples.subarray(sourceOffset, sourceOffset + numSamples),\n                destOffset\n            );\n\n            this._frameCount += numFrames;\n        },\n        putBuffer: function(buffer, position, numFrames) {\n            position = position || 0;\n            if (!(numFrames >= 0)) {\n                numFrames = buffer.frameCount - position;\n            }\n            this.putSamples(\n                buffer.vector,\n                buffer.position + position,\n                numFrames\n            );\n        },\n        receive: function(numFrames) {\n            if (!(numFrames >= 0) || numFrames > this._frameCount) {\n                numFrames = this._frameCount;\n            }\n            this._frameCount -= numFrames;\n            this._position += numFrames;\n        },\n        receiveSamples: function(output, numFrames) {\n            var numSamples = numFrames * 2;\n            var sourceOffset = this.startIndex;\n            output.set(\n                this._vector.subarray(sourceOffset, sourceOffset + numSamples)\n            );\n            this.receive(numFrames);\n        },\n        extract: function(output, position, numFrames) {\n            var sourceOffset = this.startIndex + position * 2;\n            var numSamples = numFrames * 2;\n            output.set(\n                this._vector.subarray(sourceOffset, sourceOffset + numSamples)\n            );\n        },\n        ensureCapacity: function(numFrames) {\n            var minLength = numFrames * 2;\n            if (this._vector.length < minLength) {\n                var newVector = new Float32Array(minLength);\n                newVector.set(\n                    this._vector.subarray(this.startIndex, this.endIndex)\n                );\n                this._vector = newVector;\n                this._position = 0;\n            } else {\n                this.rewind();\n            }\n        },\n        ensureAdditionalCapacity: function(numFrames) {\n            this.ensureCapacity(this.frameCount + numFrames);\n        },\n        rewind: function() {\n            if (this._position > 0) {\n                this._vector.set(\n                    this._vector.subarray(this.startIndex, this.endIndex)\n                );\n                this._position = 0;\n            }\n        }\n    };\n\n    function SimpleFilter(sourceSound, pipe) {\n        this._pipe = pipe;\n        this.sourceSound = sourceSound;\n        this.historyBufferSize = 22050;\n        this._sourcePosition = 0;\n        this.outputBufferPosition = 0;\n        this._position = 0;\n    }\n    SimpleFilter.prototype = {\n        get pipe() {\n            return this._pipe;\n        },\n        get position() {\n            return this._position;\n        },\n        set position(position) {\n            if (position > this._position) {\n                throw new RangeError(\n                    'New position may not be greater than current position'\n                );\n            }\n            var newOutputBufferPosition =\n                this.outputBufferPosition - (this._position - position);\n            if (newOutputBufferPosition < 0) {\n                throw new RangeError(\n                    'New position falls outside of history buffer'\n                );\n            }\n            this.outputBufferPosition = newOutputBufferPosition;\n            this._position = position;\n        },\n        get sourcePosition() {\n            return this._sourcePosition;\n        },\n        set sourcePosition(sourcePosition) {\n            this.clear();\n            this._sourcePosition = sourcePosition;\n        },\n        get inputBuffer() {\n            return this._pipe.inputBuffer;\n        },\n        get outputBuffer() {\n            return this._pipe.outputBuffer;\n        },\n        fillInputBuffer: function(numFrames) {\n            var samples = new Float32Array(numFrames * 2);\n            var numFramesExtracted = this.sourceSound.extract(\n                samples,\n                numFrames,\n                this._sourcePosition\n            );\n            this._sourcePosition += numFramesExtracted;\n            this.inputBuffer.putSamples(samples, 0, numFramesExtracted);\n        },\n        fillOutputBuffer: function(numFrames) {\n            while (this.outputBuffer.frameCount < numFrames) {\n                // TODO hardcoded buffer size\n                var numInputFrames = 8192 * 2 - this.inputBuffer.frameCount;\n\n                this.fillInputBuffer(numInputFrames);\n\n                if (this.inputBuffer.frameCount < 8192 * 2) {\n                    break;\n                    // TODO flush pipe\n                }\n                this._pipe.process();\n            }\n        },\n        extract: function(target, numFrames) {\n            this.fillOutputBuffer(this.outputBufferPosition + numFrames);\n\n            var numFramesExtracted = Math.min(\n                numFrames,\n                this.outputBuffer.frameCount - this.outputBufferPosition\n            );\n            this.outputBuffer.extract(\n                target,\n                this.outputBufferPosition,\n                numFramesExtracted\n            );\n\n            var currentFrames = this.outputBufferPosition + numFramesExtracted;\n            this.outputBufferPosition = Math.min(\n                this.historyBufferSize,\n                currentFrames\n            );\n            this.outputBuffer.receive(\n                Math.max(currentFrames - this.historyBufferSize, 0)\n            );\n\n            this._position += numFramesExtracted;\n            return numFramesExtracted;\n        },\n        handleSampleData: function(e) {\n            this.extract(e.data, 4096);\n        },\n        clear: function() {\n            // TODO yuck\n            this._pipe.clear();\n            this.outputBufferPosition = 0;\n        }\n    };\n\n    function Stretch(createBuffers, sampleRate) {\n        AbstractFifoSamplePipe.call(this, createBuffers);\n        this.bQuickSeek = true;\n        this.bMidBufferDirty = false;\n\n        this.pMidBuffer = null;\n        this.overlapLength = 0;\n\n        this.bAutoSeqSetting = true;\n        this.bAutoSeekSetting = true;\n\n        this._tempo = 1;\n        this.setParameters(\n            sampleRate,\n            DEFAULT_SEQUENCE_MS,\n            DEFAULT_SEEKWINDOW_MS,\n            DEFAULT_OVERLAP_MS\n        );\n    }\n    extend(Stretch.prototype, AbstractFifoSamplePipe.prototype);\n    extend(Stretch.prototype, {\n        clear: function() {\n            AbstractFifoSamplePipe.prototype.clear.call(this);\n            this._clearMidBuffer();\n        },\n        _clearMidBuffer: function() {\n            if (this.bMidBufferDirty) {\n                this.bMidBufferDirty = false;\n                this.pMidBuffer = null;\n            }\n        },\n\n        /**\n         * Sets routine control parameters. These control are certain time constants\n         * defining how the sound is stretched to the desired duration.\n         *\n         * 'sampleRate' = sample rate of the sound\n         * 'sequenceMS' = one processing sequence length in milliseconds (default = 82 ms)\n         * 'seekwindowMS' = seeking window length for scanning the best overlapping\n         *      position (default = 28 ms)\n         * 'overlapMS' = overlapping length (default = 12 ms)\n         */\n        setParameters: function(\n            aSampleRate,\n            aSequenceMS,\n            aSeekWindowMS,\n            aOverlapMS\n        ) {\n            // accept only positive parameter values - if zero or negative, use old values instead\n            if (aSampleRate > 0) {\n                this.sampleRate = aSampleRate;\n            }\n            if (aOverlapMS > 0) {\n                this.overlapMs = aOverlapMS;\n            }\n\n            if (aSequenceMS > 0) {\n                this.sequenceMs = aSequenceMS;\n                this.bAutoSeqSetting = false;\n            } else {\n                // zero or below, use automatic setting\n                this.bAutoSeqSetting = true;\n            }\n\n            if (aSeekWindowMS > 0) {\n                this.seekWindowMs = aSeekWindowMS;\n                this.bAutoSeekSetting = false;\n            } else {\n                // zero or below, use automatic setting\n                this.bAutoSeekSetting = true;\n            }\n\n            this.calcSeqParameters();\n\n            this.calculateOverlapLength(this.overlapMs);\n\n            // set tempo to recalculate 'sampleReq'\n            this.tempo = this._tempo;\n        },\n\n        /**\n         * Sets new target tempo. Normal tempo = 'SCALE', smaller values represent slower\n         * tempo, larger faster tempo.\n         */\n        set tempo(newTempo) {\n            var intskip;\n\n            this._tempo = newTempo;\n\n            // Calculate new sequence duration\n            this.calcSeqParameters();\n\n            // Calculate ideal skip length (according to tempo value)\n            this.nominalSkip =\n                this._tempo * (this.seekWindowLength - this.overlapLength);\n            this.skipFract = 0;\n            intskip = Math.floor(this.nominalSkip + 0.5);\n\n            // Calculate how many samples are needed in the 'inputBuffer' to\n            // process another batch of samples\n            this.sampleReq =\n                Math.max(intskip + this.overlapLength, this.seekWindowLength) +\n                this.seekLength;\n        },\n        get inputChunkSize() {\n            return this.sampleReq;\n        },\n        get outputChunkSize() {\n            return (\n                this.overlapLength +\n                Math.max(0, this.seekWindowLength - 2 * this.overlapLength)\n            );\n        },\n\n        /**\n         * Calculates overlapInMsec period length in samples.\n         */\n        calculateOverlapLength: function(overlapInMsec) {\n            var newOvl;\n\n            // TODO assert(overlapInMsec >= 0);\n            newOvl = (this.sampleRate * overlapInMsec) / 1000;\n            if (newOvl < 16) newOvl = 16;\n\n            // must be divisible by 8\n            newOvl -= newOvl % 8;\n\n            this.overlapLength = newOvl;\n\n            this.pRefMidBuffer = new Float32Array(this.overlapLength * 2);\n            this.pMidBuffer = new Float32Array(this.overlapLength * 2);\n        },\n        checkLimits: function(x, mi, ma) {\n            return x < mi ? mi : x > ma ? ma : x;\n        },\n\n        /**\n         * Calculates processing sequence length according to tempo setting\n         */\n        calcSeqParameters: function() {\n            var seq;\n            var seek;\n\n            if (this.bAutoSeqSetting) {\n                seq = AUTOSEQ_C + AUTOSEQ_K * this._tempo;\n                seq = this.checkLimits(seq, AUTOSEQ_AT_MAX, AUTOSEQ_AT_MIN);\n                this.sequenceMs = Math.floor(seq + 0.5);\n            }\n\n            if (this.bAutoSeekSetting) {\n                seek = AUTOSEEK_C + AUTOSEEK_K * this._tempo;\n                seek = this.checkLimits(seek, AUTOSEEK_AT_MAX, AUTOSEEK_AT_MIN);\n                this.seekWindowMs = Math.floor(seek + 0.5);\n            }\n\n            // Update seek window lengths\n            this.seekWindowLength = Math.floor(\n                (this.sampleRate * this.sequenceMs) / 1000\n            );\n            this.seekLength = Math.floor(\n                (this.sampleRate * this.seekWindowMs) / 1000\n            );\n        },\n\n        /**\n         * Enables/disables the quick position seeking algorithm.\n         */\n        set quickSeek(enable) {\n            this.bQuickSeek = enable;\n        },\n\n        /**\n         * Seeks for the optimal overlap-mixing position.\n         */\n        seekBestOverlapPosition: function() {\n            if (this.bQuickSeek) {\n                return this.seekBestOverlapPositionStereoQuick();\n            } else {\n                return this.seekBestOverlapPositionStereo();\n            }\n        },\n\n        /**\n         * Seeks for the optimal overlap-mixing position. The 'stereo' version of the\n         * routine\n         *\n         * The best position is determined as the position where the two overlapped\n         * sample sequences are 'most alike', in terms of the highest cross-correlation\n         * value over the overlapping period\n         */\n        seekBestOverlapPositionStereo: function() {\n            var bestOffs, bestCorr, corr, i;\n\n            // Slopes the amplitudes of the 'midBuffer' samples.\n            this.precalcCorrReferenceStereo();\n\n            bestCorr = Number.MIN_VALUE;\n            bestOffs = 0;\n\n            // Scans for the best correlation value by testing each possible position\n            // over the permitted range.\n            for (i = 0; i < this.seekLength; i++) {\n                // Calculates correlation value for the mixing position corresponding\n                // to 'i'\n                corr = this.calcCrossCorrStereo(2 * i, this.pRefMidBuffer);\n\n                // Checks for the highest correlation value.\n                if (corr > bestCorr) {\n                    bestCorr = corr;\n                    bestOffs = i;\n                }\n            }\n            return bestOffs;\n        },\n\n        /**\n         * Seeks for the optimal overlap-mixing position. The 'stereo' version of the\n         * routine\n         *\n         * The best position is determined as the position where the two overlapped\n         * sample sequences are 'most alike', in terms of the highest cross-correlation\n         * value over the overlapping period\n         */\n        seekBestOverlapPositionStereoQuick: function() {\n            var j, bestOffs, bestCorr, corr, scanCount, corrOffset, tempOffset;\n\n            // Slopes the amplitude of the 'midBuffer' samples\n            this.precalcCorrReferenceStereo();\n\n            bestCorr = Number.MIN_VALUE;\n            bestOffs = 0;\n            corrOffset = 0;\n            tempOffset = 0;\n\n            // Scans for the best correlation value using four-pass hierarchical search.\n            //\n            // The look-up table 'scans' has hierarchical position adjusting steps.\n            // In first pass the routine searhes for the highest correlation with\n            // relatively coarse steps, then rescans the neighbourhood of the highest\n            // correlation with better resolution and so on.\n            for (scanCount = 0; scanCount < 4; scanCount++) {\n                j = 0;\n                while (_SCAN_OFFSETS[scanCount][j]) {\n                    tempOffset = corrOffset + _SCAN_OFFSETS[scanCount][j];\n                    if (tempOffset >= this.seekLength) {\n                        break;\n                    }\n\n                    // Calculates correlation value for the mixing position corresponding\n                    // to 'tempOffset'\n                    corr = this.calcCrossCorrStereo(\n                        2 * tempOffset,\n                        this.pRefMidBuffer\n                    );\n\n                    // Checks for the highest correlation value\n                    if (corr > bestCorr) {\n                        bestCorr = corr;\n                        bestOffs = tempOffset;\n                    }\n                    j++;\n                }\n                corrOffset = bestOffs;\n            }\n            return bestOffs;\n        },\n\n        /**\n         * Slopes the amplitude of the 'midBuffer' samples so that cross correlation\n         * is faster to calculate\n         */\n        precalcCorrReferenceStereo: function() {\n            var i, cnt2, temp;\n\n            for (i = 0; i < this.overlapLength; i++) {\n                temp = i * (this.overlapLength - i);\n                cnt2 = i * 2;\n                this.pRefMidBuffer[cnt2] = this.pMidBuffer[cnt2] * temp;\n                this.pRefMidBuffer[cnt2 + 1] = this.pMidBuffer[cnt2 + 1] * temp;\n            }\n        },\n\n        calcCrossCorrStereo: function(mixingPos, compare) {\n            var mixing = this._inputBuffer.vector;\n            mixingPos += this._inputBuffer.startIndex;\n\n            var corr, i, mixingOffset;\n            corr = 0;\n            for (i = 2; i < 2 * this.overlapLength; i += 2) {\n                mixingOffset = i + mixingPos;\n                corr +=\n                    mixing[mixingOffset] * compare[i] +\n                    mixing[mixingOffset + 1] * compare[i + 1];\n            }\n            return corr;\n        },\n\n        // TODO inline\n        /**\n         * Overlaps samples in 'midBuffer' with the samples in 'pInputBuffer' at position\n         * of 'ovlPos'.\n         */\n        overlap: function(ovlPos) {\n            this.overlapStereo(2 * ovlPos);\n        },\n\n        /**\n         * Overlaps samples in 'midBuffer' with the samples in 'pInput'\n         */\n        overlapStereo: function(pInputPos) {\n            var pInput = this._inputBuffer.vector;\n            pInputPos += this._inputBuffer.startIndex;\n\n            var pOutput = this._outputBuffer.vector,\n                pOutputPos = this._outputBuffer.endIndex,\n                i,\n                cnt2,\n                fTemp,\n                fScale,\n                fi,\n                pInputOffset,\n                pOutputOffset;\n\n            fScale = 1 / this.overlapLength;\n            for (i = 0; i < this.overlapLength; i++) {\n                fTemp = (this.overlapLength - i) * fScale;\n                fi = i * fScale;\n                cnt2 = 2 * i;\n                pInputOffset = cnt2 + pInputPos;\n                pOutputOffset = cnt2 + pOutputPos;\n                pOutput[pOutputOffset + 0] =\n                    pInput[pInputOffset + 0] * fi +\n                    this.pMidBuffer[cnt2 + 0] * fTemp;\n                pOutput[pOutputOffset + 1] =\n                    pInput[pInputOffset + 1] * fi +\n                    this.pMidBuffer[cnt2 + 1] * fTemp;\n            }\n        },\n        process: function() {\n            var ovlSkip, offset, temp, i;\n            if (this.pMidBuffer === null) {\n                // if midBuffer is empty, move the first samples of the input stream\n                // into it\n                if (this._inputBuffer.frameCount < this.overlapLength) {\n                    // wait until we've got overlapLength samples\n                    return;\n                }\n                this.pMidBuffer = new Float32Array(this.overlapLength * 2);\n                this._inputBuffer.receiveSamples(\n                    this.pMidBuffer,\n                    this.overlapLength\n                );\n            }\n\n            var output;\n            // Process samples as long as there are enough samples in 'inputBuffer'\n            // to form a processing frame.\n            while (this._inputBuffer.frameCount >= this.sampleReq) {\n                // If tempo differs from the normal ('SCALE'), scan for the best overlapping\n                // position\n                offset = this.seekBestOverlapPosition();\n\n                // Mix the samples in the 'inputBuffer' at position of 'offset' with the\n                // samples in 'midBuffer' using sliding overlapping\n                // ... first partially overlap with the end of the previous sequence\n                // (that's in 'midBuffer')\n                this._outputBuffer.ensureAdditionalCapacity(this.overlapLength);\n                // FIXME unit?\n                //overlap(uint(offset));\n                this.overlap(Math.floor(offset));\n                this._outputBuffer.put(this.overlapLength);\n\n                // ... then copy sequence samples from 'inputBuffer' to output\n                temp = this.seekWindowLength - 2 * this.overlapLength; // & 0xfffffffe;\n                if (temp > 0) {\n                    this._outputBuffer.putBuffer(\n                        this._inputBuffer,\n                        offset + this.overlapLength,\n                        temp\n                    );\n                }\n\n                // Copies the end of the current sequence from 'inputBuffer' to\n                // 'midBuffer' for being mixed with the beginning of the next\n                // processing sequence and so on\n                //assert(offset + seekWindowLength <= (int)inputBuffer.numSamples());\n                var start =\n                    this.inputBuffer.startIndex +\n                    2 * (offset + this.seekWindowLength - this.overlapLength);\n                this.pMidBuffer.set(\n                    this._inputBuffer.vector.subarray(\n                        start,\n                        start + 2 * this.overlapLength\n                    )\n                );\n\n                // Remove the processed samples from the input buffer. Update\n                // the difference between integer & nominal skip step to 'skipFract'\n                // in order to prevent the error from accumulating over time.\n                this.skipFract += this.nominalSkip; // real skip size\n                ovlSkip = Math.floor(this.skipFract); // rounded to integer skip\n                this.skipFract -= ovlSkip; // maintain the fraction part, i.e. real vs. integer skip\n                this._inputBuffer.receive(ovlSkip);\n            }\n        }\n    });\n\n    // https://bugs.webkit.org/show_bug.cgi?id=57295\n    extend(Stretch.prototype, {\n        get tempo() {\n            return this._tempo;\n        }\n    });\n\n    function SoundTouch(sampleRate) {\n        this.rateTransposer = new RateTransposer(false);\n        this.tdStretch = new Stretch(false, sampleRate);\n\n        this._inputBuffer = new FifoSampleBuffer();\n        this._intermediateBuffer = new FifoSampleBuffer();\n        this._outputBuffer = new FifoSampleBuffer();\n\n        this._rate = 0;\n        this._tempo = 0;\n\n        this.virtualPitch = 1.0;\n        this.virtualRate = 1.0;\n        this.virtualTempo = 1.0;\n\n        this._calculateEffectiveRateAndTempo();\n    }\n    SoundTouch.prototype = {\n        clear: function() {\n            this.rateTransposer.clear();\n            this.tdStretch.clear();\n        },\n        get rate() {\n            return this._rate;\n        },\n        set rate(rate) {\n            this.virtualRate = rate;\n            this._calculateEffectiveRateAndTempo();\n        },\n        set rateChange(rateChange) {\n            this.rate = 1.0 + 0.01 * rateChange;\n        },\n        get tempo() {\n            return this._tempo;\n        },\n        set tempo(tempo) {\n            this.virtualTempo = tempo;\n            this._calculateEffectiveRateAndTempo();\n        },\n        set tempoChange(tempoChange) {\n            this.tempo = 1.0 + 0.01 * tempoChange;\n        },\n        set pitch(pitch) {\n            this.virtualPitch = pitch;\n            this._calculateEffectiveRateAndTempo();\n        },\n        set pitchOctaves(pitchOctaves) {\n            this.pitch = Math.exp(0.69314718056 * pitchOctaves);\n            this._calculateEffectiveRateAndTempo();\n        },\n        set pitchSemitones(pitchSemitones) {\n            this.pitchOctaves = pitchSemitones / 12.0;\n        },\n        get inputBuffer() {\n            return this._inputBuffer;\n        },\n        get outputBuffer() {\n            return this._outputBuffer;\n        },\n        _calculateEffectiveRateAndTempo: function() {\n            var previousTempo = this._tempo;\n            var previousRate = this._rate;\n\n            this._tempo = this.virtualTempo / this.virtualPitch;\n            this._rate = this.virtualRate * this.virtualPitch;\n\n            if (testFloatEqual(this._tempo, previousTempo)) {\n                this.tdStretch.tempo = this._tempo;\n            }\n            if (testFloatEqual(this._rate, previousRate)) {\n                this.rateTransposer.rate = this._rate;\n            }\n\n            if (this._rate > 1.0) {\n                if (this._outputBuffer != this.rateTransposer.outputBuffer) {\n                    this.tdStretch.inputBuffer = this._inputBuffer;\n                    this.tdStretch.outputBuffer = this._intermediateBuffer;\n\n                    this.rateTransposer.inputBuffer = this._intermediateBuffer;\n                    this.rateTransposer.outputBuffer = this._outputBuffer;\n                }\n            } else {\n                if (this._outputBuffer != this.tdStretch.outputBuffer) {\n                    this.rateTransposer.inputBuffer = this._inputBuffer;\n                    this.rateTransposer.outputBuffer = this._intermediateBuffer;\n\n                    this.tdStretch.inputBuffer = this._intermediateBuffer;\n                    this.tdStretch.outputBuffer = this._outputBuffer;\n                }\n            }\n        },\n        process: function() {\n            if (this._rate > 1.0) {\n                this.tdStretch.process();\n                this.rateTransposer.process();\n            } else {\n                this.rateTransposer.process();\n                this.tdStretch.process();\n            }\n        }\n    };\n\n    function WebAudioBufferSource(buffer) {\n        this.buffer = buffer;\n    }\n    WebAudioBufferSource.prototype = {\n        extract: function(target, numFrames, position) {\n            var l = this.buffer.getChannelData(0),\n                r = this.buffer.getChannelData(1);\n            for (var i = 0; i < numFrames; i++) {\n                target[i * 2] = l[i + position];\n                target[i * 2 + 1] = r[i + position];\n            }\n            return Math.min(numFrames, l.length - position);\n        }\n    };\n\n    function getWebAudioNode(context, filter) {\n        var BUFFER_SIZE = 4096;\n        var node = context.createScriptProcessor(BUFFER_SIZE, 2, 2),\n            samples = new Float32Array(BUFFER_SIZE * 2);\n        node.onaudioprocess = function(e) {\n            var l = e.outputBuffer.getChannelData(0),\n                r = e.outputBuffer.getChannelData(1);\n            var framesExtracted = filter.extract(samples, BUFFER_SIZE);\n            if (framesExtracted === 0) {\n                node.disconnect(); // Pause.\n            }\n            for (var i = 0; i < framesExtracted; i++) {\n                l[i] = samples[i * 2];\n                r[i] = samples[i * 2 + 1];\n            }\n        };\n        return node;\n    }\n\n    return soundtouch = {\n        RateTransposer: RateTransposer,\n        Stretch: Stretch,\n        SimpleFilter: SimpleFilter,\n        SoundTouch: SoundTouch,\n        WebAudioBufferSource: WebAudioBufferSource,\n        getWebAudioNode: getWebAudioNode\n    };\n});//end of factory method container"],"file":"soundtouch.min.js"}