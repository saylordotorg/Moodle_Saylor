{"version":3,"sources":["../src/poodll_readseedmediaskin.js"],"names":["define","$","jqui","log","utils","upskin_radial","upskin_bar","hwave_mic","settings","debug","instanceprops","pmr","devsettings","therecanim","buttonmode","clone","extend","init","ip","fetch_instanceprops","onUploadSuccess","controlbarid","set_visual_mode","onUploadFailure","fetch_status_bar","skin","fetch_preview_audio","fetch_preview_video","fetch_resource_audio","fetch_resource_video","onMediaError","e","console","error","onMediaSuccess_video","onMediaSuccess_audio","controlbar","preview","attr","uploader","Output","start","timer","reset","update_status","handle_timer_update","status","html","fetch_display_time","seconds","initseconds","process_recording_stop","fetch_uploader_skin","element","upskin","config","playcanvas","set_button_style","mode","each","index","modeclass","removeClass","addClass","self","hermes","postMessage","type","hide","thecaption","text","show","allowearlyexit","enabled","ss_caption","M","util","get_string","insert_controlbar_video","resource","prepare_controlbar_audio","insert_controlbar_audio","prepare_controlbar","skin_style","media_skin_style","ss","fetch_strings","ss_startlabel","ss_testlabel","ss_stoplabel","controls","fetch_dialogue_box","downloaddialog","errordialog","prepend","settingsdialog","errorsdialog","settingsicon","bigbutton","stopbutton","startbutton","set_dialogue_box","register_controlbar_events_video","onMediaSuccess","register_controlbar_events_audio","recanim","audioanalyser","get","click","target","hasClass","messageObject","disable","testover","mediaRecorder","do_stop_audio","clear","enable","sounddetected","do_start_audio","setTimeout","countingdown","currenttime","Date","getTime","currentcount","starttime","finalcount","newcount","previouscount","stopPropagation","uploaded","open","window","onbeforeunload","stop","doDeferredUpload","blobs","length","do_save_audio","enable_button","button","disable_button"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'jqueryui', 'core/log', 'filter_poodll/utils_amd', 'filter_poodll/upskin_radial', 'filter_poodll/upskin_bar',\n        'filter_poodll/anim_hwave_mic', 'filter_poodll/dlg_devicesettings'],\n    function ($, jqui, log, utils, upskin_radial, upskin_bar, hwave_mic, settings) {\n\n        \"use strict\"; // jshint ;_;\n\n        log.debug('PoodLL Read Seed Skin: initialising');\n\n        return {\n\n            instanceprops: null,\n            pmr: null,\n            devsettings: null,\n            therecanim: null,\n            buttonmode: null,\n\n            //for making multiple instances\n            clone: function () {\n                return $.extend(true, {}, this);\n            },\n\n            init: function (ip, pmr) {\n                this.instanceprops = ip;\n                this.pmr = pmr;\n                this.devsettings = settings.clone();\n                this.devsettings.init(pmr, ip);\n            },\n\n\n            fetch_instanceprops: function () {\n                return this.instanceprops;\n            },\n\n\n            onUploadSuccess: function (controlbarid) {\n                this.set_visual_mode('allfinished', controlbarid);\n                //$('#' + controlbarid + ' > .poodll_save-recording').hide();\n                //$('#' + controlbarid + ' > .poodll_savedsuccessfully').show();\n            },\n\n            onUploadFailure: function (controlbarid) {\n                return;\n            },\n\n            fetch_status_bar: function (skin) {\n                var status = '<div class=\"poodll_status_' + skin + '\" width=\"320\" height=\"50\">00:00:00</div>';\n                return status;\n            },\n\n            fetch_preview_audio: function (skin) {\n                var preview = '<audio class=\"poodll_preview_' + skin + ' hide\" playsInline muted></audio>';\n                return preview;\n            },\n            fetch_preview_video: function (skin) {\n                return this.fetch_preview_audio(skin);\n            },\n            fetch_resource_audio: function (skin) {\n                var resourceplayer = '<audio class=\"poodll_resourceplayer_' + skin + ' hide\" ></audio>';\n                return resourceplayer;\n            },\n            fetch_resource_video: function (skin) {\n                return this.fetch_resource_audio(skin);\n            },\n\n            onMediaError: function (e) {\n                console.error('media error', e);\n            },\n\n            onMediaSuccess_video: function (controlbarid) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                this.set_visual_mode('startbuttonrecording', controlbarid);\n            },\n\n            onMediaSuccess_audio: function (controlbarid) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                ip.controlbar.preview.attr('src', null);\n\n                //clear messages\n                ip.uploader.Output('');\n\n                //wave animation\n                this.therecanim.start();\n\n                //timer and status bar\n                ip.timer.reset();\n                ip.timer.start();\n                this.update_status(controlbarid);\n\n                //visuals\n                //only change visuals if this is not the testing\n                if (this.buttonmode != \"testbuttonrecording\") {\n                    this.set_visual_mode('startbuttonrecording', controlbarid);\n                }\n            },\n\n            handle_timer_update: function (controlbarid) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                ip.controlbar.status.html(ip.timer.fetch_display_time());\n                if (ip.timer.seconds == 0 && ip.timer.initseconds > 0) {\n                    this.process_recording_stop(controlbarid);\n                }\n            },\n\n            update_status: function (controlbarid) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                ip.controlbar.status.html(ip.timer.fetch_display_time());\n            },\n\n            fetch_uploader_skin: function (controlbarid, element) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                // var upskin = upskin_radial.clone();\n                var upskin = upskin_bar.clone();\n                upskin.init(ip.config, element, ip.controlbar.playcanvas, ip.controlbar.status);\n                return upskin;\n            },\n\n            set_button_style: function (mode) {\n                //remove all button styles\n                var mode_css_classes = ['testbuttonready', 'testbuttonrecording', 'startbuttonready', 'startbuttoncountdown', 'startbuttonrecording', 'uploading', 'allfinished'];\n                $.each(mode_css_classes, function (index, modeclass) {\n                    $('.poodll_mediarecorderbox_readseed').removeClass('poodll_mediarecorder_readseed_' + modeclass);\n                    $('.poodll_mediarecorderbox_readseed').removeClass('readseed_canclick');\n                });\n                $('.poodll_mediarecorderbox_readseed').addClass('poodll_mediarecorder_readseed_' + mode);\n                if (mode == 'testbuttonready' || mode == 'startbuttonready') {\n                    $('.poodll_mediarecorderbox_readseed').addClass('readseed_canclick');\n                }\n            },\n\n            //set visuals for different states (ie recording or playing)\n            set_visual_mode: function (mode, controlbarid) {\n                var self = this;\n                var ip = this.fetch_instanceprops(controlbarid);\n                this.buttonmode = mode;\n\n                //send a message to alert of status change\n                var messageObject = {};\n                messageObject.type = \"recorderstatus\";\n                messageObject.status = mode;\n                ip.config.hermes.postMessage(messageObject);\n\n\n                switch (mode) {\n\n                    case 'testbuttonready':\n                        ip.controlbar.status.hide();\n                        ip.controlbar.thecaption.text('SPEAK');\n                        ip.controlbar.thecaption.show();\n                        ip.controlbar.playcanvas.hide();\n                        self.set_button_style(mode);\n                        break;\n                    case 'testbuttonrecording':\n                        ip.controlbar.thecaption.hide();\n                        ip.controlbar.playcanvas.show();\n                        self.set_button_style(mode);\n                        break;\n\n                    case 'startbuttonready':\n                        ip.controlbar.thecaption.text('START');\n                        ip.controlbar.thecaption.show();\n                        ip.controlbar.playcanvas.hide();\n                        self.set_button_style(mode);\n                        break;\n                    case 'startbuttoncountdown':\n                        ip.controlbar.thecaption.text('----------');\n                        ip.controlbar.thecaption.show();\n                        ip.controlbar.playcanvas.hide();\n                        self.set_button_style(mode);\n                        break;\n                    case 'startbuttonrecording':\n                        ip.controlbar.playcanvas.show();\n                        if (ip.config.allowearlyexit == \"1\" && ip.timer.enabled) {\n                           // self.enable_button(ip.controlbar.stopbutton);\n                            var ss_caption=M.util.get_string('recui_clicktofinish', 'filter_poodll');\n                            ip.controlbar.thecaption.text(ss_caption);\n                            ip.controlbar.thecaption.show();\n                        }else{\n                            ip.controlbar.thecaption.hide();\n                        }\n                        self.set_button_style(mode);\n                        break;\n\n                    case 'uploading':\n                        var spinner = '<i class=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>';\n                        ip.controlbar.thecaption.html(spinner);\n\n                        //the bar progress works too.\n                        //to use that hide the caption and show the  canvas\n                        //ip.controlbar.thecaption.hide();\n                        //ip.controlbar.playcanvas.show();\n                        ip.controlbar.thecaption.show();\n                        ip.controlbar.playcanvas.hide();\n\n\n                        self.set_button_style(mode);\n                        ip.controlbar.status.show();\n                        break;\n\n                    case 'allfinished':\n                        ip.controlbar.thecaption.text('Finished');\n                        ip.controlbar.thecaption.show();\n                        ip.controlbar.playcanvas.hide();\n                        ip.controlbar.status.hide();\n                        self.set_button_style(mode);\n                        break;\n\n                }\n\n            },\n\n            //insert the control bar and return it to be reused\n            insert_controlbar_video: function (element, controlbarid, preview, resource) {\n                return this.prepare_controlbar_audio(element, controlbarid, preview, resource);\n            },\n            //insert the control bar and return it to be reused\n            insert_controlbar_audio: function (element, controlbarid, preview, resource) {\n                var controlbar = this.prepare_controlbar(element, controlbarid, preview, resource, 'audio');\n                return controlbar;\n            },\n\n            //insert the control bar and return it to be reused\n            prepare_controlbar: function (element, controlbarid, preview, resource, mediatype) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                var skin_style = ip.config.media_skin_style;\n\n                var recorder_class = 'poodll_mediarecorder_audio';\n                var size_class = 'poodll_mediarecorder_size_auto';\n\n                var ss = this.pmr.fetch_strings();\n                var ss_startlabel = M.util.get_string('recui_startactivity', 'filter_poodll');\n                var ss_testlabel = M.util.get_string('recui_testmic', 'filter_poodll');\n                var ss_stoplabel = M.util.get_string('recui_stop', 'filter_poodll');\n\n                var status = this.fetch_status_bar('readseed');\n                var controls = '<div class=\"poodll_mediarecorderholder_readseed '\n                    + recorder_class + '\" id=\"holder_' + controlbarid + '\">';\n\n                controls += '<div class=\"poodll_mediarecorderbox_readseed\" id=\"' + controlbarid + '\">';\n                controls += this.devsettings.fetch_dialogue_box();\n                controls += ip.downloaddialog.fetch_dialogue_box();\n                controls += ip.errordialog.fetch_dialogue_box();\n                controls += '<div class=\"style-holder ' + skin_style + '\">';\n                controls += preview,\n                    controls += '<div class=\"settingsicon\" id=\"settingsicon_' + controlbarid + '\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>';\n                controls += '<canvas id=\"' + controlbarid + '_playcanvas\" class=\"poodll_mediarecorder_playcanvas_readseed\" width=\"180\" height=\"50\"></canvas>';\n                controls += '<span id=\"' + controlbarid + '_caption\" class=\"poodll_mediarecorder_caption_readseed\"></span>';\n                controls += '<span id=\"' + controlbarid + '_bogusstartbutton\" class=\"poodll_mediarecorder_bogusstartbutton_readseed\"></span>';\n                controls += '<span id=\"' + controlbarid + '_bogusstopbutton\" class=\"poodll_mediarecorder_bogusstopbutton_readseed\"></span>';\n                /*\n                controls +=  '<button type=\"button\" class=\"poodll_mediarecorder_button_readseed poodll_start-recording_readseed\">' + ss_startlabel + '</button>';\n                controls +=  '<button type=\"button\" class=\"poodll_mediarecorder_button_readseed poodll_test-recording_readseed\">' + ss_testlabel +  '</button>';\n                controls += '<button type=\"button\" class=\"poodll_mediarecorder_button_readseed poodll_stop-recording_readseed\">' +  ss_stoplabel +  '</button>';\n                */\n                controls += status;\n                controls += '</div></div></div>';\n                $(element).prepend(controls);\n                //<i class=\"fa fa-stop\" aria-hidden=\"true\"></i>\n                var controlbar = {\n                    settingsdialog: $('#' + controlbarid + ' .poodll_dialogue_box_settings'),\n                    downloaddialog: $('#' + controlbarid + ' .poodll_dialogue_box_download'),\n                    errorsdialog: $('#' + controlbarid + ' .poodll_dialogue_box_errors'),\n                    settingsicon: $('#' + controlbarid + ' .settingsicon'),\n                    status: $('#' + controlbarid + ' .poodll_status_readseed'),\n                    preview: $('#' + controlbarid + ' .poodll_preview_readseed'),\n                    bigbutton: $('#' + controlbarid + '.poodll_mediarecorderbox_readseed'),\n                    playcanvas: $('#' + controlbarid + '_playcanvas'),\n                    thecaption: $('#' + controlbarid + '_caption'),\n                    //These start and stop buttons are bogus. poodll_mediarecorder goes looking for them.\n                    //But we never use them here.\n                    stopbutton: $('#' + controlbarid + ' .poodll_mediarecorder_bogusstopbutton_readseed'),\n                    startbutton: $('#' + controlbarid + ' .poodll_mediarecorder_bogusstartbutton_readseed')\n                };\n                //settings and error and download dialogs\n                //settings is on 'this' because it is shown from skkn events, but errors are from pmr stuff\n                ip.downloaddialog.set_dialogue_box(controlbar.downloaddialog);\n                ip.errordialog.set_dialogue_box(controlbar.errorsdialog);\n                this.devsettings.set_dialogue_box(controlbar.settingsdialog);\n\n                return controlbar;\n            }, //end of fetch_control_bar_readseed\n\n\n            register_controlbar_events_video: function (onMediaSuccess, controlbarid) {\n                return this.register_controlbar_events_audio(onMediaSuccess, controlbarid);\n            },\n\n            register_controlbar_events_audio: function (onMediaSuccess, controlbarid) {\n\n                var self = this;\n                var pmr = this.pmr;\n                var ip = this.fetch_instanceprops(controlbarid);\n\n                //init recording anim\n                ip.config.recanim = 'hwave_mic';\n                var recanim = hwave_mic.clone();\n                self.therecanim = recanim;\n                recanim.init(ip.audioanalyser, ip.controlbar.playcanvas.get(0));\n\n                //set visual mode\n                this.set_visual_mode('testbuttonready', controlbarid);\n\n                ip.controlbar.bigbutton.click(function (e) {\n                    //we do not want the dialog and other things to trigger events here\n                    //just the caption and the button itself\n                    if (e.target !== this\n                        && !$(e.target).hasClass('poodll_mediarecorder_caption_readseed')\n                        && !$(e.target).hasClass('poodll_mediarecorder_playcanvas_readseed')) {\n                        return;\n                    }\n\n                    switch (self.buttonmode) {\n                        case 'testbuttonready':\n\n                            //send a message to alert of new status\n                            //publish recording stopped event\n                            var messageObject = {};\n                            messageObject.type = \"recorderstatus\";\n                            messageObject.status = 'testbuttonrecording';\n                            ip.config.hermes.postMessage(messageObject);\n\n                            //we will start recording here.\n                            //but its just a throwaway so we disable messages to API client and timer\n                            ip.config.hermes.disable();\n                            ip.timer.disable();\n\n                            var testover = function () {\n                                if (ip.mediaRecorder) {\n                                    //stop recording\n                                    pmr.do_stop_audio(ip);\n                                }\n                                //wave animation\n                                recanim.clear();\n                                ip.config.hermes.enable();\n                                if (recanim.sounddetected) {\n                                    self.set_visual_mode('startbuttonready', controlbarid);\n                                } else {\n                                    var messageObject = {};\n                                    messageObject.type = \"recorderstatus\";\n                                    messageObject.status = 'testrecordingfailed';\n                                    ip.config.hermes.postMessage(messageObject);\n                                    self.set_visual_mode('testbuttonready', controlbarid);\n                                }\n                            }\n                            pmr.do_start_audio(ip, onMediaSuccess);\n                            setTimeout(testover, 4000);\n                            self.set_visual_mode('testbuttonrecording', controlbarid);\n                            break;\n\n                        case 'startbuttonready':\n                            //we start real recording here.\n                            // so we enable messages to API client and timer\n                            var countingdown = function () {\n                                var currenttime = new Date().getTime();\n                                var currentcount = currenttime - starttime;\n                                if (currentcount > finalcount) {\n                                    ip.timer.enable();\n                                    pmr.do_start_audio(ip, onMediaSuccess);\n                                } else {\n                                    var newcount = false;\n                                    if (previouscount < 0 && currentcount > 0) {\n                                        newcount = finalcount / 1000;\n                                    } else if (previouscount < 1000 && currentcount > 1000) {\n                                        newcount = finalcount / 1000 - 1;\n                                    } else if (previouscount < 2000 && currentcount > 2000) {\n                                        newcount = finalcount / 1000 - 2;\n                                    }\n                                    if (newcount) {\n                                        var messageObject = {};\n                                        messageObject.type = \"countdownstatus\";\n                                        messageObject.status = newcount;\n                                        ip.config.hermes.postMessage(messageObject);\n                                        //ip.controlbar.thecaption.text('--- ' + newcount +'  ---');\n                                    }\n                                    previouscount = currentcount;\n                                    setTimeout(countingdown, 100);\n                                }\n                            };\n                            ip.config.hermes.enable();\n                            self.set_visual_mode('startbuttoncountdown', controlbarid);\n                            var starttime = new Date().getTime();\n                            var finalcount = 3000;\n                            var previouscount = -1;\n                            setTimeout(countingdown, 100);\n                            break;\n\n                        //if we ARE recording and allowearlyexit is true, a click will stop the activity\n                        case 'startbuttonrecording':\n                            if (ip.config.allowearlyexit == \"1\" && ip.timer.enabled) {\n                                self.process_recording_stop(controlbarid);\n                            }\n                            break;\n\n                        //there is no stop button ... just for consistency and testing\n                        case 'stopbutton':\n                            self.process_recording_stop();\n                    }\n\n                });\n\n                ip.controlbar.settingsicon.click(function (e) {\n                    log.debug(\"we no proapagato\");\n                    // Do not pass this event on\n                    e.stopPropagation();\n                    //handle click properly\n                    if (!self.uploaded) {\n                        self.devsettings.open();\n                    } else {\n                        ip.downloaddialog.open();\n                    }\n                });\n\n                window.onbeforeunload = function () {\n                    //no need to do anything here\n                    // self.enable_button(ip.controlbar.startbutton);\n\n                };\n            }, //end of register_control_bar_events_readseed\n\n            process_recording_stop: function (controlbarid) {\n                var self = this;\n                var pmr = this.pmr;\n                var ip = this.fetch_instanceprops(controlbarid);\n                var recanim = self.therecanim;\n\n                //stop recording\n                pmr.do_stop_audio(ip);\n\n                //wave animation\n                recanim.clear();\n\n\n                //timer and status bar\n                ip.timer.stop();\n                self.update_status(controlbarid);\n\n                //call upload right away\n                //but we have to do it this lame deferred way because some mediastreamrecorders return a single\n                //blob shortly after we stop. We init like that too, to make sure we do not truncate a users recording\n                //if the mini blobs did not arrive\n                var doDeferredUpload = function () {\n                    if (ip.blobs && ip.blobs.length > 0) {\n                        pmr.do_save_audio(ip);\n                        ip.uploaded = true;\n                        //  self.disable_button(ip.controlbar.startbutton);\n                    } else {\n                        setTimeout(doDeferredUpload, 200);\n                    }\n                }\n                setTimeout(doDeferredUpload, 200);\n\n                //set visuals\n                self.set_visual_mode('uploading', controlbarid);\n            },\n\n            enable_button: function (button) {\n                $(button).attr('disabled', false);\n                $(button).removeClass('pmr_disabled');\n            },\n            disable_button: function (button) {\n                $(button).attr('disabled', true);\n                $(button).addClass('pmr_disabled');\n            },\n\n        };//end of returned object\n    });//total end\n"],"file":"poodll_readseedmediaskin.min.js"}