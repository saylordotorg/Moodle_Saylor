{"version":3,"sources":["../src/anim_progress_bar_fresh.js"],"names":["define","$","log","debug","waveroot","playcanvas","context","startx","starty","barwidth","barheight","enabled","drawparams","barColor","textColor","font","textAlign","clone","extend","init","get","width","height","getContext","test","analyser","testAnalyser","bufferLength","core","fftSize","dataArray","Uint8Array","console","readyBars","$waveRoot","$waveProgress","stickCount","toFixed","empty","i","point","append","playBars","currentTime","duration","that","attr","pointsCollection","each","thepoint","children","style","draw","waveData","sampleData","Math","floor","random","push","pointHeight","css","fetchCurrent","requestAnimationFrame","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","pauseBars","setDrawParam","paramkey","paramvalue","clear","clearRect","stop","stopthere","start","textcolor","fillStyle","fillRect"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\r\ndefine(['jquery', 'core/log'], function ($, log) {\r\n\r\n    \"use strict\"; // jshint ;_;\r\n\r\n    log.debug('Bar Progress: initialising');\r\n\r\n    return {\r\n\r\n        waveroot: null,\r\n\r\n        playcanvas: null,\r\n        context: null,\r\n        startx: null,\r\n        starty: null,\r\n        barwidth: null,\r\n        barheight: null,\r\n        enabled: false,\r\n        drawparams: {\r\n            barColor: \"#6DDC6F\",\r\n            textColor: '#fff',\r\n            font: '12px Arial',\r\n            textAlign: \"center\"\r\n        },\r\n\r\n        //for making multiple instances\r\n        clone: function () {\r\n            return $.extend(true, {}, this);\r\n        },\r\n\r\n        //pass in config, the jquery video/audio object, and a function to be called when conversion has finshed\r\n        init: function (playcanvas) {\r\n            //stash the key actors for calling from draw\r\n            this.playcanvas = playcanvas.get(0);\r\n            this.startx = 0;\r\n            this.starty = 0;\r\n            this.barwidth = this.playcanvas.width;\r\n            this.barheight = this.playcanvas.height;\r\n            this.context = this.playcanvas.getContext('2d');\r\n        },\r\n        test: function (analyser) {\r\n            var testAnalyser = analyser;\r\n            var bufferLength = testAnalyser.core.fftSize;\r\n            var dataArray = new Uint8Array(bufferLength);\r\n            console.log(testAnalyser);\r\n        },\r\n\r\n        readyBars: function () {\r\n\r\n            var $waveRoot = $('.poodll_fresh_wave');\r\n            var $waveProgress = $('<div class=\"poodll_fresh_progress_bar\"><span></span></div>');\r\n            var stickCount = $waveRoot.width() / 4;\r\n            stickCount.toFixed();\r\n            $waveRoot.empty();\r\n\r\n            for (var i = 0; i < stickCount; i++) {\r\n                var pointHeight = 8;\r\n                var point = $(\r\n                    '<div class=\"poodll_fresh_point\">' +\r\n                    '<div class=\"poodll_fresh_stick\" style=\"height: ' + pointHeight + 'px\"></div>' +\r\n                    '</div>'\r\n                )\r\n                $waveRoot.append(point);\r\n            }\r\n            $waveRoot.append($waveProgress);\r\n\r\n        },\r\n\r\n        playBars: function (currentTime, duration) {\r\n            var that = this;\r\n            var $waveRoot = $('.poodll_fresh_wave');\r\n            var $waveProgress = $('.poodll_fresh_progress_bar');\r\n            var stickCount = $waveRoot.width() / 4;\r\n\r\n            $waveRoot\r\n                .attr('data-ct', currentTime)\r\n                .attr('data-duration', duration);\r\n            stickCount.toFixed();\r\n\r\n            var pointsCollection = $('.poodll_fresh_point');\r\n            $.each(pointsCollection,function(thepoint){\r\n                if (pointsCollection[thepoint].children[0]) {\r\n                    pointsCollection[thepoint].children[0].style.height = '4px';\r\n                }\r\n            });\r\n\r\n            var draw = function () {\r\n                var waveData = [];\r\n                $.each(pointsCollection,function(thepoint){\r\n                    var sampleData = Math.floor(Math.random() * 50 + 4);\r\n                    waveData.push(sampleData);\r\n                    var pointHeight = waveData[i] || 4;\r\n\r\n                    // if (i < that.fetchCurrent() * stickCount ) {\r\n                    pointsCollection[thepoint].children[0].style.height = pointHeight + 'px';\r\n                });\r\n\r\n\r\n                $waveProgress.css('left', that.fetchCurrent() * 100 + '%');\r\n                var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\r\n                    window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\r\n\r\n                if (that.fetchCurrent() < 1) {\r\n                    console.log(that.fetchCurrent());\r\n                    requestAnimationFrame(draw);\r\n                }\r\n            }//end of draw\r\n            draw();\r\n        },\r\n\r\n        pauseBars: function () {\r\n\r\n        },\r\n\r\n        setDrawParam: function (paramkey, paramvalue) {\r\n            this.drawparams[paramkey] = paramvalue;\r\n        },\r\n\r\n        clear: function () {\r\n            this.context.clearRect(this.startx, this.starty, this.barwidth, this.barheight);\r\n        },\r\n        //this function to be overridden by calling class\r\n        //0= 0% 1=100%\r\n        fetchCurrent: function () {\r\n            return 0;\r\n        },\r\n\r\n        //stop and clear\r\n        stop: function () {\r\n            this.enabled = false;\r\n            this.clear();\r\n        },\r\n        //stop without clearing\r\n        stopthere: function () {\r\n            this.enabled = false;\r\n        },\r\n\r\n        start: function () {\r\n            this.clear();\r\n            this.enabled = true;\r\n            var that = this;\r\n            //set draw params, later could make this configurable\r\n            this.context.textAlign = this.drawparams.textAlign;\r\n            this.context.font = this.drawparams.font;\r\n            var textcolor = this.drawparams.textColor;\r\n\r\n\r\n            var draw = function () {\r\n\r\n                if (!that.enabled) {\r\n                    return;\r\n                }\r\n                that.clear();\r\n                that.context.fillStyle = that.drawparams.barColor;\r\n                that.context.fillRect(that.startx, that.starty, that.fetchCurrent() * that.barwidth, that.barheight);\r\n\r\n                //draw text\r\n                //this distorts unless we set the height and width of the canvas as canvas attributes, and NOT with CSS\r\n                //that didn't really fit with this, so we use text in the page (ie not canvas)\r\n                /*\r\n                that.context.fillStyle = textcolor;\r\n                that.context.fillText(parseInt(that.fetchCurrent() * 100) +'%',that.barwidth/2, that.barheight/2);\r\n                */\r\n                var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\r\n                    window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\r\n                requestAnimationFrame(draw);\r\n\r\n            }//end of draw\r\n            draw();\r\n        }//end of enable\r\n    };//end of returned object\r\n});//total end\r\n"],"file":"anim_progress_bar_fresh.min.js"}