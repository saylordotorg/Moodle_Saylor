{"version":3,"sources":["../src/poodll_pushmediaskin.js"],"names":["define","$","jqui","log","utils","upskin_radial","upskin_bar","hwave_mic","settings","debug","instanceprops","pmr","devsettings","therecanim","buttonmode","strings","clone","extend","init","ip","fetch_strings","M","util","get_string","fetch_instanceprops","onUploadSuccess","controlbarid","set_visual_mode","onUploadFailure","fetch_status_bar","skin","fetch_preview_audio","fetch_preview_video","fetch_resource_audio","fetch_resource_video","onfinalspeechcapture","just_stop","onMediaError","e","console","error","onMediaSuccess_video","onMediaSuccess_audio","controlbar","preview","attr","uploader","Output","start","timer","reset","update_status","handle_timer_update","status","html","fetch_display_time","seconds","initseconds","stop_and_upload","fetch_uploader_skin","element","upskin","config","playcanvas","set_button_style","mode","each","index","modeclass","removeClass","addClass","self","hermes","postMessage","type","thecaption","text","show","hide","settingsicon","insert_controlbar_video","resource","prepare_controlbar_audio","insert_controlbar_audio","prepare_controlbar","skin_style","media_skin_style","controls","fetch_dialogue_box","downloaddialog","errordialog","prepend","settingsdialog","errorsdialog","bigbutton","themicicon","stopbutton","startbutton","set_dialogue_box","register_controlbar_events_video","onMediaSuccess","register_controlbar_events_audio","recanim","audioanalyser","get","click","target","clickable","hasClass","messageObject","disable","do_start_audio","countingdown","currenttime","Date","getTime","currentcount","starttime","finalcount","enable","newcount","previouscount","setTimeout","stopPropagation","uploaded","open","window","onbeforeunload","mediaRecorder","do_stop_audio","clear","stop","doDeferredUpload","blobs","length","do_save_audio","enable_button","button","disable_button"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'jqueryui', 'core/log', 'filter_poodll/utils_amd', 'filter_poodll/upskin_radial', 'filter_poodll/upskin_bar',\n        'filter_poodll/anim_hwave_mic', 'filter_poodll/dlg_devicesettings'],\n    function ($, jqui, log, utils, upskin_radial, upskin_bar, hwave_mic, settings) {\n\n        \"use strict\"; // jshint ;_;\n\n        log.debug('PoodLL Push Skin: initialising');\n\n        return {\n\n            instanceprops: null,\n            pmr: null,\n            devsettings: null,\n            therecanim: null,\n            buttonmode: null,\n            strings: null,\n\n            //for making multiple instances\n            clone: function () {\n                return $.extend(true, {}, this);\n            },\n\n            init: function (ip, pmr) {\n                this.instanceprops = ip;\n                this.pmr = pmr;\n                this.devsettings = settings.clone();\n                this.devsettings.init(pmr, ip);\n\n                //init strings\n                this.strings = this.pmr.fetch_strings();\n                //   this.strings['recui_startactivity']=M.util.get_string('recui_startactivity','filter_poodll');\n                //   this.strings['recui_testmic']=M.util.get_string('recui_testmic','filter_poodll');\n                //   this.strings['recui_stop']=M.util.get_string('recui_stop','filter_poodll');\n\n                this.strings['recui_pushtospeak'] = M.util.get_string('recui_pushtospeak', 'filter_poodll');\n            },\n\n\n            fetch_instanceprops: function () {\n                return this.instanceprops;\n            },\n\n\n            onUploadSuccess: function (controlbarid) {\n                this.set_visual_mode('allfinished', controlbarid);\n                //$('#' + controlbarid + ' > .poodll_save-recording').hide();\n                //$('#' + controlbarid + ' > .poodll_savedsuccessfully').show();\n            },\n\n            onUploadFailure: function (controlbarid) {\n                return;\n            },\n\n            fetch_status_bar: function (skin) {\n                var status = '<div class=\"poodll_status_' + skin + '\" width=\"320\" height=\"50\">00:00:00</div>';\n                return status;\n            },\n\n            fetch_preview_audio: function (skin) {\n                var preview = '<audio class=\"poodll_preview_' + skin + ' hide\"></audio>';\n                return preview;\n            },\n            fetch_preview_video: function (skin) {\n                return this.fetch_preview_audio(skin);\n            },\n            fetch_resource_audio: function (skin) {\n                var resourceplayer = '<audio class=\"poodll_resourceplayer_' + skin + ' hide\" ></audio>';\n                return resourceplayer;\n            },\n            fetch_resource_video: function (skin) {\n                return this.fetch_resource_audio(skin);\n            },\n\n            onfinalspeechcapture: function (speechtext,speechresults) {\n                this.just_stop();\n            },\n\n            onMediaError: function (e) {\n                console.error('media error', e);\n            },\n\n            onMediaSuccess_video: function (controlbarid) {\n                var ip = this.fetch_instanceprops();\n                this.set_visual_mode('startbuttonrecording', controlbarid);\n            },\n\n            onMediaSuccess_audio: function (controlbarid) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                ip.controlbar.preview.attr('src', null);\n\n                //clear messages\n                ip.uploader.Output('');\n\n                //wave animation\n                this.therecanim.start();\n\n                //timer and status bar\n                ip.timer.reset();\n                ip.timer.start();\n                this.update_status(controlbarid);\n\n                //visuals\n                this.set_visual_mode('startbuttonrecording', controlbarid);\n\n            },\n\n            handle_timer_update: function (controlbarid) {\n                var ip = this.fetch_instanceprops();\n                ip.controlbar.status.html(ip.timer.fetch_display_time());\n                if (ip.timer.seconds == 0 && ip.timer.initseconds > 0) {\n                    this.stop_and_upload(controlbarid);\n                }\n            },\n\n            update_status: function (controlbarid) {\n                var ip = this.fetch_instanceprops();\n                ip.controlbar.status.html(ip.timer.fetch_display_time());\n            },\n\n            fetch_uploader_skin: function (controlbarid, element) {\n                var ip = this.fetch_instanceprops();\n                // var upskin = upskin_radial.clone();\n                var upskin = upskin_bar.clone();\n                upskin.init(ip.config, element, ip.controlbar.playcanvas, ip.controlbar.status);\n                return upskin;\n            },\n\n            set_button_style: function (mode) {\n                //remove all button styles\n                var mode_css_classes = ['testbuttonready', 'testbuttonrecording', 'startbuttonready', 'startbuttoncountdown', 'startbuttonrecording', 'uploading', 'allfinished'];\n                $.each(mode_css_classes, function (index, modeclass) {\n                    $('.poodll_mediarecorderbox_push').removeClass('poodll_mediarecorder_push_' + modeclass);\n                    $('.poodll_mediarecorderbox_push').removeClass('push_canclick');\n                });\n                $('.poodll_mediarecorderbox_push').addClass('poodll_mediarecorder_push_' + mode);\n                if (mode == 'testbuttonready' || mode == 'startbuttonready') {\n                    $('.poodll_mediarecorderbox_push').addClass('push_canclick');\n                }\n            },\n\n            //set visuals for different states (ie recording or playing)\n            set_visual_mode: function (mode) {\n                var self = this;\n                var ip = this.fetch_instanceprops();\n                this.buttonmode = mode;\n\n                //send a message to alert of status change\n                var messageObject = {};\n                messageObject.type = \"recorderstatus\";\n                messageObject.status = mode;\n                ip.config.hermes.postMessage(messageObject);\n\n                var spinner = '<i class=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>';\n\n\n                switch (mode) {\n\n\n                    case 'startbuttonready':\n                        ip.controlbar.thecaption.text(self.strings['recui_pushtospeak']);\n                        ip.controlbar.thecaption.show();\n                        ip.controlbar.playcanvas.hide();\n                        ip.controlbar.status.hide();\n                        ip.controlbar.settingsicon.hide();\n                        self.set_button_style(mode);\n                        break;\n\n                    case 'startbuttonrecording':\n                        ip.controlbar.thecaption.hide();\n                        ip.controlbar.playcanvas.show();\n                        self.set_button_style(mode);\n                        ip.controlbar.status.hide();\n                        break;\n\n                    case 'uploading':\n                        ip.controlbar.thecaption.html(spinner);\n\n                        //the bar progress works too.\n                        //to use that hide the caption and show the  canvas\n                        //ip.controlbar.thecaption.hide();\n                        //ip.controlbar.playcanvas.show();\n                        ip.controlbar.thecaption.show();\n                        ip.controlbar.playcanvas.hide();\n\n\n                        self.set_button_style(mode);\n                        ip.controlbar.status.hide();\n                        break;\n\n                    case 'allfinished':\n                        ip.controlbar.thecaption.text('Finished');\n                        ip.controlbar.thecaption.show();\n                        ip.controlbar.playcanvas.hide();\n                        ip.controlbar.status.hide();\n                        self.set_button_style(mode);\n                        break;\n\n                }\n\n            },\n\n            //insert the control bar and return it to be reused\n            insert_controlbar_video: function (element, controlbarid, preview, resource) {\n                return this.prepare_controlbar_audio(element, controlbarid, preview, resource);\n            },\n            //insert the control bar and return it to be reused\n            insert_controlbar_audio: function (element, controlbarid, preview, resource) {\n                var controlbar = this.prepare_controlbar(element, controlbarid, preview, resource, 'audio');\n                return controlbar;\n            },\n\n            //insert the control bar and return it to be reused\n            prepare_controlbar: function (element, controlbarid, preview, resource, mediatype) {\n                var ip = this.fetch_instanceprops();\n                var skin_style = ip.config.media_skin_style;\n\n                var recorder_class = 'poodll_mediarecorder_audio';\n                var size_class = 'poodll_mediarecorder_size_auto';\n\n                var status = this.fetch_status_bar('push');\n                var controls = '<div class=\"poodll_mediarecorderholder_push '\n                    + recorder_class + '\" id=\"holder_' + controlbarid + '\">';\n\n                controls += '<div class=\"poodll_mediarecorderbox_push\" id=\"' + controlbarid + '\">';\n                controls += this.devsettings.fetch_dialogue_box();\n                controls += ip.downloaddialog.fetch_dialogue_box();\n                controls += ip.errordialog.fetch_dialogue_box();\n                controls += '<div class=\"style-holder ' + skin_style + '\">';\n                controls += preview,\n                    controls += '<div class=\"settingsicon\" id=\"settingsicon_' + controlbarid + '\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>';\n                controls += '<canvas id=\"' + controlbarid + '_playcanvas\" class=\"poodll_mediarecorder_playcanvas_push\" width=\"180\" height=\"50\"></canvas>';\n                controls += '<span id=\"' + controlbarid + '_caption\" class=\"poodll_mediarecorder_caption_push\"></span>';\n\n                //removing bgus buttons from html is better. The bogus items will send events(do_play_stop). Thf jquery object refering to them is enough for bogus to work\n                //controls += '<span id=\"' + controlbarid + '_bogusstartbutton\" class=\"poodll_mediarecorder_bogusstartbutton_push\"></span>';\n                //controls += '<span id=\"' + controlbarid + '_bogusstopbutton\" class=\"poodll_mediarecorder_bogusstopbutton_push\"></span>';\n\n                /*\n                controls +=  '<button type=\"button\" class=\"poodll_mediarecorder_button_push poodll_start-recording_push\">' + this.ss['startlabel']  + '</button>';\n                controls +=  '<button type=\"button\" class=\"poodll_mediarecorder_button_push poodll_test-recording_push\">' + this.ss['testlabel']  +  '</button>';\n                controls += '<button type=\"button\" class=\"poodll_mediarecorder_button_push poodll_stop-recording_push\">' +  this.ss['stoplabel']  +  '</button>';\n                */\n\n                controls += status,\n                    controls += '</div></div></div>';\n                $(element).prepend(controls);\n                //<i class=\"fa fa-stop\" aria-hidden=\"true\"></i>\n                var controlbar = {\n                    settingsdialog: $('#' + controlbarid + ' .poodll_dialogue_box_settings'),\n                    downloaddialog: $('#' + controlbarid + ' .poodll_dialogue_box_download'),\n                    errorsdialog: $('#' + controlbarid + ' .poodll_dialogue_box_errors'),\n                    settingsicon: $('#' + controlbarid + ' .settingsicon'),\n                    status: $('#' + controlbarid + ' .poodll_status_push'),\n                    preview: $('#' + controlbarid + ' .poodll_preview_push'),\n                    bigbutton: $('#' + controlbarid + '.poodll_mediarecorderbox_push'),\n                    playcanvas: $('#' + controlbarid + '_playcanvas'),\n                    thecaption: $('#' + controlbarid + '_caption'),\n                    themicicon: $('#' + controlbarid + '_micicon'),\n                    //These start and stop buttons are bogus. poodll_mediarecorder goes looking for them.\n                    //But we never use them here.\n                    stopbutton: $('#' + controlbarid + ' .poodll_mediarecorder_bogusstopbutton_push'),\n                    startbutton: $('#' + controlbarid + ' .poodll_mediarecorder_bogusstartbutton_push')\n                };\n                //settings and error and download dialogs\n                //settings is on 'this' because it is shown from skkn events, but errors are from pmr stuff\n                ip.downloaddialog.set_dialogue_box(controlbar.downloaddialog);\n                ip.errordialog.set_dialogue_box(controlbar.errorsdialog);\n                this.devsettings.set_dialogue_box(controlbar.settingsdialog);\n\n                return controlbar;\n            }, //end of fetch_control_bar_push\n\n\n            register_controlbar_events_video: function (onMediaSuccess, controlbarid) {\n                return this.register_controlbar_events_audio(onMediaSuccess, controlbarid);\n            },\n\n            register_controlbar_events_audio: function (onMediaSuccess, controlbarid) {\n\n                var self = this;\n                var pmr = this.pmr;\n                var ip = this.fetch_instanceprops();\n\n                //init recording anim\n                ip.config.recanim = 'hwave_mic';\n                var recanim = hwave_mic.clone();\n                self.therecanim = recanim;\n                recanim.init(ip.audioanalyser, ip.controlbar.playcanvas.get(0));\n\n                //set visual mode\n                this.set_visual_mode('startbuttonready');\n\n                ip.controlbar.bigbutton.click(function (e) {\n                    log.debug(e.target);\n                    //we do not want the dialog and other things to trigger events here\n                    //just the caption and the button itself\n                    var clickable = false;\n                    if (e.target === self ||\n                        $(e.target).hasClass('style-holder') ||\n                        $(e.target).hasClass('poodll_mediarecorderbox_push') ||\n                        $(e.target).hasClass('poodll_mediarecorder_caption_push') ||\n                        $(e.target).hasClass('poodll_mediarecorder_playcanvas_push')) {\n                        clickable = true;\n                    }\n                    if (!clickable) {\n                        return;\n                    }\n\n                    switch (self.buttonmode) {\n                        case 'startbuttonready':\n\n                            //send a message to alert of new status\n                            //publish recording stopped event\n                            var messageObject = {};\n                            messageObject.type = \"recorderstatus\";\n                            messageObject.status = 'startbuttonrecording';\n                            ip.config.hermes.postMessage(messageObject);\n\n                            //we will start recording here.\n                            //but its just a throwaway so we disable messages to API client and timer\n                            //ip.config.hermes.disable();\n                            ip.timer.disable();\n                            pmr.do_start_audio(ip, onMediaSuccess);\n                            self.set_visual_mode('startbuttonrecording');\n                            break;\n\n                        case 'startbuttonrecording':\n                            self.just_stop(controlbarid);\n                            break;\n\n                        case 'oldstartbuttonready':\n                            //we start real recording here.\n                            // so we enable messages to API client and timer\n                            var countingdown = function () {\n                                var currenttime = new Date().getTime();\n                                var currentcount = currenttime - starttime;\n                                if (currentcount > finalcount) {\n                                    ip.timer.enable();\n                                    pmr.do_start_audio(ip, onMediaSuccess);\n                                } else {\n                                    var newcount = false;\n                                    if (previouscount < 0 && currentcount > 0) {\n                                        newcount = finalcount / 1000;\n                                    } else if (previouscount < 1000 && currentcount > 1000) {\n                                        newcount = finalcount / 1000 - 1;\n                                    } else if (previouscount < 2000 && currentcount > 2000) {\n                                        newcount = finalcount / 1000 - 2;\n                                    }\n                                    if (newcount) {\n                                        var messageObject = {};\n                                        messageObject.type = \"countdownstatus\";\n                                        messageObject.status = newcount;\n                                        ip.config.hermes.postMessage(messageObject);\n                                        //ip.controlbar.thecaption.text('--- ' + newcount +'  ---');\n                                    }\n                                    previouscount = currentcount;\n                                    setTimeout(countingdown, 100);\n                                }\n                            };\n                            ip.config.hermes.enable();\n                            self.set_visual_mode('startbuttoncountdown');\n                            var starttime = new Date().getTime();\n                            var finalcount = 3000;\n                            var previouscount = -1;\n                            setTimeout(countingdown, 100);\n                            break;\n\n                        //there is no stop button ... just for consistency and testing\n                        case 'stopbutton':\n                            self.stop_and_upload();\n                    }\n\n                });\n\n                ip.controlbar.settingsicon.click(function (e) {\n                    log.debug(\"we no proapagato\");\n                    // Do not pass this event on\n                    e.stopPropagation();\n                    //handle click properly\n                    if (!self.uploaded) {\n                        self.devsettings.open();\n                    } else {\n                        ip.downloaddialog.open();\n                    }\n                });\n\n                window.onbeforeunload = function () {\n                    //no need to do anything here\n                    // self.enable_button(ip.controlbar.startbutton);\n\n                };\n            }, //end of register_control_bar_events_push\n\n            just_stop: function () {\n                var pmr = this.pmr;\n                var ip = this.fetch_instanceprops();\n                var recanim = this.therecanim;\n                if (ip.mediaRecorder) {\n                    //stop recording\n                    pmr.do_stop_audio(ip);\n                }\n                //wave animation\n                recanim.clear();\n                ip.config.hermes.enable();\n                this.set_visual_mode('startbuttonready');\n\n            },\n\n            stop_and_upload: function (controlbarid) {\n                var self = this;\n                var pmr = this.pmr;\n                var ip = this.fetch_instanceprops();\n                var recanim = self.therecanim;\n\n                //stop recording\n                pmr.do_stop_audio(ip);\n\n                //wave animation\n                recanim.clear();\n\n\n                //timer and status bar\n                ip.timer.stop();\n                self.update_status(controlbarid);\n\n                //call upload right away\n                //but we have to do it this lame deferred way because some mediastreamrecorders return a single\n                //blob shortly after we stop. We init like that too, to make sure we do not truncate a users recording\n                //if the mini blobs did not arrive\n                var doDeferredUpload = function () {\n                    if (ip.blobs && ip.blobs.length > 0) {\n                        pmr.do_save_audio(ip);\n                        ip.uploaded = true;\n                        //  self.disable_button(ip.controlbar.startbutton);\n                    } else {\n                        setTimeout(doDeferredUpload, 200);\n                    }\n                }\n                setTimeout(doDeferredUpload, 200);\n\n                //set visuals\n                self.set_visual_mode('uploading');\n            },\n\n            enable_button: function (button) {\n                $(button).attr('disabled', false);\n                $(button).removeClass('pmr_disabled');\n            },\n            disable_button: function (button) {\n                $(button).attr('disabled', true);\n                $(button).addClass('pmr_disabled');\n            },\n\n        };//end of returned object\n    });//total end\n"],"file":"poodll_pushmediaskin.min.js"}