{"version":3,"sources":["../src/dlg_devicesettings.js"],"names":["define","$","log","dialog","debug","dlg","pmr","instanceprops","dlgbox","mediatype","init","clone","setHeader","config","extend","fetch_dialogue_box","set_dialogue_box","set_media_type","open","self","ip","navigator","mediaDevices","enumerateDevices","then","devices","audiodevices","videodevices","forEach","device","kind","push","audioselect","makeSelect","videoselect","content","setContent","registerEvents","onclose","resetVideoUserInterface","catch","e","preview","controlbar","pause","mediaRecorder","stop","find","change","useraudiodeviceid","value","uservideodeviceid","constraints","fetch_video_constraints","tidy_old_stream","controlbarid","getUserMedia","stream","restream_preview_video_player","err","devicetype","length","label","userdeviceid","dlg_dropdown","selected","deviceId"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log', 'filter_poodll/dlg_poodll'], function ($, log, dialog) {\r\n\r\n    log.debug('Device settings dialog: initialising');\r\n\r\n\r\n    return {\r\n        dlg: null,\r\n        pmr: null,\r\n        instanceprops: null,\r\n        dlgbox: null,\r\n        mediatype: null,\r\n\r\n        init: function (pmr, instanceprops) {\r\n            this.dlg = dialog.clone();\r\n            this.dlg.setHeader('settings');\r\n            this.pmr = pmr;\r\n            this.instanceprops = instanceprops;\r\n            this.mediatype = instanceprops.config.mediatype;\r\n        },\r\n        //for making multiple instances\r\n        clone: function () {\r\n            return $.extend(true, {}, this);\r\n        },\r\n\r\n        fetch_dialogue_box: function () {\r\n            //this returns html that will be set to the DOM\r\n            return this.dlg.fetch_dialogue_box('settings');\r\n        },\r\n        set_dialogue_box: function (dlgbox) {\r\n            //this is the jquery object that is the dlgbox in the DOM\r\n            this.dlgbox = dlgbox;\r\n            this.dlg.set_dialogue_box(dlgbox);\r\n\r\n        },\r\n        set_media_type: function (mediatype) {\r\n            //used by screen recorder skin to overide default media type in order to not show video\r\n            this.mediatype = mediatype;\r\n\r\n        },\r\n        open: function () {\r\n            var self = this;\r\n            var ip = this.instanceprops;\r\n            // fetch the audio and video devices\r\n            navigator.mediaDevices.enumerateDevices()\r\n                .then(function (devices) {\r\n                    var audiodevices = [];\r\n                    var videodevices = [];\r\n\r\n                    devices.forEach(function (device) {\r\n                        switch (device.kind) {\r\n                            case 'audioinput':\r\n                                audiodevices.push(device);\r\n                                break;\r\n                            case 'videoinput':\r\n                                videodevices.push(device);\r\n                                break;\r\n                        }\r\n                    });\r\n                    //make select boxes of devices\r\n                    var audioselect = '<div class=\"devicesettings_select\"><span class=\"devicesettings_select_label\">Audio: </span>' + self.makeSelect(audiodevices, 'audio') + '</div>';\r\n                    var videoselect = '<div class=\"devicesettings_select\"><span class=\"devicesettings_select_label\">Video: </span>' + self.makeSelect(videodevices, 'video') + '</div>';\r\n                    var content = '<div class=\"filter_poodll_mediadevices\">';\r\n\r\n                    if (self.mediatype == 'video') {\r\n                        content += audioselect + '<br>' + videoselect;\r\n                    } else {\r\n                        content += audioselect;\r\n                    }\r\n                    content += '</div>';\r\n                    //set the html to the dialog and DOM\r\n                    self.dlg.setContent(content);\r\n                    //register events for the select boxes\r\n                    self.registerEvents();\r\n\r\n                    if (self.mediatype == 'video') {\r\n                        self.dlg.onclose = function () {\r\n                            self.resetVideoUserInterface();\r\n                        };\r\n                    }\r\n\r\n                    //open the dialog\r\n                    self.dlg.open();\r\n                }).catch(function (e) {\r\n                log.debug(e);\r\n            });\r\n        },\r\n\r\n        registerEvents: function () {\r\n            var self = this;\r\n            var ip = this.instanceprops;\r\n            var preview = ip.controlbar.preview[0];\r\n\r\n\r\n            if (preview) {\r\n                preview.pause();\r\n            }\r\n            if (ip.mediaRecorder) {\r\n                ip.mediaRecorder.stop();\r\n            }\r\n\r\n            this.dlgbox.find('.select_settings_audio').change(function () {\r\n                self.instanceprops.useraudiodeviceid = this.value;\r\n            });\r\n\r\n            this.dlgbox.find('.select_settings_video').change(function () {\r\n                self.instanceprops.uservideodeviceid = this.value;\r\n\r\n                //This kind of worked but actually it was problematic in android\r\n                //and even on desktop because we reset the video when it was hidden\r\n                //we moved it to the onclose event\r\n                //self.resetUserInterface();\t\t\r\n            });\r\n        },\r\n\r\n        resetVideoUserInterface: function () {\r\n\r\n            //set up refs to use in inline functions and keep it brief\r\n            var ip = this.instanceprops;\r\n            var preview = ip.controlbar.preview[0];\r\n            var pmr = this.pmr;\r\n            //fetch video constraints\r\n            var constraints = pmr.fetch_video_constraints(ip);\r\n\r\n            //We always tidy up old streams before calling getUserMedia\r\n            //if we do not do this, we can get issues of the front or back camera being sticky\r\n            //but it causes a visible flicker and also an audio/video sync issue.\r\n            //so we removed the same call from poodll_mediarecorder.js doStartAudio\r\n            //but left it here\r\n            pmr.tidy_old_stream(ip.controlbarid);\r\n\r\n            //get a new mediastream based on those constraints and update PMR accordingly\r\n            navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\r\n\r\n                //stop any playing tracks of the current stream\t\r\n                pmr.restream_preview_video_player(ip.controlbarid, stream)\r\n\r\n\r\n            }).catch(function (err) {\r\n                log.debug('location 4567');\r\n                log.debug(err);\r\n            });\r\n\r\n        },\r\n\r\n        makeSelect: function (devices, devicetype) {\r\n            //if no devices we are not ready\r\n            //must replace with lang string\r\n            if (devices.length == 1 && devices[0].label == '') {\r\n                return '<div>No devices available yet.</div>';\r\n            }\r\n            //get selected useraudiodevice and videodevice (if any)\r\n            switch (devicetype) {\r\n                case 'audio':\r\n                    var userdeviceid = this.instanceprops.useraudiodeviceid;\r\n                    break;\r\n                case 'video':\r\n                    var userdeviceid = this.instanceprops.uservideodeviceid;\r\n            }\r\n\r\n            //build dropdown from device list\r\n            var dlg_dropdown = '<select class=\"select_settings_' + devicetype + '\">';\r\n            devices.forEach(function (device) {\r\n                var selected = '';\r\n                if (userdeviceid == device.deviceId) {\r\n                    selected = 'selected';\r\n                }\r\n                dlg_dropdown += '<option value=\"' + device.deviceId + '\" ' + ' ' + selected + '>' + device.label + '</option>';\r\n            });\r\n            dlg_dropdown += '</select>';\r\n            //return dropdown\r\n            return dlg_dropdown;\r\n        }\r\n    }\r\n\r\n});"],"file":"dlg_devicesettings.min.js"}