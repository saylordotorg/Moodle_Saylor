{"version":3,"file":"poodll_basemediaskin.min.js","sources":["../src/poodll_basemediaskin.js"],"sourcesContent":["/* jshint ignore:start */\ndefine(['jquery','core/log', 'filter_poodll/utils_amd', 'filter_poodll/dlg_devicesettings', 'filter_poodll/anim_progress_bar', 'filter_poodll/upskin_bar'],\n    function ($, log, utils, settings, anim_progress_bar, upskin_bar) {\n\n        \"use strict\"; // jshint ;_;\n\n        log.debug('PoodLL Base Skin: initialising');\n\n        return {\n\n            instanceprops: null,\n            pmr: null,\n            uploaded: false,\n            devsettings: null,\n\n            //for making multiple instances\n            clone: function () {\n                return $.extend(true, {}, this);\n            },\n\n            init: function (ip, pmr) {\n                this.instanceprops = ip;\n                this.pmr = pmr;\n                this.devsettings = settings.clone();\n                this.devsettings.init(pmr, ip);\n            },\n\n\n            fetch_instanceprops: function () {\n                return this.instanceprops;\n            },\n\n\n            onUploadSuccess: function (controlbarid) {\n                $('#' + controlbarid + ' > .poodll_save-recording').hide();\n                // $('#' + controlbarid  + '_messages').hide();\n                $('#' + controlbarid + ' > .poodll_savedsuccessfully').show();\n            },\n\n            onUploadFailure: function (controlbarid) {\n                return;\n            },\n\n            fetch_status_bar: function (skin) {\n                var status = '<div class=\"poodll_status_' + skin + '\" width=\"100%\" height=\"50\">00:00:00</div>';\n                return status;\n            },\n\n            fetch_preview_audio: function (skin) {\n                var preview = '<audio class=\"poodll_preview_' + skin + '\"  playsinline muted style=\"display: none;\" controls></audio>';\n                return preview;\n            },\n            fetch_preview_video: function (skin) {\n                var preview = '<video class=\"poodll_preview_' + skin + '\" playsinline muted ></video>';\n                return preview;\n            },\n            fetch_resource_audio: function (skin) {\n                var resourceplayer = '<audio class=\"poodll_resourceplayer_' + skin + '\" style=\"display: none;\" ></audio>';\n                return resourceplayer;\n            },\n            fetch_resource_video: function (skin) {\n                var resourceplayer = '<video class=\"poodll_resourceplayer_' + skin + '\" style=\"display: none;\" playsinline=\"playsinline\"></video>';\n                return resourceplayer;\n            },\n            fetch_uploader_skin: function (controlbarid, element) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                var upskin = upskin_bar.clone();\n                upskin.init(ip.config, element, ip.controlbar.progresscanvas, ip.controlbar.timer);\n                return upskin;\n            },\n\n            onMediaError: function (e) {\n                console.error('media error', e);\n            },\n\n            onMediaSuccess_video: function (controlbarid) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                //clear messages\n                ip.uploader.Output('');\n\n                //set visuals\n                this.set_visual_mode('recordmode', controlbarid);\n                ip.controlbar.preview.attr('src', null);\n\n                //timer and status bar\n                ip.timer.reset();\n                ip.timer.start();\n                this.update_status(controlbarid);\n            },\n\n            onMediaSuccess_audio: function (controlbarid) {\n                var ip = this.fetch_instanceprops(controlbarid);\n\n                //clear messages\n                ip.uploader.Output('');\n\n                //set visuals\n                this.set_visual_mode('recordmode', controlbarid);\n\n                //timer and status bar\n                ip.timer.reset();\n                ip.timer.start();\n                this.update_status(controlbarid);\n\n            },\n\n            handle_timer_update: function (controlbarid) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                ip.controlbar.status.html(ip.timer.fetch_display_time());\n                if (ip.timer.seconds == 0 && ip.timer.initseconds > 0) {\n                    ip.controlbar.stopbutton.click();\n                }\n            },\n\n            update_status: function (controlbarid) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                ip.controlbar.status.html(ip.timer.fetch_display_time());\n            },\n\n            //set visuals for different states (ie recording or playing)\n            set_visual_mode: function (mode, controlbarid) {\n                var self = this;\n                var ip = this.fetch_instanceprops(controlbarid);\n\n                switch (mode) {\n\n                    case 'recordmode':\n                        ip.controlbar.progress.hide();\n                        self.disable_button(ip.controlbar.startbutton);\n                        self.disable_button(ip.controlbar.playbutton);\n                        ip.controlbar.resumebutton.hide();\n                        self.enable_button(ip.controlbar.stopbutton);\n                        self.disable_button(ip.controlbar.savebutton);\n                        ip.controlbar.pausebutton.show();\n                        self.enable_button(ip.controlbar.pausebutton);\n\n                        ip.controlbar.preview.addClass('poodll_recording');\n                        ip.controlbar.status.addClass('poodll_recording');\n                        if (ip.config.mediatype == 'audio') {\n                            ip.controlbar.preview.hide();\n                        }\n                        ip.controlbar.status.show();\n                        break;\n\n                    case 'playingmode':\n                        self.disable_button(ip.controlbar.playbutton);\n                        self.enable_button(ip.controlbar.stopbutton);\n                        self.disable_button(ip.controlbar.startbutton);\n                        self.disable_button(ip.controlbar.savebutton);\n                        ip.controlbar.progresscanvas.show();\n                        break;\n\n                    case 'previewmode':\n                        self.enable_button(ip.controlbar.playbutton);\n                        self.disable_button(ip.controlbar.pausebutton);\n                        self.disable_button(ip.controlbar.stopbutton);\n                        if (!self.uploaded) {\n                            self.enable_button(ip.controlbar.startbutton);\n                            self.enable_button(ip.controlbar.savebutton);\n                        }\n                        ip.controlbar.resumebutton.hide();\n                        ip.controlbar.pausebutton.show();\n                        ip.controlbar.preview.removeClass('poodll_recording');\n                        ip.controlbar.status.removeClass('poodll_recording');\n                        ip.controlbar.timer.html('00:00:00');\n                        ip.controlbar.progress.show();\n                        ip.controlbar.progresscanvas.hide();\n                        ip.controlbar.status.hide();\n                        break;\n\n                    case 'pausedmode':\n                        self.enable_button(ip.controlbar.resumebutton);\n                        self.enable_button(ip.controlbar.savebutton);\n                        ip.controlbar.preview.removeClass('poodll_recording');\n                        ip.controlbar.status.removeClass('poodll_recording');\n\n                        break;\n\n\n                    case 'uploadingmode':\n\n                        self.disable_button(ip.controlbar.startbutton);\n                        ip.controlbar.progresscanvas.show();\n\n                        break;\n                }\n\n            },\n\n            //insert the control bar and return it to be reused\n            insert_controlbar_video: function (element, controlbarid, preview, resource) {\n                var controlbar = this.prepare_controlbar(element, controlbarid, preview, resource, 'video');\n                return controlbar;\n            },\n            //insert the control bar and return it to be reused\n            insert_controlbar_audio: function (element, controlbarid, preview, resource) {\n                var controlbar = this.prepare_controlbar(element, controlbarid, preview, resource, 'audio');\n                return controlbar;\n            },\n\n            //insert the control bar and return it to be reused\n            prepare_controlbar: function (element, controlbarid, preview, resource, mediatype) {\n                var ip = this.fetch_instanceprops(controlbarid);\n                var skin_style = ip.config.media_skin_style;\n\n                var recorder_class = mediatype == 'video' ? 'poodll_mediarecorder_video' : 'poodll_mediarecorder_audio';\n\n                var size_class = 'poodll_mediarecorder_size_auto';\n                switch (ip.config.size) {\n                    case 'small':\n                        size_class = 'poodll_mediarecorder_size_small';\n                        break;\n                    case 'big':\n                        size_class = 'poodll_mediarecorder_size_big';\n                        break;\n                    case 'auto':\n                        size_class = 'poodll_mediarecorder_size_auto';\n                }\n\n                var ss = this.pmr.fetch_strings();\n                var hideshowupload = ip.showupload ? 'inline-block' : 'none';\n                var controls = '<div class=\"poodll_mediarecorderholder_standard ' + recorder_class + ' ' + size_class + '\" id=\"holder_' + controlbarid + '\">';\n                controls += '<div class=\"poodll_mediarecorderbox_standard\" id=\"' + controlbarid + '\">';\n                controls += this.devsettings.fetch_dialogue_box();\n                controls += ip.downloaddialog.fetch_dialogue_box();\n                controls += ip.errordialog.fetch_dialogue_box();\n                controls += '<div class=\"style-holder ' + skin_style + '\">';\n                var status = this.fetch_status_bar('standard');\n                controls += status;\n                controls += '<div class=\"hp_slide\" id=\"slide_' + controlbarid + '\">';\n                controls += '<div class=\"hp_timer\"></div>';\n                controls += '<canvas class=\"hp_range\"></canvas>';\n                controls += '</div>';\n                controls += preview,\n                    controls += '<div class=\"settingsicon\" id=\"settingsicon_' + controlbarid + '\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>';\n                controls += '<button type=\"button\" class=\"poodll_mediarecorder_button_standard poodll_start-recording_standard\">' + ss['recui_record'] + '</button>';\n                controls += '<button type=\"button\" class=\"poodll_mediarecorder_button_standard poodll_stop-recording_standard pmr_disabled\" disabled>' + ss['recui_stop'] + '</button>';\n                controls += '<button type=\"button\" class=\"poodll_mediarecorder_button_standard poodll_pause-recording_standard pmr_disabled\" disabled>' + ss['recui_pause'] + '</button>';\n                controls += ' <button type=\"button\" class=\"poodll_mediarecorder_button_standard poodll_resume-recording_standard pmr_disabled\" style=\"display: none;\" disabled>' + ss['recui_continue'] + '</button>';\n                controls += ' <button type=\"button\" class=\"poodll_mediarecorder_button_standard poodll_play-recording_standard pmr_disabled\" disabled>' + ss['recui_play'] + '</button>';\n                controls += '<button type=\"button\" class=\"poodll_save-recording_standard pmr_disabled\" style=\"display: ' + hideshowupload + ';\" disabled>' + ss['recui_save'] + '</button>';\n                controls += '</div>';\n                controls += '</div>';\n                controls += '</div>';\n\n                $(element).prepend(controls);\n\n                var controlbar = {\n                    settingsdialog: $('#' + controlbarid + ' .poodll_dialogue_box_settings'),\n                    downloaddialog: $('#' + controlbarid + ' .poodll_dialogue_box_download'),\n                    errorsdialog: $('#' + controlbarid + ' .poodll_dialogue_box_errors'),\n                    settingsicon: $('#' + controlbarid + ' .settingsicon'),\n                    progresscanvas: $('#' + controlbarid + ' .hp_range'),\n                    progress: $('#' + controlbarid + ' .hp_slide'),\n                    timer: $('#' + controlbarid + ' .hp_timer'),\n                    status: $('#' + controlbarid + '  .poodll_status_standard'),\n                    preview: $('#' + controlbarid + '  .poodll_preview_standard'),\n                    startbutton: $('#' + controlbarid + '  .poodll_start-recording_standard'),\n                    stopbutton: $('#' + controlbarid + '  .poodll_stop-recording_standard'),\n                    pausebutton: $('#' + controlbarid + '  .poodll_pause-recording_standard'),\n                    resumebutton: $('#' + controlbarid + '  .poodll_resume-recording_standard'),\n                    playbutton: $('#' + controlbarid + '  .poodll_play-recording_standard'),\n                    savebutton: $('#' + controlbarid + '  .poodll_save-recording_standard')\n                };\n                //settings and error dialogs\n                //They use the same dialog and just fill it with different stuff\n                //settings is on 'this' because it is shown from skin events, but errors are from pmr stuff\n                ip.downloaddialog.set_dialogue_box(controlbar.downloaddialog);\n                ip.errordialog.set_dialogue_box(controlbar.errorsdialog);\n                this.devsettings.set_dialogue_box(controlbar.settingsdialog);\n\n                return controlbar;\n            }, //end of fetch_control_bar_standard\n\n\n            register_controlbar_events_video: function (onMediaSuccess, controlbarid) {\n                return this.register_controlbar_events_audio(onMediaSuccess, controlbarid);\n            },\n\n            register_controlbar_events_audio: function (onMediaSuccess, controlbarid) {\n                var self = this;\n                var pmr = this.pmr;\n                var ip = this.fetch_instanceprops(controlbarid);\n\n                //init linear progress\n                var hprogress = anim_progress_bar.clone();\n                hprogress.init(ip.controlbar.progresscanvas);\n\n\n                ip.controlbar.settingsicon.click(function () {\n                    if (!self.uploaded) {\n                        self.devsettings.open();\n                    } else {\n                        ip.downloaddialog.open();\n                    }\n                });\n\n                ip.controlbar.startbutton.click(function () {\n                    pmr.do_start_audio(ip, onMediaSuccess);\n                });\n\n                ip.controlbar.stopbutton.click(function () {\n\n                    var preview = ip.controlbar.preview;\n                    if (preview && preview.get(0)) {\n                        preview.get(0).pause();\n                    }\n\n                    pmr.do_stop_audio(ip);\n\n                    //timer and status bar\n                    ip.timer.stop();\n                    ip.timer.reset();\n                    self.update_status(controlbarid);\n                    //stop progress\n                    hprogress.stop();\n\n                    //do visuals\n                    self.set_visual_mode('previewmode', controlbarid);\n\n\n                });\n\n                ip.controlbar.pausebutton.click(function () {\n                    this.disabled = true;\n                    $(this).hide();\n                    ip.controlbar.resumebutton.show();\n                    pmr.do_pause_audio(ip);\n\n                    //timer and status bar\n                    ip.timer.pause();\n                    self.update_status(controlbarid);\n\n                    //do visuals\n                    self.set_visual_mode('pausedmode', controlbarid);\n                });\n\n                ip.controlbar.resumebutton.click(function () {\n\n                    pmr.do_resume_audio(ip);\n\n                    //timer and status bar\n                    ip.timer.resume();\n                    self.update_status(controlbarid);\n\n                    //do visuals\n                    self.set_visual_mode('recordmode', controlbarid);\n                });\n\n                ip.controlbar.playbutton.click(function () {\n\n                    var preview = ip.controlbar.preview.get(0);\n                    pmr.do_play_audio(ip, preview);\n\n                    ip.controlbar.preview.on('timeupdate', function () {\n                        if (!this.paused) {\n                            var currentTime = this.currentTime;\n                            ip.controlbar.timer.html(ip.timer.fetch_display_time(currentTime));\n                        }\n                    });\n\n                    //do visuals\n                    self.set_visual_mode('playingmode', controlbarid);\n\n                    //start animation\n                    hprogress.clear();\n                    hprogress.fetchCurrent = function () {\n                        var ct = ip.controlbar.preview.prop('currentTime');\n                        var duration = ip.controlbar.preview.prop('duration');\n                        if (!isFinite(duration)) {\n                            duration = ip.timer.finalseconds;\n                        }\n                        return ct / duration;\n                    };\n                    hprogress.start();\n\n                });\n\n                ip.controlbar.savebutton.click(function () {\n                    self.disable_button(this);\n                    if (ip.blobs && ip.blobs.length > 0) {\n                        pmr.do_save_audio(ip);\n                        self.uploaded = true;\n\n                        //do visuals\n                        self.set_visual_mode('uploadingmode', controlbarid);\n\n                    } else {\n                        ip.uploader.Output(M.util.get_string('recui_nothingtosaveerror', 'filter_poodll'));\n                    }//end of if self.blobs\t\t\n                    //probably not necessary  ... but getting odd ajax errors occasionally\n                    return false;\n                });//end of save recording\n\n                window.onbeforeunload = function () {\n                    self.enable_button(ip.controlbar.startbutton);\n                    var preview = ip.controlbar.preview;\n                    if (preview && preview.get(0)) {\n                        preview.get(0).pause();\n                    }\n                };\n            }, //end of register_control_bar_events_standard\n\n            enable_button: function (button) {\n                $(button).attr('disabled', false);\n                $(button).removeClass('pmr_disabled');\n            },\n            disable_button: function (button) {\n                $(button).attr('disabled', true);\n                $(button).addClass('pmr_disabled');\n            }\n\n        };//end of returned object\n    });//total end\n"],"names":["define","$","log","utils","settings","anim_progress_bar","upskin_bar","debug","instanceprops","pmr","uploaded","devsettings","clone","extend","this","init","ip","fetch_instanceprops","onUploadSuccess","controlbarid","hide","show","onUploadFailure","fetch_status_bar","skin","fetch_preview_audio","fetch_preview_video","fetch_resource_audio","fetch_resource_video","fetch_uploader_skin","element","upskin","config","controlbar","progresscanvas","timer","onMediaError","e","console","error","onMediaSuccess_video","uploader","Output","set_visual_mode","preview","attr","reset","start","update_status","onMediaSuccess_audio","handle_timer_update","status","html","fetch_display_time","seconds","initseconds","stopbutton","click","mode","progress","disable_button","startbutton","playbutton","resumebutton","enable_button","savebutton","pausebutton","addClass","mediatype","removeClass","insert_controlbar_video","resource","prepare_controlbar","insert_controlbar_audio","skin_style","media_skin_style","recorder_class","size_class","size","ss","fetch_strings","hideshowupload","showupload","controls","fetch_dialogue_box","downloaddialog","errordialog","prepend","settingsdialog","errorsdialog","settingsicon","set_dialogue_box","register_controlbar_events_video","onMediaSuccess","register_controlbar_events_audio","self","hprogress","open","do_start_audio","get","pause","do_stop_audio","stop","disabled","do_pause_audio","do_resume_audio","resume","do_play_audio","on","paused","currentTime","clear","fetchCurrent","ct","prop","duration","isFinite","finalseconds","blobs","length","do_save_audio","M","util","get_string","window","onbeforeunload","button"],"mappings":"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"}