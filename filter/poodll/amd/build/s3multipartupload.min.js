define(["jquery","core/log"],(function($,log){return log.debug("Filter PoodLL: s3multipartupload initialising"),{PART_SIZE:10485760,SERVER_LOC:"?",completed:!1,file:null,fileInfo:null,sendBackData:null,uploadXHR:[],partURLs:[],byterate:[],lastUploadedSize:[],lastUploadedTime:[],loaded:[],total:[],init:function(file){this.completed=!1,this.file=file,this.fileInfo={name:this.file.name,type:this.file.type,size:this.file.size,lastModifiedDate:this.file.lastModifiedDate},this.sendBackData=null,this.uploadXHR=[],this.byterate=[],this.lastUploadedSize=[],this.lastUploadedTime=[],this.loaded=[],this.total=[]},createMultipartUpload:function(){var xhr=new XMLHttpRequest,that=this;xhr.onreadystatechange=function(e){if(4===this.readyState)if(200==xhr.status){var payload=xhr.responseText,payloadobject=JSON.parse(payload);if(payloadobject){if(payloadobject.returnCode>0){var messageObject={};return messageObject.id=that.config.id,messageObject.type="error",messageObject.code=payloadobject.returnCode,messageObject.message=payloadobject.returnMessage,void that.config.hermes.postMessage(messageObject)}that.partURLs=payloadobject.partURLs,that.config.allowedURL=payloadobject.allowedURL,that.config.posturl=payloadobject.postURL,that.config.filename=payloadobject.filename,that.config.s3filename=payloadobject.s3filename,that.config.s3root=payloadobject.s3root,that.config.cloudfilename=payloadobject.shortfilename,that.config.cloudroot=payloadobject.shortroot,that.sendAll()}else log.debug("error:"+payloadobject.message)}else log.debug("Not 200 response:"+xhr.status)};var parts=this.prepareParts(),xhrparams="wstoken="+this.config.wstoken+"&wsfunction=local_cpapi_fetch_multipartupload_details&moodlewsrestformat="+this.config.moodlewsrestformat+"&mediatype="+this.config.mediatype+"&parts="+parts,serverurl=M.cfg.wwwroot+"/webservice/rest/server.php";xhr.open("POST",serverurl,!0),xhr.setRequestHeader("Cache-Control","no-cache"),xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),xhr.send(xhrparams)},doMultipartUpload:function(){var xhr=new XMLHttpRequest,that=this;xhr.onreadystatechange=function(e){if(4===this.readyState)if(200==xhr.status){var payload=xhr.responseText,payloadobject=JSON.parse(payload);if(payloadobject){if(payloadobject.returnCode>0){var messageObject={};return messageObject.id=that.config.id,messageObject.type="error",messageObject.code=payloadobject.returnCode,messageObject.message=payloadobject.returnMessage,void that.config.hermes.postMessage(messageObject)}that.partURLs=payloadobject.partURLs,that.config.allowedURL=payloadobject.allowedURL,that.config.posturl=payloadobject.postURL,that.config.filename=payloadobject.filename,that.config.s3filename=payloadobject.s3filename,that.config.s3root=payloadobject.s3root,that.config.cloudfilename=payloadobject.shortfilename,that.config.cloudroot=payloadobject.shortroot,that.sendAll()}else log.debug("error:"+payloadobject.message)}else log.debug("Not 200 response:"+xhr.status)};var parts=this.prepareParts(),xhrparams="wstoken="+this.config.wstoken+"&wsfunction=local_cpapi_fetch_multipartupload_urls&moodlewsrestformat="+this.config.moodlewsrestformat+"&mediatype="+this.config.mediatype+"&parts="+parts,serverurl=M.cfg.wwwroot+"/webservice/rest/server.php";xhr.open("POST",serverurl,!0),xhr.setRequestHeader("Cache-Control","no-cache"),xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),xhr.send(xhrparams)},start:function(){this.createMultipartUpload()},prepareParts:function(){var blobs=this.blobs=[];this.partURLs=[];for(var end,blob,start=0,parts=[],partNum=0;start<this.file.size;)end=Math.min(start+this.PART_SIZE,this.file.size),filePart=this.file.slice(start,end),filePart.size>0&&blobs.push(filePart),start=this.PART_SIZE*++partNum;for(var i=0;i<blobs.length;i++)blob=blobs[i],parts[i]={},parts[i].partNumber=i+1,parts[i].contentLength=blob.size;return parts},sendAll:function(){for(var blobs=this.blobs,length=blobs.length,i=0;i<length;i++)this.sendToS3(partURLs[i],blobs[i],i)},sendToS3:function(theurl,blob,index){var self=this,size=blob.size,request=self.uploadXHR[index]=new XMLHttpRequest;request.onreadystatechange=function(){if(4===request.readyState){if(200!==request.status)return self.updateProgress(),void self.onS3UploadError(request);self.updateProgress()}},request.upload.onprogress=function(e){if(e.lengthComputable){if(self.total[index]=size,self.loaded[index]=e.loaded,self.lastUploadedTime[index]){var time_diff=((new Date).getTime()-self.lastUploadedTime[index])/1e3;if(time_diff>.005){var byterate=(self.loaded[index]-self.lastUploadedSize[index])/time_diff;self.byterate[index]=byterate,self.lastUploadedTime[index]=(new Date).getTime(),self.lastUploadedSize[index]=self.loaded[index]}}else self.byterate[index]=0,self.lastUploadedTime[index]=(new Date).getTime(),self.lastUploadedSize[index]=self.loaded[index];0!=index&&self.total[0]!=self.loaded[0]||self.updateProgress()}},request.open("PUT",theurl,!0),request.send(blob)},cancel:function(){for(var i=0;i<this.uploadXHR.length;++i)this.uploadXHR[i].abort();$.post(this.SERVER_LOC,{command:"abort",sendBackData:this.sendBackData}).done((function(data){}))},completeMultipartUpload:function(){var self=this;this.completed||(this.completed=!0,$.post(self.SERVER_LOC,{command:"complete",sendBackData:self.sendBackData}).done((function(data){self.onUploadCompleted(data)})).fail((function(jqXHR,textStatus,errorThrown){self.onServerError("complete",jqXHR,textStatus,errorThrown)})))},updateProgress:function(){for(var total=0,loaded=0,byterate=0,complete=1,i=0;i<this.total.length;++i)loaded+=+this.loaded[i]||0,total+=this.total[i],this.loaded[i]!=this.total[i]&&(byterate+=+this.byterate[i]||0,complete=0);complete&&this.completeMultipartUpload(),total=this.fileInfo.size,this.onProgressChanged(loaded,total,byterate)},onServerError:function(command,jqXHR,textStatus,errorThrown){},onS3UploadError:function(xhr){},onProgressChanged:function(uploadedSize,totalSize,bitrate){},onUploadCompleted:function(serverData){},onPrepareCompleted:function(){}}}));

//# sourceMappingURL=s3multipartupload.min.js.map