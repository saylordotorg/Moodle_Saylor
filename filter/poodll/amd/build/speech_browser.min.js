define(["jquery","core/log"],(function($,log){return log.debug("speech_browser: initialising"),{recognition:null,recognizing:!1,ignore_onend:!1,final_transcript:"",start_timestamp:0,lang:"en-US",clone:function(){return $.extend(!0,{},this)},will_work_ok:function(opts){return void 0===navigator.brave&&(!(navigator.userAgent.toLowerCase().indexOf("edg/")>-1)&&("webkitSpeechRecognition"in window||"SpeechRecognition"in window))},init:function(opts){var SpeechRecognition=SpeechRecognition||webkitSpeechRecognition;this.recognition=new SpeechRecognition,this.recognition.continuous=!0,this.recognition.interimResults=!0,this.lang=opts.language?opts.language:"en-US",this.register_events()},set_grammar:function(grammar){var SpeechGrammarList=SpeechGrammarList||webkitSpeechGrammarList;if(SpeechGrammarList){var speechRecognitionList=new SpeechGrammarList;speechRecognitionList.addFromString(grammar,1),this.recognition.grammars=speechRecognitionList}},start:function(stream){this.recognizing||(this.recognizing=!0,this.final_transcript="",this.recognition.lang=this.lang,this.recognition.start(),this.ignore_onend=!1,this.start_timestamp=Date.now())},stop:function(){this.recognizing=!1,this.recognition.stop()},register_events:function(){var recognition=this.recognition,that=this;recognition.onstart=function(){that.recognizing=!0},recognition.onerror=function(event){"no-speech"==event.error&&(log.debug("info_no_speech"),that.ignore_onend=!0),"audio-capture"==event.error&&(log.debug("info_no_microphone"),that.ignore_onend=!0),"not-allowed"==event.error&&(event.timeStamp-that.start_timestamp<100?log.debug("info_blocked"):log.debug("info_denied"),that.ignore_onend=!0)},recognition.onend=function(){0!=that.recognizing&&(that.ignore_onend?that.recognizing=!1:recognition.start())},recognition.onresult=function(event){for(var interim_transcript="",i=event.resultIndex;i<event.results.length;++i)event.results[i].isFinal?(that.final_transcript+=event.results[i][0].transcript,that.onfinalspeechcapture(that.final_transcript,JSON.stringify(event.results)),that.final_transcript=""):(interim_transcript+=event.results[i][0].transcript,that.oninterimspeechcapture(interim_transcript))}},onfinalspeechcapture:function(speechtext,speechresults){log.debug(speechtext)},oninterimspeechcapture:function(speechtext){}}}));

//# sourceMappingURL=speech_browser.min.js.map