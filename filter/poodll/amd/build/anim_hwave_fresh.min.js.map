{"version":3,"sources":["../src/anim_hwave_fresh.js"],"names":["define","$","log","debug","analyser","cvs","cvsctx","drawparams","wavColor","barColor","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","font","textAlign","textBaseline","clone","extend","init","getContext","clear","setDrawParam","paramkey","paramvalue","clearRect","width","height","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","start","core","fftSize","bufferLength","dataArray","Uint8Array","cwidth","cheight","canvasCtx","that","draw","requestAnimationFrame","theinterval","getByteTimeDomainData","x","i","v","y"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\r\ndefine(['jquery', 'core/log'], function ($, log) {\r\n\r\n    \"use strict\"; // jshint ;_;\r\n\r\n    log.debug('anim_horizontal_wave: initialising');\r\n\r\n    return {\r\n\r\n        analyser: null,\r\n        cvs: null,\r\n        cvsctx: null,\r\n        drawparams: {\r\n            wavColor: '#6DDC6F',\r\n            barColor: '#ad2323',\r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: 0,\r\n            shadowBlur: 10,\r\n            shadowColor: '#fff',\r\n            font: '18px Arial',\r\n            textAlign: \"center\",\r\n            textBaseline: 'middle'\r\n        },\r\n\r\n\r\n        //for making multiple instances\r\n        clone: function () {\r\n            return $.extend(true, {}, this);\r\n        },\r\n\r\n\r\n        //init\r\n        init: function (analyser, cvs) {\r\n            this.cvs = cvs;\r\n            this.cvsctx = cvs.getContext(\"2d\");\r\n            this.analyser = analyser;\r\n            this.clear();\r\n        },\r\n\r\n        setDrawParam: function (paramkey, paramvalue) {\r\n            this.drawparams[paramkey] = paramvalue;\r\n        },\r\n\r\n        clear: function () {\r\n            this.cvsctx.clearRect(0, 0, this.cvs.width, this.cvs.height);\r\n            this.cvsctx.lineWidth = 2;\r\n            this.cvsctx.strokeStyle = this.drawparams.wavColor;\r\n            this.cvsctx.beginPath();\r\n            this.cvsctx.moveTo(0, this.cvs.height / 2);\r\n            this.cvsctx.lineTo(this.cvs.width, this.cvs.height / 2);\r\n            this.cvsctx.stroke();\r\n        },\r\n\r\n        start: function () {\r\n            this.analyser.core.fftSize = 2048;\r\n            var bufferLength = this.analyser.core.fftSize;\r\n            var dataArray = new Uint8Array(bufferLength);\r\n            var cwidth = this.cvs.width;\r\n            var cheight = this.cvs.height;\r\n            var canvasCtx = this.cvsctx;\r\n            var analyser = this.analyser;\r\n            this.clear();\r\n            var that = this;\r\n\r\n            var draw = function () {\r\n\r\n                var drawVisual = requestAnimationFrame(draw);\r\n\r\n                //cancel out if the theinterval is null\r\n                if (!analyser.theinterval) {\r\n                    return;\r\n                }\r\n\r\n                analyser.core.getByteTimeDomainData(dataArray);\r\n\r\n                //filling is rubbish, we just clear it\r\n                //canvasCtx.fillStyle = 'rgb(200, 200, 200)';\r\n                //canvasCtx.fillRect(0, 0, cwidth, cheight);\r\n                canvasCtx.clearRect(0, 0, cwidth, cheight);\r\n\r\n                canvasCtx.lineWidth = 2;\r\n                canvasCtx.strokeStyle = that.drawparams.wavColor;\r\n\r\n                canvasCtx.beginPath();\r\n\r\n                var sliceWidth = cwidth * 1.0 / bufferLength;\r\n                var x = 0;\r\n\r\n                for (var i = 0; i < bufferLength; i++) {\r\n\r\n                    var v = dataArray[i] / 128.0;\r\n                    var y = v * cheight / 2;\r\n\r\n                    if (i === 0) {\r\n                        canvasCtx.moveTo(x, y);\r\n                    } else {\r\n                        canvasCtx.lineTo(x, y);\r\n                    }\r\n\r\n                    x += sliceWidth;\r\n                }\r\n\r\n                canvasCtx.lineTo(cwidth, cheight / 2);\r\n                canvasCtx.stroke();\r\n            };\r\n\r\n            draw();\r\n        }//END OF START\r\n    };//end of returned object\r\n});//total end\r\n"],"file":"anim_hwave_fresh.min.js"}