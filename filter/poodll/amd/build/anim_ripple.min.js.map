{"version":3,"sources":["../src/anim_ripple.js"],"names":["define","$","log","debug","analyser","cvs","cvsctx","drawparams","rippleColor","lineWidth","clone","extend","init","getContext","setDrawParam","paramkey","paramvalue","clear","clearRect","width","height","start","core","fftSize","bufferLength","dataArray","Uint8Array","cwidth","cheight","canvasCtx","that","draw","requestAnimationFrame","theinterval","getByteTimeDomainData","setLineDash","strokeStyle","beginPath","stepsize","i","v","arc","Math","PI","stroke"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log'], function ($, log) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('anim_ripple: initialising');\n\n    return {\n\n        analyser: null,\n        cvs: null,\n        cvsctx: null,\n        drawparams: {\n            rippleColor: '#0',\n            lineWidth: 2\n        },\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        //init\n        init: function (analyser, cvs) {\n            this.cvs = cvs;\n            this.cvsctx = cvs.getContext(\"2d\");\n            this.analyser = analyser;\n        },\n\n        setDrawParam: function (paramkey, paramvalue) {\n            this.drawparams[paramkey] = paramvalue;\n        },\n\n        clear: function () {\n            this.cvsctx.clearRect(0, 0, this.cvs.width, this.cvs.height);\n        },\n\n        start: function () {\n            this.analyser.core.fftSize = 2048;\n            var bufferLength = this.analyser.core.fftSize;\n            var dataArray = new Uint8Array(bufferLength);\n            var cwidth = this.cvs.width;\n            var cheight = this.cvs.height;\n            var canvasCtx = this.cvsctx;\n            var analyser = this.analyser;\n            this.clear();\n            var that = this;\n\n            var draw = function () {\n\n                var drawVisual = requestAnimationFrame(draw);\n\n                //cancel out if the theinterval is null\n                if (!analyser.theinterval) {\n                    return;\n                }\n\n                analyser.core.getByteTimeDomainData(dataArray);\n\n                //this fills grey, but its lame lets just leave it clear\n                //canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n                canvasCtx.clearRect(0, 0, cwidth, cheight);\n\n                canvasCtx.lineWidth = that.drawparams.lineWidth;\n                canvasCtx.setLineDash([15, 5]);\n                canvasCtx.strokeStyle = that.drawparams.rippleColor;\n\n                canvasCtx.beginPath();\n\n                var recwidth = 100;\n                if (bufferLength > 0) {\n                    var stepsize = 1 + bufferLength / 5;\n                }\n\n\n                for (var i = 0; i < bufferLength; i = i + stepsize) {\n                    var v = dataArray[i] / 128.0;\n                    var y = v * (cheight - recwidth) / 4;\n                    var radius = recwidth / 2 + y\n                    canvasCtx.arc(cwidth / 2, cheight / 2, radius, 0, 2 * Math.PI);\n                }\n                canvasCtx.stroke();\n            };\n\n            draw();\n        }//END OF START\n    };//end of returned object\n});//total end\n"],"file":"anim_ripple.min.js"}