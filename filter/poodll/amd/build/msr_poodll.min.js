define(["jquery","core/log","filter_poodll/utils_amd","filter_poodll/msr_stereoaudio","filter_poodll/msr_plain"],(function($,log,utils,stereoaudiorecorder,plainrecorder){return log.debug("PoodLL MS Recorder: initialising"),{sampleRate:48e3,mimeType:"audio/wav",audioChannels:1,bufferSize:2048,therecorder:null,audioctx:null,audioanalyser:null,clone:function(){return $.extend(!0,{},this)},init:function(mediaStream,audioctx,audioanalyser,mediaType,encoder){if(this.audioctx=audioctx,this.audioanalyser=audioanalyser,"auto"!=encoder)if("stereoaudio"===encoder)this.therecorder="audio"==mediaType?stereoaudiorecorder:plainrecorder;else this.therecorder=plainrecorder;else utils.has_mediarecorder()?(this.therecorder=plainrecorder,log.debug("using plain recorder")):"audio"==mediaType&&(this.therecorder=stereoaudiorecorder,log.debug("using stereo recorder"));this.therecorder&&this.therecorder.init(this,mediaStream,audioctx,mediaType)},start:function(timeinterval){this.therecorder.start(timeinterval),this.audioanalyser.start()},stop:function(){this.therecorder.stop(),this.audioanalyser.clear()},pause:function(){this.therecorder.pause(),this.audioanalyser.clear()},resume:function(){this.therecorder.resume(),this.audioanalyser.start()},ondataavailable:function(blob){log.debug("ondataavailable:"+blob)},onStartedDrawingNonBlankFrames:function(){log.debug("started drawing non blank frames:")},onstop:function(error){log.debug(error)}}}));

//# sourceMappingURL=msr_poodll.min.js.map