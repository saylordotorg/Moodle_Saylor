{"version":3,"sources":["../src/poodll_qrscanner.js"],"names":["define","$","log","debug","GridSampler","checkAndNudgePoints","image","points","width","qrcode","height","nudged","offset","length","x","Math","floor","y","sampleGrid3","dimension","transform","bits","BitMatrix","Array","max","iValue","transformPoints1","bit","set_Renamed","aioobe","sampleGridx","p1ToX","p1ToY","p2ToX","p2ToY","p3ToX","p3ToY","p4ToX","p4ToY","p1FromX","p1FromY","p2FromX","p2FromY","p3FromX","p3FromY","p4FromX","p4FromY","PerspectiveTransform","quadrilateralToQuadrilateral","ECB","count","dataCodewords","__defineGetter__","ECBlocks","ecCodewordsPerBlock","ecBlocks1","ecBlocks2","ecBlocks","NumBlocks","total","i","getECBlocks","Version","versionNumber","alignmentPatternCenters","ecBlocks3","ecBlocks4","ecCodewords","ECCodewordsPerBlock","ecbArray","ecBlock","Count","DataCodewords","totalCodewords","buildFunctionPattern","DimensionForVersion","bitMatrix","setRegion","getECBlocksForLevel","ecLevel","ordinal","VERSION_DECODE_INFO","VERSIONS","getVersionForNumber","getProvisionalVersionForDimension","iae","decodeVersionInformation","versionBits","bestDifference","bestVersion","targetVersion","bitsDifference","FormatInformation","numBitsDiffering","a11","a21","a31","a12","a22","a32","a13","a23","a33","denominator","transformPoints2","xValues","yValues","n","buildAdjoint","times","other","x0","y0","x1","y1","x2","y2","x3","y3","x0p","y0p","x1p","y1p","x2p","y2p","x3p","y3p","qToS","quadrilateralToSquare","sToQ","squareToQuadrilateral","dy2","dy3","dx1","dx2","dx3","dy1","DetectorResult","Detector","resultPointCallback","sizeOfBlackWhiteBlackRun","fromX","fromY","toX","toY","steep","abs","temp","dx","dy","error","ystep","xstep","state","realX","realY","diffX","diffY","sqrt","diffX2","diffY2","sizeOfBlackWhiteBlackRunBothWays","result","scale","otherToX","otherToY","calculateModuleSizeOneWay","pattern","otherPattern","moduleSizeEst1","X","Y","moduleSizeEst2","isNaN","calculateModuleSize","topLeft","topRight","bottomLeft","distance","pattern1","pattern2","xDiff","yDiff","computeDimension","moduleSize","tltrCentersDimension","round","tlblCentersDimension","findAlignmentInRegion","overallEstModuleSize","estAlignmentX","estAlignmentY","allowanceFactor","allowance","alignmentAreaLeftX","alignmentAreaRightX","min","alignmentAreaTopY","alignmentAreaBottomY","alignmentFinder","AlignmentPatternFinder","find","createTransform","alignmentPattern","dimMinusThree","bottomRightX","bottomRightY","sourceBottomRightX","sourceBottomRightY","sampleGrid","processFinderPatternInfo","info","TopLeft","TopRight","BottomLeft","provisionalVersion","modulesBetweenFPCenters","AlignmentPatternCenters","correctionToTopLeft","detect","FinderPatternFinder","findFinderPattern","FORMAT_INFO_DECODE_LOOKUP","BITS_SET_IN_HALF_BYTE","formatInfo","errorCorrectionLevel","ErrorCorrectionLevel","forBits","dataMask","GetHashCode","Equals","o","a","b","URShift","decodeFormatInformation","maskedFormatInfo","doDecodeFormatInformation","bestFormatInfo","decodeInfo","targetInfo","name","ordinal_Renamed_Field","FOR_BITS","L","M","Q","H","rowSize","get_Renamed","flip","clear","left","top","right","bottom","DataBlock","numDataCodewords","codewords","getDataBlocks","rawCodewords","version","TotalCodewords","totalBlocks","ecBlockArray","numResultBlocks","j","numBlockCodewords","shorterBlocksTotalCodewords","longerBlocksStartAt","numCodewords","shorterBlocksNumDataCodewords","rawCodewordsOffset","iOffset","BitMatrixParser","Dimension","parsedVersion","parsedFormatInfo","copyBit","readFormatInformation","formatInfoBits","readVersion","ijMin","readCodewords","DataMask","forReference","unmaskBitMatrix","functionPattern","readingUp","resultOffset","currentByte","bitsRead","col","reference","DATA_MASKS","isMasked","GF256Poly","field","coefficients","coefficientsLength","firstNonZero","Zero","ci","getCoefficient","degree","evaluateAt","size","GF256","addOrSubtract","result2","multiply","smallerCoefficients","largerCoefficients","sumDiff","lengthDiff","multiply1","aCoefficients","aLength","bCoefficients","bLength","product","aCoeff","multiply2","scalar","multiplyByMonomial","coefficient","divide","quotient","remainder","denominatorLeadingTerm","Degree","inverseDenominatorLeadingTerm","inverse","degreeDifference","term","iterationQuotient","buildMonomial","primitive","expTable","logTable","at0","zero","at1","one","exp","QR_CODE_FIELD","DATA_MATRIX_FIELD","Decoder","rsDecoder","decode","received","twoS","poly","syndromeCoefficients","dataMatrix","noError","evalu","syndrome","sigmaOmega","runEuclideanAlgorithm","sigma","omega","errorLocations","findErrorLocations","errorMagnitudes","findErrorMagnitudes","position","R","rLast","r","sLast","One","s","tLast","t","rLastLast","sLastLast","tLastLast","q","dltInverse","degreeDiff","sigmaTildeAtZero","errorLocator","numErrors","e","errorEvaluator","xiInverse","correctErrors","codewordBytes","codewordsInts","numECCodewords","rse","parser","dataBlocks","totalBytes","NumDataCodewords","resultBytes","dataBlock","Codewords","reader","QRCodeDataBlockReader","VersionNumber","Bits","imagedata","video","qrCodeSymbol","maxImgSize","interval","sizeOfDataLengthInfo","callback","startWebCam","videoId","document","getElementById","pPromise","play","then","catch","navigator","getUserMedia","audio","facingMode","webCamSuccess","webCamError","stopWebCam","pause","stream","localstream","srcObject","controls","volume","stopScan","startScan","canvasid","thevideo","canvas_qr2","createElement","id","qrcontext2","getContext","videoWidth","videoHeight","gUM","doScan","setTimeout","drawImage","thecanvas","canvas_qr","context","getImageData","process","isUrl","test","decode_url","escaped","escape","ret","decodeURIComponent","decode_utf8","ctx","start","Date","getTime","grayScaleToBitmap","grayscale","point","data","putImageData","detector","qRCodeMatrix","Height","Width","DataByte","str","String","fromCharCode","end","getPixel","p","binarize","th","gray","getMiddleBrightnessPerArea","numSqrtArea","areaWidth","areaHeight","minmax","i2","ay","ax","target","middle","i3","grayScale","sqrtNumArea","buff","ArrayBuffer","bitmap","Uint8Array","number","INTEGER_MATH_SHIFT","CENTER_QUORUM","orderBestPatterns","patterns","crossProductZ","pointA","pointB","pointC","bX","bY","zeroOneDistance","oneTwoDistance","zeroTwoDistance","FinderPattern","posX","posY","estimatedModuleSize","incrementCount","aboutEquals","moduleSizeDiff","FinderPatternInfo","patternCenters","possibleCenters","hasSkipped","crossCheckStateCount","foundPatternCross","stateCount","totalModuleSize","maxVariance","centerFromEnd","crossCheckVertical","startI","centerJ","maxCount","originalStateCountTotal","maxI","CrossCheckStateCount","NaN","stateCountTotal","crossCheckHorizontal","startJ","centerI","maxJ","handlePossibleCenter","found","index","center","push","foundPossibleResultPoint","selectBestPatterns","startSize","square","centerValue","EstimatedModuleSize","average","sort","center1","center2","dA","dB","stdDev","limit","splice","findRowSkip","firstConfirmedCenter","haveMultiplyConfirmedCenters","confirmedCount","totalDeviation","iSkip","done","currentState","confirmed","rowSkip","patternInfo","AlignmentPattern","startX","startY","iGen","blocks","numErrorCorrectionCode","blockPointer","bitPointer","dataLength","dataLengthMode","getNextBits","numBits","mask","mask1","mask3","bitsFirstBlock","bitsSecondBlock","bitsThirdBlock","NextMode","getDataLength","modeIndicator","getRomanAndFigureString","intData","strData","tableRomanAndFigure","firstLetter","secondLetter","getFigureString","get8bitByteArray","output","getKanjiString","unicodeString","lowerByte","higherByte","tempWord","shiftjisWord","parseECIValue","firstByte","secondByte","secondThirdBytes","MODE_NUMBER","MODE_ROMAN_AND_NUMBER","MODE_8BIT_BYTE","MODE_ECI","MODE_KANJI","mode","temp_sbyteArray3","temp_str","ta","charCodeAt","videoid","setCallback","canvas"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript library for the pairwork module.\n *\n * @package    filter\n * @subpackage poodll\n * @copyright  2017 Justin Hunt http://www.poodll.com\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/log'], function ($, log) {\n        \"use strict\";\n        log.debug('poodll_qrscanner is now loaded');\n\n\n///--- GRID.JS-------------------------------------------------\n        var GridSampler = {};\n\n        GridSampler.checkAndNudgePoints = function (image, points) {\n            var width = qrcode.width;\n            var height = qrcode.height;\n            // Check and nudge points from start until we see some that are OK:\n            var nudged = true;\n            for (var offset = 0; offset < points.length && nudged; offset += 2) {\n                var x = Math.floor(points[offset]);\n                var y = Math.floor(points[offset + 1]);\n                if (x < -1 || x > width || y < -1 || y > height) {\n                    throw \"Error.checkAndNudgePoints \";\n                }\n                nudged = false;\n                if (x == -1) {\n                    points[offset] = 0.0;\n                    nudged = true;\n                }\n                else if (x == width) {\n                    points[offset] = width - 1;\n                    nudged = true;\n                }\n                if (y == -1) {\n                    points[offset + 1] = 0.0;\n                    nudged = true;\n                }\n                else if (y == height) {\n                    points[offset + 1] = height - 1;\n                    nudged = true;\n                }\n            }\n            // Check and nudge points from end:\n            nudged = true;\n            for (var offset = points.length - 2; offset >= 0 && nudged; offset -= 2) {\n                var x = Math.floor(points[offset]);\n                var y = Math.floor(points[offset + 1]);\n                if (x < -1 || x > width || y < -1 || y > height) {\n                    throw \"Error.checkAndNudgePoints \";\n                }\n                nudged = false;\n                if (x == -1) {\n                    points[offset] = 0.0;\n                    nudged = true;\n                }\n                else if (x == width) {\n                    points[offset] = width - 1;\n                    nudged = true;\n                }\n                if (y == -1) {\n                    points[offset + 1] = 0.0;\n                    nudged = true;\n                }\n                else if (y == height) {\n                    points[offset + 1] = height - 1;\n                    nudged = true;\n                }\n            }\n        }\n\n\n        GridSampler.sampleGrid3 = function (image, dimension, transform) {\n            var bits = new BitMatrix(dimension);\n            var points = new Array(dimension << 1);\n            for (var y = 0; y < dimension; y++) {\n                var max = points.length;\n                var iValue = y + 0.5;\n                for (var x = 0; x < max; x += 2) {\n                    points[x] = (x >> 1) + 0.5;\n                    points[x + 1] = iValue;\n                }\n                transform.transformPoints1(points);\n                // Quick check to see if points transformed to something inside the image;\n                // sufficient to check the endpoints\n                GridSampler.checkAndNudgePoints(image, points);\n                try {\n                    for (var x = 0; x < max; x += 2) {\n                        //var xpoint = (Math.floor( points[x]) * 4) + (Math.floor( points[x + 1]) * qrcode.width * 4);\n                        var bit = image[Math.floor(points[x]) + qrcode.width * Math.floor(points[x + 1])];\n                        //qrcode.imagedata.data[xpoint] = bit?255:0;\n                        //qrcode.imagedata.data[xpoint+1] = bit?255:0;\n                        //qrcode.imagedata.data[xpoint+2] = 0;\n                        //qrcode.imagedata.data[xpoint+3] = 255;\n                        //bits[x >> 1][ y]=bit;\n                        if (bit)\n                            bits.set_Renamed(x >> 1, y);\n                    }\n                }\n                catch (aioobe) {\n                    // This feels wrong, but, sometimes if the finder patterns are misidentified, the resulting\n                    // transform gets \"twisted\" such that it maps a straight line of points to a set of points\n                    // whose endpoints are in bounds, but others are not. There is probably some mathematical\n                    // way to detect this about the transformation that I don't know yet.\n                    // This results in an ugly runtime exception despite our clever checks above -- can't have\n                    // that. We could check each point's coordinates but that feels duplicative. We settle for\n                    // catching and wrapping ArrayIndexOutOfBoundsException.\n                    throw \"Error.checkAndNudgePoints\";\n                }\n            }\n            return bits;\n        }\n\n        GridSampler.sampleGridx = function (image, dimension, p1ToX, p1ToY, p2ToX, p2ToY, p3ToX, p3ToY, p4ToX, p4ToY, p1FromX, p1FromY, p2FromX, p2FromY, p3FromX, p3FromY, p4FromX, p4FromY) {\n            var transform = PerspectiveTransform.quadrilateralToQuadrilateral(p1ToX, p1ToY, p2ToX, p2ToY, p3ToX, p3ToY, p4ToX, p4ToY, p1FromX, p1FromY, p2FromX, p2FromY, p3FromX, p3FromY, p4FromX, p4FromY);\n\n            return GridSampler.sampleGrid3(image, dimension, transform);\n        }\n\n///--- VERSION.JS-------------------------------------------------\n        function ECB(count, dataCodewords) {\n            this.count = count;\n            this.dataCodewords = dataCodewords;\n\n            this.__defineGetter__(\"Count\", function () {\n                return this.count;\n            });\n            this.__defineGetter__(\"DataCodewords\", function () {\n                return this.dataCodewords;\n            });\n        }\n\n        function ECBlocks(ecCodewordsPerBlock, ecBlocks1, ecBlocks2) {\n            this.ecCodewordsPerBlock = ecCodewordsPerBlock;\n            if (ecBlocks2)\n                this.ecBlocks = new Array(ecBlocks1, ecBlocks2);\n            else\n                this.ecBlocks = new Array(ecBlocks1);\n\n            this.__defineGetter__(\"ECCodewordsPerBlock\", function () {\n                return this.ecCodewordsPerBlock;\n            });\n\n            this.__defineGetter__(\"TotalECCodewords\", function () {\n                return this.ecCodewordsPerBlock * this.NumBlocks;\n            });\n\n            this.__defineGetter__(\"NumBlocks\", function () {\n                var total = 0;\n                for (var i = 0; i < this.ecBlocks.length; i++) {\n                    total += this.ecBlocks[i].length;\n                }\n                return total;\n            });\n\n            this.getECBlocks = function () {\n                return this.ecBlocks;\n            }\n        }\n\n        function Version(versionNumber, alignmentPatternCenters, ecBlocks1, ecBlocks2, ecBlocks3, ecBlocks4) {\n            this.versionNumber = versionNumber;\n            this.alignmentPatternCenters = alignmentPatternCenters;\n            this.ecBlocks = new Array(ecBlocks1, ecBlocks2, ecBlocks3, ecBlocks4);\n\n            var total = 0;\n            var ecCodewords = ecBlocks1.ECCodewordsPerBlock;\n            var ecbArray = ecBlocks1.getECBlocks();\n            for (var i = 0; i < ecbArray.length; i++) {\n                var ecBlock = ecbArray[i];\n                total += ecBlock.Count * (ecBlock.DataCodewords + ecCodewords);\n            }\n            this.totalCodewords = total;\n\n            this.__defineGetter__(\"VersionNumber\", function () {\n                return this.versionNumber;\n            });\n\n            this.__defineGetter__(\"AlignmentPatternCenters\", function () {\n                return this.alignmentPatternCenters;\n            });\n            this.__defineGetter__(\"TotalCodewords\", function () {\n                return this.totalCodewords;\n            });\n            this.__defineGetter__(\"DimensionForVersion\", function () {\n                return 17 + 4 * this.versionNumber;\n            });\n\n            this.buildFunctionPattern = function () {\n                var dimension = this.DimensionForVersion;\n                var bitMatrix = new BitMatrix(dimension);\n\n                // Top left finder pattern + separator + format\n                bitMatrix.setRegion(0, 0, 9, 9);\n                // Top right finder pattern + separator + format\n                bitMatrix.setRegion(dimension - 8, 0, 8, 9);\n                // Bottom left finder pattern + separator + format\n                bitMatrix.setRegion(0, dimension - 8, 9, 8);\n\n                // Alignment patterns\n                var max = this.alignmentPatternCenters.length;\n                for (var x = 0; x < max; x++) {\n                    var i = this.alignmentPatternCenters[x] - 2;\n                    for (var y = 0; y < max; y++) {\n                        if ((x == 0 && (y == 0 || y == max - 1)) || (x == max - 1 && y == 0)) {\n                            // No alignment patterns near the three finder paterns\n                            continue;\n                        }\n                        bitMatrix.setRegion(this.alignmentPatternCenters[y] - 2, i, 5, 5);\n                    }\n                }\n\n                // Vertical timing pattern\n                bitMatrix.setRegion(6, 9, 1, dimension - 17);\n                // Horizontal timing pattern\n                bitMatrix.setRegion(9, 6, dimension - 17, 1);\n\n                if (this.versionNumber > 6) {\n                    // Version info, top right\n                    bitMatrix.setRegion(dimension - 11, 0, 3, 6);\n                    // Version info, bottom left\n                    bitMatrix.setRegion(0, dimension - 11, 6, 3);\n                }\n\n                return bitMatrix;\n            }\n            this.getECBlocksForLevel = function (ecLevel) {\n                return this.ecBlocks[ecLevel.ordinal()];\n            }\n        }\n\n        Version.VERSION_DECODE_INFO = new Array(0x07C94, 0x085BC, 0x09A99, 0x0A4D3, 0x0BBF6, 0x0C762, 0x0D847, 0x0E60D, 0x0F928, 0x10B78, 0x1145D, 0x12A17, 0x13532, 0x149A6, 0x15683, 0x168C9, 0x177EC, 0x18EC4, 0x191E1, 0x1AFAB, 0x1B08E, 0x1CC1A, 0x1D33F, 0x1ED75, 0x1F250, 0x209D5, 0x216F0, 0x228BA, 0x2379F, 0x24B0B, 0x2542E, 0x26A64, 0x27541, 0x28C69);\n\n        Version.VERSIONS = buildVersions();\n\n        Version.getVersionForNumber = function (versionNumber) {\n            if (versionNumber < 1 || versionNumber > 40) {\n                throw \"ArgumentException\";\n            }\n            return Version.VERSIONS[versionNumber - 1];\n        }\n\n        Version.getProvisionalVersionForDimension = function (dimension) {\n            if (dimension % 4 != 1) {\n                throw \"Error getProvisionalVersionForDimension\";\n            }\n            try {\n                return Version.getVersionForNumber((dimension - 17) >> 2);\n            }\n            catch (iae) {\n                throw \"Error getVersionForNumber\";\n            }\n        }\n\n        Version.decodeVersionInformation = function (versionBits) {\n            var bestDifference = 0xffffffff;\n            var bestVersion = 0;\n            for (var i = 0; i < Version.VERSION_DECODE_INFO.length; i++) {\n                var targetVersion = Version.VERSION_DECODE_INFO[i];\n                // Do the version info bits match exactly? done.\n                if (targetVersion == versionBits) {\n                    return this.getVersionForNumber(i + 7);\n                }\n                // Otherwise see if this is the closest to a real version info bit string\n                // we have seen so far\n                var bitsDifference = FormatInformation.numBitsDiffering(versionBits, targetVersion);\n                if (bitsDifference < bestDifference) {\n                    bestVersion = i + 7;\n                    bestDifference = bitsDifference;\n                }\n            }\n            // We can tolerate up to 3 bits of error since no two version info codewords will\n            // differ in less than 4 bits.\n            if (bestDifference <= 3) {\n                return this.getVersionForNumber(bestVersion);\n            }\n            // If we didn't find a close enough match, fail\n            return null;\n        }\n\n        function buildVersions() {\n            return new Array(new Version(1, new Array(), new ECBlocks(7, new ECB(1, 19)), new ECBlocks(10, new ECB(1, 16)), new ECBlocks(13, new ECB(1, 13)), new ECBlocks(17, new ECB(1, 9))),\n                new Version(2, new Array(6, 18), new ECBlocks(10, new ECB(1, 34)), new ECBlocks(16, new ECB(1, 28)), new ECBlocks(22, new ECB(1, 22)), new ECBlocks(28, new ECB(1, 16))),\n                new Version(3, new Array(6, 22), new ECBlocks(15, new ECB(1, 55)), new ECBlocks(26, new ECB(1, 44)), new ECBlocks(18, new ECB(2, 17)), new ECBlocks(22, new ECB(2, 13))),\n                new Version(4, new Array(6, 26), new ECBlocks(20, new ECB(1, 80)), new ECBlocks(18, new ECB(2, 32)), new ECBlocks(26, new ECB(2, 24)), new ECBlocks(16, new ECB(4, 9))),\n                new Version(5, new Array(6, 30), new ECBlocks(26, new ECB(1, 108)), new ECBlocks(24, new ECB(2, 43)), new ECBlocks(18, new ECB(2, 15), new ECB(2, 16)), new ECBlocks(22, new ECB(2, 11), new ECB(2, 12))),\n                new Version(6, new Array(6, 34), new ECBlocks(18, new ECB(2, 68)), new ECBlocks(16, new ECB(4, 27)), new ECBlocks(24, new ECB(4, 19)), new ECBlocks(28, new ECB(4, 15))),\n                new Version(7, new Array(6, 22, 38), new ECBlocks(20, new ECB(2, 78)), new ECBlocks(18, new ECB(4, 31)), new ECBlocks(18, new ECB(2, 14), new ECB(4, 15)), new ECBlocks(26, new ECB(4, 13), new ECB(1, 14))),\n                new Version(8, new Array(6, 24, 42), new ECBlocks(24, new ECB(2, 97)), new ECBlocks(22, new ECB(2, 38), new ECB(2, 39)), new ECBlocks(22, new ECB(4, 18), new ECB(2, 19)), new ECBlocks(26, new ECB(4, 14), new ECB(2, 15))),\n                new Version(9, new Array(6, 26, 46), new ECBlocks(30, new ECB(2, 116)), new ECBlocks(22, new ECB(3, 36), new ECB(2, 37)), new ECBlocks(20, new ECB(4, 16), new ECB(4, 17)), new ECBlocks(24, new ECB(4, 12), new ECB(4, 13))),\n                new Version(10, new Array(6, 28, 50), new ECBlocks(18, new ECB(2, 68), new ECB(2, 69)), new ECBlocks(26, new ECB(4, 43), new ECB(1, 44)), new ECBlocks(24, new ECB(6, 19), new ECB(2, 20)), new ECBlocks(28, new ECB(6, 15), new ECB(2, 16))),\n                new Version(11, new Array(6, 30, 54), new ECBlocks(20, new ECB(4, 81)), new ECBlocks(30, new ECB(1, 50), new ECB(4, 51)), new ECBlocks(28, new ECB(4, 22), new ECB(4, 23)), new ECBlocks(24, new ECB(3, 12), new ECB(8, 13))),\n                new Version(12, new Array(6, 32, 58), new ECBlocks(24, new ECB(2, 92), new ECB(2, 93)), new ECBlocks(22, new ECB(6, 36), new ECB(2, 37)), new ECBlocks(26, new ECB(4, 20), new ECB(6, 21)), new ECBlocks(28, new ECB(7, 14), new ECB(4, 15))),\n                new Version(13, new Array(6, 34, 62), new ECBlocks(26, new ECB(4, 107)), new ECBlocks(22, new ECB(8, 37), new ECB(1, 38)), new ECBlocks(24, new ECB(8, 20), new ECB(4, 21)), new ECBlocks(22, new ECB(12, 11), new ECB(4, 12))),\n                new Version(14, new Array(6, 26, 46, 66), new ECBlocks(30, new ECB(3, 115), new ECB(1, 116)), new ECBlocks(24, new ECB(4, 40), new ECB(5, 41)), new ECBlocks(20, new ECB(11, 16), new ECB(5, 17)), new ECBlocks(24, new ECB(11, 12), new ECB(5, 13))),\n                new Version(15, new Array(6, 26, 48, 70), new ECBlocks(22, new ECB(5, 87), new ECB(1, 88)), new ECBlocks(24, new ECB(5, 41), new ECB(5, 42)), new ECBlocks(30, new ECB(5, 24), new ECB(7, 25)), new ECBlocks(24, new ECB(11, 12), new ECB(7, 13))),\n                new Version(16, new Array(6, 26, 50, 74), new ECBlocks(24, new ECB(5, 98), new ECB(1, 99)), new ECBlocks(28, new ECB(7, 45), new ECB(3, 46)), new ECBlocks(24, new ECB(15, 19), new ECB(2, 20)), new ECBlocks(30, new ECB(3, 15), new ECB(13, 16))),\n                new Version(17, new Array(6, 30, 54, 78), new ECBlocks(28, new ECB(1, 107), new ECB(5, 108)), new ECBlocks(28, new ECB(10, 46), new ECB(1, 47)), new ECBlocks(28, new ECB(1, 22), new ECB(15, 23)), new ECBlocks(28, new ECB(2, 14), new ECB(17, 15))),\n                new Version(18, new Array(6, 30, 56, 82), new ECBlocks(30, new ECB(5, 120), new ECB(1, 121)), new ECBlocks(26, new ECB(9, 43), new ECB(4, 44)), new ECBlocks(28, new ECB(17, 22), new ECB(1, 23)), new ECBlocks(28, new ECB(2, 14), new ECB(19, 15))),\n                new Version(19, new Array(6, 30, 58, 86), new ECBlocks(28, new ECB(3, 113), new ECB(4, 114)), new ECBlocks(26, new ECB(3, 44), new ECB(11, 45)), new ECBlocks(26, new ECB(17, 21), new ECB(4, 22)), new ECBlocks(26, new ECB(9, 13), new ECB(16, 14))),\n                new Version(20, new Array(6, 34, 62, 90), new ECBlocks(28, new ECB(3, 107), new ECB(5, 108)), new ECBlocks(26, new ECB(3, 41), new ECB(13, 42)), new ECBlocks(30, new ECB(15, 24), new ECB(5, 25)), new ECBlocks(28, new ECB(15, 15), new ECB(10, 16))),\n                new Version(21, new Array(6, 28, 50, 72, 94), new ECBlocks(28, new ECB(4, 116), new ECB(4, 117)), new ECBlocks(26, new ECB(17, 42)), new ECBlocks(28, new ECB(17, 22), new ECB(6, 23)), new ECBlocks(30, new ECB(19, 16), new ECB(6, 17))),\n                new Version(22, new Array(6, 26, 50, 74, 98), new ECBlocks(28, new ECB(2, 111), new ECB(7, 112)), new ECBlocks(28, new ECB(17, 46)), new ECBlocks(30, new ECB(7, 24), new ECB(16, 25)), new ECBlocks(24, new ECB(34, 13))),\n                new Version(23, new Array(6, 30, 54, 74, 102), new ECBlocks(30, new ECB(4, 121), new ECB(5, 122)), new ECBlocks(28, new ECB(4, 47), new ECB(14, 48)), new ECBlocks(30, new ECB(11, 24), new ECB(14, 25)), new ECBlocks(30, new ECB(16, 15), new ECB(14, 16))),\n                new Version(24, new Array(6, 28, 54, 80, 106), new ECBlocks(30, new ECB(6, 117), new ECB(4, 118)), new ECBlocks(28, new ECB(6, 45), new ECB(14, 46)), new ECBlocks(30, new ECB(11, 24), new ECB(16, 25)), new ECBlocks(30, new ECB(30, 16), new ECB(2, 17))),\n                new Version(25, new Array(6, 32, 58, 84, 110), new ECBlocks(26, new ECB(8, 106), new ECB(4, 107)), new ECBlocks(28, new ECB(8, 47), new ECB(13, 48)), new ECBlocks(30, new ECB(7, 24), new ECB(22, 25)), new ECBlocks(30, new ECB(22, 15), new ECB(13, 16))),\n                new Version(26, new Array(6, 30, 58, 86, 114), new ECBlocks(28, new ECB(10, 114), new ECB(2, 115)), new ECBlocks(28, new ECB(19, 46), new ECB(4, 47)), new ECBlocks(28, new ECB(28, 22), new ECB(6, 23)), new ECBlocks(30, new ECB(33, 16), new ECB(4, 17))),\n                new Version(27, new Array(6, 34, 62, 90, 118), new ECBlocks(30, new ECB(8, 122), new ECB(4, 123)), new ECBlocks(28, new ECB(22, 45), new ECB(3, 46)), new ECBlocks(30, new ECB(8, 23), new ECB(26, 24)), new ECBlocks(30, new ECB(12, 15), new ECB(28, 16))),\n                new Version(28, new Array(6, 26, 50, 74, 98, 122), new ECBlocks(30, new ECB(3, 117), new ECB(10, 118)), new ECBlocks(28, new ECB(3, 45), new ECB(23, 46)), new ECBlocks(30, new ECB(4, 24), new ECB(31, 25)), new ECBlocks(30, new ECB(11, 15), new ECB(31, 16))),\n                new Version(29, new Array(6, 30, 54, 78, 102, 126), new ECBlocks(30, new ECB(7, 116), new ECB(7, 117)), new ECBlocks(28, new ECB(21, 45), new ECB(7, 46)), new ECBlocks(30, new ECB(1, 23), new ECB(37, 24)), new ECBlocks(30, new ECB(19, 15), new ECB(26, 16))),\n                new Version(30, new Array(6, 26, 52, 78, 104, 130), new ECBlocks(30, new ECB(5, 115), new ECB(10, 116)), new ECBlocks(28, new ECB(19, 47), new ECB(10, 48)), new ECBlocks(30, new ECB(15, 24), new ECB(25, 25)), new ECBlocks(30, new ECB(23, 15), new ECB(25, 16))),\n                new Version(31, new Array(6, 30, 56, 82, 108, 134), new ECBlocks(30, new ECB(13, 115), new ECB(3, 116)), new ECBlocks(28, new ECB(2, 46), new ECB(29, 47)), new ECBlocks(30, new ECB(42, 24), new ECB(1, 25)), new ECBlocks(30, new ECB(23, 15), new ECB(28, 16))),\n                new Version(32, new Array(6, 34, 60, 86, 112, 138), new ECBlocks(30, new ECB(17, 115)), new ECBlocks(28, new ECB(10, 46), new ECB(23, 47)), new ECBlocks(30, new ECB(10, 24), new ECB(35, 25)), new ECBlocks(30, new ECB(19, 15), new ECB(35, 16))),\n                new Version(33, new Array(6, 30, 58, 86, 114, 142), new ECBlocks(30, new ECB(17, 115), new ECB(1, 116)), new ECBlocks(28, new ECB(14, 46), new ECB(21, 47)), new ECBlocks(30, new ECB(29, 24), new ECB(19, 25)), new ECBlocks(30, new ECB(11, 15), new ECB(46, 16))),\n                new Version(34, new Array(6, 34, 62, 90, 118, 146), new ECBlocks(30, new ECB(13, 115), new ECB(6, 116)), new ECBlocks(28, new ECB(14, 46), new ECB(23, 47)), new ECBlocks(30, new ECB(44, 24), new ECB(7, 25)), new ECBlocks(30, new ECB(59, 16), new ECB(1, 17))),\n                new Version(35, new Array(6, 30, 54, 78, 102, 126, 150), new ECBlocks(30, new ECB(12, 121), new ECB(7, 122)), new ECBlocks(28, new ECB(12, 47), new ECB(26, 48)), new ECBlocks(30, new ECB(39, 24), new ECB(14, 25)), new ECBlocks(30, new ECB(22, 15), new ECB(41, 16))),\n                new Version(36, new Array(6, 24, 50, 76, 102, 128, 154), new ECBlocks(30, new ECB(6, 121), new ECB(14, 122)), new ECBlocks(28, new ECB(6, 47), new ECB(34, 48)), new ECBlocks(30, new ECB(46, 24), new ECB(10, 25)), new ECBlocks(30, new ECB(2, 15), new ECB(64, 16))),\n                new Version(37, new Array(6, 28, 54, 80, 106, 132, 158), new ECBlocks(30, new ECB(17, 122), new ECB(4, 123)), new ECBlocks(28, new ECB(29, 46), new ECB(14, 47)), new ECBlocks(30, new ECB(49, 24), new ECB(10, 25)), new ECBlocks(30, new ECB(24, 15), new ECB(46, 16))),\n                new Version(38, new Array(6, 32, 58, 84, 110, 136, 162), new ECBlocks(30, new ECB(4, 122), new ECB(18, 123)), new ECBlocks(28, new ECB(13, 46), new ECB(32, 47)), new ECBlocks(30, new ECB(48, 24), new ECB(14, 25)), new ECBlocks(30, new ECB(42, 15), new ECB(32, 16))),\n                new Version(39, new Array(6, 26, 54, 82, 110, 138, 166), new ECBlocks(30, new ECB(20, 117), new ECB(4, 118)), new ECBlocks(28, new ECB(40, 47), new ECB(7, 48)), new ECBlocks(30, new ECB(43, 24), new ECB(22, 25)), new ECBlocks(30, new ECB(10, 15), new ECB(67, 16))),\n                new Version(40, new Array(6, 30, 58, 86, 114, 142, 170), new ECBlocks(30, new ECB(19, 118), new ECB(6, 119)), new ECBlocks(28, new ECB(18, 47), new ECB(31, 48)), new ECBlocks(30, new ECB(34, 24), new ECB(34, 25)), new ECBlocks(30, new ECB(20, 15), new ECB(61, 16))));\n        }\n\n///--- DETECTOR.JS-------------------------------------------------\n\n        function PerspectiveTransform(a11, a21, a31, a12, a22, a32, a13, a23, a33) {\n            this.a11 = a11;\n            this.a12 = a12;\n            this.a13 = a13;\n            this.a21 = a21;\n            this.a22 = a22;\n            this.a23 = a23;\n            this.a31 = a31;\n            this.a32 = a32;\n            this.a33 = a33;\n            this.transformPoints1 = function (points) {\n                var max = points.length;\n                var a11 = this.a11;\n                var a12 = this.a12;\n                var a13 = this.a13;\n                var a21 = this.a21;\n                var a22 = this.a22;\n                var a23 = this.a23;\n                var a31 = this.a31;\n                var a32 = this.a32;\n                var a33 = this.a33;\n                for (var i = 0; i < max; i += 2) {\n                    var x = points[i];\n                    var y = points[i + 1];\n                    var denominator = a13 * x + a23 * y + a33;\n                    points[i] = (a11 * x + a21 * y + a31) / denominator;\n                    points[i + 1] = (a12 * x + a22 * y + a32) / denominator;\n                }\n            }\n            this.transformPoints2 = function (xValues, yValues) {\n                var n = xValues.length;\n                for (var i = 0; i < n; i++) {\n                    var x = xValues[i];\n                    var y = yValues[i];\n                    var denominator = this.a13 * x + this.a23 * y + this.a33;\n                    xValues[i] = (this.a11 * x + this.a21 * y + this.a31) / denominator;\n                    yValues[i] = (this.a12 * x + this.a22 * y + this.a32) / denominator;\n                }\n            }\n\n            this.buildAdjoint = function () {\n                // Adjoint is the transpose of the cofactor matrix:\n                return new PerspectiveTransform(this.a22 * this.a33 - this.a23 * this.a32, this.a23 * this.a31 - this.a21 * this.a33, this.a21 * this.a32 - this.a22 * this.a31, this.a13 * this.a32 - this.a12 * this.a33, this.a11 * this.a33 - this.a13 * this.a31, this.a12 * this.a31 - this.a11 * this.a32, this.a12 * this.a23 - this.a13 * this.a22, this.a13 * this.a21 - this.a11 * this.a23, this.a11 * this.a22 - this.a12 * this.a21);\n            }\n            this.times = function (other) {\n                return new PerspectiveTransform(this.a11 * other.a11 + this.a21 * other.a12 + this.a31 * other.a13, this.a11 * other.a21 + this.a21 * other.a22 + this.a31 * other.a23, this.a11 * other.a31 + this.a21 * other.a32 + this.a31 * other.a33, this.a12 * other.a11 + this.a22 * other.a12 + this.a32 * other.a13, this.a12 * other.a21 + this.a22 * other.a22 + this.a32 * other.a23, this.a12 * other.a31 + this.a22 * other.a32 + this.a32 * other.a33, this.a13 * other.a11 + this.a23 * other.a12 + this.a33 * other.a13, this.a13 * other.a21 + this.a23 * other.a22 + this.a33 * other.a23, this.a13 * other.a31 + this.a23 * other.a32 + this.a33 * other.a33);\n            }\n\n        }\n\n        PerspectiveTransform.quadrilateralToQuadrilateral = function (x0, y0, x1, y1, x2, y2, x3, y3, x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p) {\n\n            var qToS = this.quadrilateralToSquare(x0, y0, x1, y1, x2, y2, x3, y3);\n            var sToQ = this.squareToQuadrilateral(x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p);\n            return sToQ.times(qToS);\n        }\n\n        PerspectiveTransform.squareToQuadrilateral = function (x0, y0, x1, y1, x2, y2, x3, y3) {\n            var dy2 = y3 - y2;\n            var dy3 = y0 - y1 + y2 - y3;\n            if (dy2 == 0.0 && dy3 == 0.0) {\n                return new PerspectiveTransform(x1 - x0, x2 - x1, x0, y1 - y0, y2 - y1, y0, 0.0, 0.0, 1.0);\n            }\n            else {\n                var dx1 = x1 - x2;\n                var dx2 = x3 - x2;\n                var dx3 = x0 - x1 + x2 - x3;\n                var dy1 = y1 - y2;\n                var denominator = dx1 * dy2 - dx2 * dy1;\n                var a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n                var a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n                return new PerspectiveTransform(x1 - x0 + a13 * x1, x3 - x0 + a23 * x3, x0, y1 - y0 + a13 * y1, y3 - y0 + a23 * y3, y0, a13, a23, 1.0);\n            }\n        }\n\n        PerspectiveTransform.quadrilateralToSquare = function (x0, y0, x1, y1, x2, y2, x3, y3) {\n            // Here, the adjoint serves as the inverse:\n            return this.squareToQuadrilateral(x0, y0, x1, y1, x2, y2, x3, y3).buildAdjoint();\n        }\n\n        function DetectorResult(bits, points) {\n            this.bits = bits;\n            this.points = points;\n        }\n\n\n        function Detector(image) {\n            this.image = image;\n            this.resultPointCallback = null;\n\n            this.sizeOfBlackWhiteBlackRun = function (fromX, fromY, toX, toY) {\n                // Mild variant of Bresenham's algorithm;\n                // see http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\n                var steep = Math.abs(toY - fromY) > Math.abs(toX - fromX);\n                if (steep) {\n                    var temp = fromX;\n                    fromX = fromY;\n                    fromY = temp;\n                    temp = toX;\n                    toX = toY;\n                    toY = temp;\n                }\n\n                var dx = Math.abs(toX - fromX);\n                var dy = Math.abs(toY - fromY);\n                var error = -dx >> 1;\n                var ystep = fromY < toY ? 1 : -1;\n                var xstep = fromX < toX ? 1 : -1;\n                var state = 0; // In black pixels, looking for white, first or second time\n                for (var x = fromX, y = fromY; x != toX; x += xstep) {\n\n                    var realX = steep ? y : x;\n                    var realY = steep ? x : y;\n                    if (state == 1) {\n                        // In white pixels, looking for black\n                        if (this.image[realX + realY * qrcode.width]) {\n                            state++;\n                        }\n                    }\n                    else {\n                        if (!this.image[realX + realY * qrcode.width]) {\n                            state++;\n                        }\n                    }\n\n                    if (state == 3) {\n                        // Found black, white, black, and stumbled back onto white; done\n                        var diffX = x - fromX;\n                        var diffY = y - fromY;\n                        return Math.sqrt((diffX * diffX + diffY * diffY));\n                    }\n                    error += dy;\n                    if (error > 0) {\n                        if (y == toY) {\n                            break;\n                        }\n                        y += ystep;\n                        error -= dx;\n                    }\n                }\n                var diffX2 = toX - fromX;\n                var diffY2 = toY - fromY;\n                return Math.sqrt((diffX2 * diffX2 + diffY2 * diffY2));\n            }\n\n\n            this.sizeOfBlackWhiteBlackRunBothWays = function (fromX, fromY, toX, toY) {\n\n                var result = this.sizeOfBlackWhiteBlackRun(fromX, fromY, toX, toY);\n\n                // Now count other way -- don't run off image though of course\n                var scale = 1.0;\n                var otherToX = fromX - (toX - fromX);\n                if (otherToX < 0) {\n                    scale = fromX / (fromX - otherToX);\n                    otherToX = 0;\n                }\n                else if (otherToX >= qrcode.width) {\n                    scale = (qrcode.width - 1 - fromX) / (otherToX - fromX);\n                    otherToX = qrcode.width - 1;\n                }\n                var otherToY = Math.floor(fromY - (toY - fromY) * scale);\n\n                scale = 1.0;\n                if (otherToY < 0) {\n                    scale = fromY / (fromY - otherToY);\n                    otherToY = 0;\n                }\n                else if (otherToY >= qrcode.height) {\n                    scale = (qrcode.height - 1 - fromY) / (otherToY - fromY);\n                    otherToY = qrcode.height - 1;\n                }\n                otherToX = Math.floor(fromX + (otherToX - fromX) * scale);\n\n                result += this.sizeOfBlackWhiteBlackRun(fromX, fromY, otherToX, otherToY);\n                return result - 1.0; // -1 because we counted the middle pixel twice\n            }\n\n\n            this.calculateModuleSizeOneWay = function (pattern, otherPattern) {\n                var moduleSizeEst1 = this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(pattern.X), Math.floor(pattern.Y), Math.floor(otherPattern.X), Math.floor(otherPattern.Y));\n                var moduleSizeEst2 = this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(otherPattern.X), Math.floor(otherPattern.Y), Math.floor(pattern.X), Math.floor(pattern.Y));\n                if (isNaN(moduleSizeEst1)) {\n                    return moduleSizeEst2 / 7.0;\n                }\n                if (isNaN(moduleSizeEst2)) {\n                    return moduleSizeEst1 / 7.0;\n                }\n                // Average them, and divide by 7 since we've counted the width of 3 black modules,\n                // and 1 white and 1 black module on either side. Ergo, divide sum by 14.\n                return (moduleSizeEst1 + moduleSizeEst2) / 14.0;\n            }\n\n\n            this.calculateModuleSize = function (topLeft, topRight, bottomLeft) {\n                // Take the average\n                return (this.calculateModuleSizeOneWay(topLeft, topRight) + this.calculateModuleSizeOneWay(topLeft, bottomLeft)) / 2.0;\n            }\n\n            this.distance = function (pattern1, pattern2) {\n                var xDiff = pattern1.X - pattern2.X;\n                var yDiff = pattern1.Y - pattern2.Y;\n                return Math.sqrt((xDiff * xDiff + yDiff * yDiff));\n            }\n            this.computeDimension = function (topLeft, topRight, bottomLeft, moduleSize) {\n\n                var tltrCentersDimension = Math.round(this.distance(topLeft, topRight) / moduleSize);\n                var tlblCentersDimension = Math.round(this.distance(topLeft, bottomLeft) / moduleSize);\n                var dimension = ((tltrCentersDimension + tlblCentersDimension) >> 1) + 7;\n                switch (dimension & 0x03) {\n\n                    // mod 4\n                    case 0:\n                        dimension++;\n                        break;\n                    // 1? do nothing\n\n                    case 2:\n                        dimension--;\n                        break;\n\n                    case 3:\n                        throw \"Error\";\n                }\n                return dimension;\n            }\n\n            this.findAlignmentInRegion = function (overallEstModuleSize, estAlignmentX, estAlignmentY, allowanceFactor) {\n                // Look for an alignment pattern (3 modules in size) around where it\n                // should be\n                var allowance = Math.floor(allowanceFactor * overallEstModuleSize);\n                var alignmentAreaLeftX = Math.max(0, estAlignmentX - allowance);\n                var alignmentAreaRightX = Math.min(qrcode.width - 1, estAlignmentX + allowance);\n                if (alignmentAreaRightX - alignmentAreaLeftX < overallEstModuleSize * 3) {\n                    throw \"Error\";\n                }\n\n                var alignmentAreaTopY = Math.max(0, estAlignmentY - allowance);\n                var alignmentAreaBottomY = Math.min(qrcode.height - 1, estAlignmentY + allowance);\n\n                var alignmentFinder = new AlignmentPatternFinder(this.image, alignmentAreaLeftX, alignmentAreaTopY, alignmentAreaRightX - alignmentAreaLeftX, alignmentAreaBottomY - alignmentAreaTopY, overallEstModuleSize, this.resultPointCallback);\n                return alignmentFinder.find();\n            }\n\n            this.createTransform = function (topLeft, topRight, bottomLeft, alignmentPattern, dimension) {\n                var dimMinusThree = dimension - 3.5;\n                var bottomRightX;\n                var bottomRightY;\n                var sourceBottomRightX;\n                var sourceBottomRightY;\n                if (alignmentPattern != null) {\n                    bottomRightX = alignmentPattern.X;\n                    bottomRightY = alignmentPattern.Y;\n                    sourceBottomRightX = sourceBottomRightY = dimMinusThree - 3.0;\n                }\n                else {\n                    // Don't have an alignment pattern, just make up the bottom-right point\n                    bottomRightX = (topRight.X - topLeft.X) + bottomLeft.X;\n                    bottomRightY = (topRight.Y - topLeft.Y) + bottomLeft.Y;\n                    sourceBottomRightX = sourceBottomRightY = dimMinusThree;\n                }\n\n                var transform = PerspectiveTransform.quadrilateralToQuadrilateral(3.5, 3.5, dimMinusThree, 3.5, sourceBottomRightX, sourceBottomRightY, 3.5, dimMinusThree, topLeft.X, topLeft.Y, topRight.X, topRight.Y, bottomRightX, bottomRightY, bottomLeft.X, bottomLeft.Y);\n\n                return transform;\n            }\n\n            this.sampleGrid = function (image, transform, dimension) {\n\n                var sampler = GridSampler;\n                return sampler.sampleGrid3(image, dimension, transform);\n            }\n\n            this.processFinderPatternInfo = function (info) {\n\n                var topLeft = info.TopLeft;\n                var topRight = info.TopRight;\n                var bottomLeft = info.BottomLeft;\n\n                var moduleSize = this.calculateModuleSize(topLeft, topRight, bottomLeft);\n                if (moduleSize < 1.0) {\n                    throw \"Error\";\n                }\n                var dimension = this.computeDimension(topLeft, topRight, bottomLeft, moduleSize);\n                var provisionalVersion = Version.getProvisionalVersionForDimension(dimension);\n                var modulesBetweenFPCenters = provisionalVersion.DimensionForVersion - 7;\n\n                var alignmentPattern = null;\n                // Anything above version 1 has an alignment pattern\n                if (provisionalVersion.AlignmentPatternCenters.length > 0) {\n\n                    // Guess where a \"bottom right\" finder pattern would have been\n                    var bottomRightX = topRight.X - topLeft.X + bottomLeft.X;\n                    var bottomRightY = topRight.Y - topLeft.Y + bottomLeft.Y;\n\n                    // Estimate that alignment pattern is closer by 3 modules\n                    // from \"bottom right\" to known top left location\n                    var correctionToTopLeft = 1.0 - 3.0 / modulesBetweenFPCenters;\n                    var estAlignmentX = Math.floor(topLeft.X + correctionToTopLeft * (bottomRightX - topLeft.X));\n                    var estAlignmentY = Math.floor(topLeft.Y + correctionToTopLeft * (bottomRightY - topLeft.Y));\n\n                    // Kind of arbitrary -- expand search radius before giving up\n                    for (var i = 4; i <= 16; i <<= 1) {\n                        //try\n                        //{\n                        alignmentPattern = this.findAlignmentInRegion(moduleSize, estAlignmentX, estAlignmentY, i);\n                        break;\n                        //}\n                        //catch (re)\n                        //{\n                        // try next round\n                        //}\n                    }\n                    // If we didn't find alignment pattern... well try anyway without it\n                }\n\n                var transform = this.createTransform(topLeft, topRight, bottomLeft, alignmentPattern, dimension);\n\n                var bits = this.sampleGrid(this.image, transform, dimension);\n\n                var points;\n                if (alignmentPattern == null) {\n                    points = new Array(bottomLeft, topLeft, topRight);\n                }\n                else {\n                    points = new Array(bottomLeft, topLeft, topRight, alignmentPattern);\n                }\n                return new DetectorResult(bits, points);\n            }\n\n\n            this.detect = function () {\n                var info = new FinderPatternFinder().findFinderPattern(this.image);\n\n                return this.processFinderPatternInfo(info);\n            }\n        }\n\n///--- FORMATINF.JS-------------------------------------------------\n\n\n        var FORMAT_INFO_MASK_QR = 0x5412;\n        var FORMAT_INFO_DECODE_LOOKUP = new Array(new Array(0x5412, 0x00), new Array(0x5125, 0x01), new Array(0x5E7C, 0x02), new Array(0x5B4B, 0x03), new Array(0x45F9, 0x04), new Array(0x40CE, 0x05), new Array(0x4F97, 0x06), new Array(0x4AA0, 0x07), new Array(0x77C4, 0x08), new Array(0x72F3, 0x09), new Array(0x7DAA, 0x0A), new Array(0x789D, 0x0B), new Array(0x662F, 0x0C), new Array(0x6318, 0x0D), new Array(0x6C41, 0x0E), new Array(0x6976, 0x0F), new Array(0x1689, 0x10), new Array(0x13BE, 0x11), new Array(0x1CE7, 0x12), new Array(0x19D0, 0x13), new Array(0x0762, 0x14), new Array(0x0255, 0x15), new Array(0x0D0C, 0x16), new Array(0x083B, 0x17), new Array(0x355F, 0x18), new Array(0x3068, 0x19), new Array(0x3F31, 0x1A), new Array(0x3A06, 0x1B), new Array(0x24B4, 0x1C), new Array(0x2183, 0x1D), new Array(0x2EDA, 0x1E), new Array(0x2BED, 0x1F));\n        var BITS_SET_IN_HALF_BYTE = new Array(0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4);\n\n\n        function FormatInformation(formatInfo) {\n            this.errorCorrectionLevel = ErrorCorrectionLevel.forBits((formatInfo >> 3) & 0x03);\n            this.dataMask = (formatInfo & 0x07);\n\n            this.__defineGetter__(\"ErrorCorrectionLevel\", function () {\n                return this.errorCorrectionLevel;\n            });\n            this.__defineGetter__(\"DataMask\", function () {\n                return this.dataMask;\n            });\n            this.GetHashCode = function () {\n                return (this.errorCorrectionLevel.ordinal() << 3) | this.dataMask;\n            }\n            this.Equals = function (o) {\n                var other = o;\n                return this.errorCorrectionLevel == other.errorCorrectionLevel && this.dataMask == other.dataMask;\n            }\n        }\n\n        FormatInformation.numBitsDiffering = function (a, b) {\n            a ^= b; // a now has a 1 bit exactly where its bit differs with b's\n            // Count bits set quickly with a series of lookups:\n            return BITS_SET_IN_HALF_BYTE[a & 0x0F] + BITS_SET_IN_HALF_BYTE[(URShift(a, 4) & 0x0F)] + BITS_SET_IN_HALF_BYTE[(URShift(a, 8) & 0x0F)] + BITS_SET_IN_HALF_BYTE[(URShift(a, 12) & 0x0F)] + BITS_SET_IN_HALF_BYTE[(URShift(a, 16) & 0x0F)] + BITS_SET_IN_HALF_BYTE[(URShift(a, 20) & 0x0F)] + BITS_SET_IN_HALF_BYTE[(URShift(a, 24) & 0x0F)] + BITS_SET_IN_HALF_BYTE[(URShift(a, 28) & 0x0F)];\n        }\n\n        FormatInformation.decodeFormatInformation = function (maskedFormatInfo) {\n            var formatInfo = FormatInformation.doDecodeFormatInformation(maskedFormatInfo);\n            if (formatInfo != null) {\n                return formatInfo;\n            }\n            // Should return null, but, some QR codes apparently\n            // do not mask this info. Try again by actually masking the pattern\n            // first\n            return FormatInformation.doDecodeFormatInformation(maskedFormatInfo ^ FORMAT_INFO_MASK_QR);\n        }\n        FormatInformation.doDecodeFormatInformation = function (maskedFormatInfo) {\n            // Find the int in FORMAT_INFO_DECODE_LOOKUP with fewest bits differing\n            var bestDifference = 0xffffffff;\n            var bestFormatInfo = 0;\n            for (var i = 0; i < FORMAT_INFO_DECODE_LOOKUP.length; i++) {\n                var decodeInfo = FORMAT_INFO_DECODE_LOOKUP[i];\n                var targetInfo = decodeInfo[0];\n                if (targetInfo == maskedFormatInfo) {\n                    // Found an exact match\n                    return new FormatInformation(decodeInfo[1]);\n                }\n                var bitsDifference = this.numBitsDiffering(maskedFormatInfo, targetInfo);\n                if (bitsDifference < bestDifference) {\n                    bestFormatInfo = decodeInfo[1];\n                    bestDifference = bitsDifference;\n                }\n            }\n            // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits\n            // differing means we found a match\n            if (bestDifference <= 3) {\n                return new FormatInformation(bestFormatInfo);\n            }\n            return null;\n        }\n\n\n///--- ERRORLEVEL.JS-------------------------------------------------\n\n        function ErrorCorrectionLevel(ordinal, bits, name) {\n            this.ordinal_Renamed_Field = ordinal;\n            this.bits = bits;\n            this.name = name;\n            this.__defineGetter__(\"Bits\", function () {\n                return this.bits;\n            });\n            this.__defineGetter__(\"Name\", function () {\n                return this.name;\n            });\n            this.ordinal = function () {\n                return this.ordinal_Renamed_Field;\n            }\n        }\n\n        ErrorCorrectionLevel.forBits = function (bits) {\n            if (bits < 0 || bits >= FOR_BITS.length) {\n                throw \"ArgumentException\";\n            }\n            return FOR_BITS[bits];\n        }\n\n        var L = new ErrorCorrectionLevel(0, 0x01, \"L\");\n        var M = new ErrorCorrectionLevel(1, 0x00, \"M\");\n        var Q = new ErrorCorrectionLevel(2, 0x03, \"Q\");\n        var H = new ErrorCorrectionLevel(3, 0x02, \"H\");\n        var FOR_BITS = new Array(M, L, H, Q);\n\n\n///--- BITMAT.JS-------------------------------------------------\n\n\n        function BitMatrix(width, height) {\n            if (!height)\n                height = width;\n            if (width < 1 || height < 1) {\n                throw \"Both dimensions must be greater than 0\";\n            }\n            this.width = width;\n            this.height = height;\n            var rowSize = width >> 5;\n            if ((width & 0x1f) != 0) {\n                rowSize++;\n            }\n            this.rowSize = rowSize;\n            this.bits = new Array(rowSize * height);\n            for (var i = 0; i < this.bits.length; i++)\n                this.bits[i] = 0;\n\n            this.__defineGetter__(\"Width\", function () {\n                return this.width;\n            });\n            this.__defineGetter__(\"Height\", function () {\n                return this.height;\n            });\n            this.__defineGetter__(\"Dimension\", function () {\n                if (this.width != this.height) {\n                    throw \"Can't call getDimension() on a non-square matrix\";\n                }\n                return this.width;\n            });\n\n            this.get_Renamed = function (x, y) {\n                var offset = y * this.rowSize + (x >> 5);\n                return ((URShift(this.bits[offset], (x & 0x1f))) & 1) != 0;\n            }\n            this.set_Renamed = function (x, y) {\n                var offset = y * this.rowSize + (x >> 5);\n                this.bits[offset] |= 1 << (x & 0x1f);\n            }\n            this.flip = function (x, y) {\n                var offset = y * this.rowSize + (x >> 5);\n                this.bits[offset] ^= 1 << (x & 0x1f);\n            }\n            this.clear = function () {\n                var max = this.bits.length;\n                for (var i = 0; i < max; i++) {\n                    this.bits[i] = 0;\n                }\n            }\n            this.setRegion = function (left, top, width, height) {\n                if (top < 0 || left < 0) {\n                    throw \"Left and top must be nonnegative\";\n                }\n                if (height < 1 || width < 1) {\n                    throw \"Height and width must be at least 1\";\n                }\n                var right = left + width;\n                var bottom = top + height;\n                if (bottom > this.height || right > this.width) {\n                    throw \"The region must fit inside the matrix\";\n                }\n                for (var y = top; y < bottom; y++) {\n                    var offset = y * this.rowSize;\n                    for (var x = left; x < right; x++) {\n                        this.bits[offset + (x >> 5)] |= 1 << (x & 0x1f);\n                    }\n                }\n            }\n        }\n\n///--- DATABLOCK.JS-------------------------------------------------\n\n\n        function DataBlock(numDataCodewords, codewords) {\n            this.numDataCodewords = numDataCodewords;\n            this.codewords = codewords;\n\n            this.__defineGetter__(\"NumDataCodewords\", function () {\n                return this.numDataCodewords;\n            });\n            this.__defineGetter__(\"Codewords\", function () {\n                return this.codewords;\n            });\n        }\n\n        DataBlock.getDataBlocks = function (rawCodewords, version, ecLevel) {\n\n            if (rawCodewords.length != version.TotalCodewords) {\n                throw \"ArgumentException\";\n            }\n\n            // Figure out the number and size of data blocks used by this version and\n            // error correction level\n            var ecBlocks = version.getECBlocksForLevel(ecLevel);\n\n            // First count the total number of data blocks\n            var totalBlocks = 0;\n            var ecBlockArray = ecBlocks.getECBlocks();\n            for (var i = 0; i < ecBlockArray.length; i++) {\n                totalBlocks += ecBlockArray[i].Count;\n            }\n\n            // Now establish DataBlocks of the appropriate size and number of data codewords\n            var result = new Array(totalBlocks);\n            var numResultBlocks = 0;\n            for (var j = 0; j < ecBlockArray.length; j++) {\n                var ecBlock = ecBlockArray[j];\n                for (var i = 0; i < ecBlock.Count; i++) {\n                    var numDataCodewords = ecBlock.DataCodewords;\n                    var numBlockCodewords = ecBlocks.ECCodewordsPerBlock + numDataCodewords;\n                    result[numResultBlocks++] = new DataBlock(numDataCodewords, new Array(numBlockCodewords));\n                }\n            }\n\n            // All blocks have the same amount of data, except that the last n\n            // (where n may be 0) have 1 more byte. Figure out where these start.\n            var shorterBlocksTotalCodewords = result[0].codewords.length;\n            var longerBlocksStartAt = result.length - 1;\n            while (longerBlocksStartAt >= 0) {\n                var numCodewords = result[longerBlocksStartAt].codewords.length;\n                if (numCodewords == shorterBlocksTotalCodewords) {\n                    break;\n                }\n                longerBlocksStartAt--;\n            }\n            longerBlocksStartAt++;\n\n            var shorterBlocksNumDataCodewords = shorterBlocksTotalCodewords - ecBlocks.ECCodewordsPerBlock;\n            // The last elements of result may be 1 element longer;\n            // first fill out as many elements as all of them have\n            var rawCodewordsOffset = 0;\n            for (var i = 0; i < shorterBlocksNumDataCodewords; i++) {\n                for (var j = 0; j < numResultBlocks; j++) {\n                    result[j].codewords[i] = rawCodewords[rawCodewordsOffset++];\n                }\n            }\n            // Fill out the last data block in the longer ones\n            for (var j = longerBlocksStartAt; j < numResultBlocks; j++) {\n                result[j].codewords[shorterBlocksNumDataCodewords] = rawCodewords[rawCodewordsOffset++];\n            }\n            // Now add in error correction blocks\n            var max = result[0].codewords.length;\n            for (var i = shorterBlocksNumDataCodewords; i < max; i++) {\n                for (var j = 0; j < numResultBlocks; j++) {\n                    var iOffset = j < longerBlocksStartAt ? i : i + 1;\n                    result[j].codewords[iOffset] = rawCodewords[rawCodewordsOffset++];\n                }\n            }\n            return result;\n        }\n\n\n///--- BMPARSER.JS-------------------------------------------------\n\n\n        function BitMatrixParser(bitMatrix) {\n            var dimension = bitMatrix.Dimension;\n            if (dimension < 21 || (dimension & 0x03) != 1) {\n                throw \"Error BitMatrixParser\";\n            }\n            this.bitMatrix = bitMatrix;\n            this.parsedVersion = null;\n            this.parsedFormatInfo = null;\n\n            this.copyBit = function (i, j, versionBits) {\n                return this.bitMatrix.get_Renamed(i, j) ? (versionBits << 1) | 0x1 : versionBits << 1;\n            }\n\n            this.readFormatInformation = function () {\n                if (this.parsedFormatInfo != null) {\n                    return this.parsedFormatInfo;\n                }\n\n                // Read top-left format info bits\n                var formatInfoBits = 0;\n                for (var i = 0; i < 6; i++) {\n                    formatInfoBits = this.copyBit(i, 8, formatInfoBits);\n                }\n                // .. and skip a bit in the timing pattern ...\n                formatInfoBits = this.copyBit(7, 8, formatInfoBits);\n                formatInfoBits = this.copyBit(8, 8, formatInfoBits);\n                formatInfoBits = this.copyBit(8, 7, formatInfoBits);\n                // .. and skip a bit in the timing pattern ...\n                for (var j = 5; j >= 0; j--) {\n                    formatInfoBits = this.copyBit(8, j, formatInfoBits);\n                }\n\n                this.parsedFormatInfo = FormatInformation.decodeFormatInformation(formatInfoBits);\n                if (this.parsedFormatInfo != null) {\n                    return this.parsedFormatInfo;\n                }\n\n                // Hmm, failed. Try the top-right/bottom-left pattern\n                var dimension = this.bitMatrix.Dimension;\n                formatInfoBits = 0;\n                var iMin = dimension - 8;\n                for (var i = dimension - 1; i >= iMin; i--) {\n                    formatInfoBits = this.copyBit(i, 8, formatInfoBits);\n                }\n                for (var j = dimension - 7; j < dimension; j++) {\n                    formatInfoBits = this.copyBit(8, j, formatInfoBits);\n                }\n\n                this.parsedFormatInfo = FormatInformation.decodeFormatInformation(formatInfoBits);\n                if (this.parsedFormatInfo != null) {\n                    return this.parsedFormatInfo;\n                }\n                throw \"Error readFormatInformation\";\n            }\n            this.readVersion = function () {\n\n                if (this.parsedVersion != null) {\n                    return this.parsedVersion;\n                }\n\n                var dimension = this.bitMatrix.Dimension;\n\n                var provisionalVersion = (dimension - 17) >> 2;\n                if (provisionalVersion <= 6) {\n                    return Version.getVersionForNumber(provisionalVersion);\n                }\n\n                // Read top-right version info: 3 wide by 6 tall\n                var versionBits = 0;\n                var ijMin = dimension - 11;\n                for (var j = 5; j >= 0; j--) {\n                    for (var i = dimension - 9; i >= ijMin; i--) {\n                        versionBits = this.copyBit(i, j, versionBits);\n                    }\n                }\n\n                this.parsedVersion = Version.decodeVersionInformation(versionBits);\n                if (this.parsedVersion != null && this.parsedVersion.DimensionForVersion == dimension) {\n                    return this.parsedVersion;\n                }\n\n                // Hmm, failed. Try bottom left: 6 wide by 3 tall\n                versionBits = 0;\n                for (var i = 5; i >= 0; i--) {\n                    for (var j = dimension - 9; j >= ijMin; j--) {\n                        versionBits = this.copyBit(i, j, versionBits);\n                    }\n                }\n\n                this.parsedVersion = Version.decodeVersionInformation(versionBits);\n                if (this.parsedVersion != null && this.parsedVersion.DimensionForVersion == dimension) {\n                    return this.parsedVersion;\n                }\n                throw \"Error readVersion\";\n            }\n            this.readCodewords = function () {\n\n                var formatInfo = this.readFormatInformation();\n                var version = this.readVersion();\n\n                // Get the data mask for the format used in this QR Code. This will exclude\n                // some bits from reading as we wind through the bit matrix.\n                var dataMask = DataMask.forReference(formatInfo.DataMask);\n                var dimension = this.bitMatrix.Dimension;\n                dataMask.unmaskBitMatrix(this.bitMatrix, dimension);\n\n                var functionPattern = version.buildFunctionPattern();\n\n                var readingUp = true;\n                var result = new Array(version.TotalCodewords);\n                var resultOffset = 0;\n                var currentByte = 0;\n                var bitsRead = 0;\n                // Read columns in pairs, from right to left\n                for (var j = dimension - 1; j > 0; j -= 2) {\n                    if (j == 6) {\n                        // Skip whole column with vertical alignment pattern;\n                        // saves time and makes the other code proceed more cleanly\n                        j--;\n                    }\n                    // Read alternatingly from bottom to top then top to bottom\n                    for (var count = 0; count < dimension; count++) {\n                        var i = readingUp ? dimension - 1 - count : count;\n                        for (var col = 0; col < 2; col++) {\n                            // Ignore bits covered by the function pattern\n                            if (!functionPattern.get_Renamed(j - col, i)) {\n                                // Read a bit\n                                bitsRead++;\n                                currentByte <<= 1;\n                                if (this.bitMatrix.get_Renamed(j - col, i)) {\n                                    currentByte |= 1;\n                                }\n                                // If we've made a whole byte, save it off\n                                if (bitsRead == 8) {\n                                    result[resultOffset++] = currentByte;\n                                    bitsRead = 0;\n                                    currentByte = 0;\n                                }\n                            }\n                        }\n                    }\n                    readingUp ^= true; // readingUp = !readingUp; // switch directions\n                }\n                if (resultOffset != version.TotalCodewords) {\n                    throw \"Error readCodewords\";\n                }\n                return result;\n            }\n        }\n\n\n///--- DATAMASK.JS-------------------------------------------------\n\n\n        var DataMask = {};\n\n        DataMask.forReference = function (reference) {\n            if (reference < 0 || reference > 7) {\n                throw \"System.ArgumentException\";\n            }\n            return DataMask.DATA_MASKS[reference];\n        }\n\n        function DataMask000() {\n            this.unmaskBitMatrix = function (bits, dimension) {\n                for (var i = 0; i < dimension; i++) {\n                    for (var j = 0; j < dimension; j++) {\n                        if (this.isMasked(i, j)) {\n                            bits.flip(j, i);\n                        }\n                    }\n                }\n            }\n            this.isMasked = function (i, j) {\n                return ((i + j) & 0x01) == 0;\n            }\n        }\n\n        function DataMask001() {\n            this.unmaskBitMatrix = function (bits, dimension) {\n                for (var i = 0; i < dimension; i++) {\n                    for (var j = 0; j < dimension; j++) {\n                        if (this.isMasked(i, j)) {\n                            bits.flip(j, i);\n                        }\n                    }\n                }\n            }\n            this.isMasked = function (i, j) {\n                return (i & 0x01) == 0;\n            }\n        }\n\n        function DataMask010() {\n            this.unmaskBitMatrix = function (bits, dimension) {\n                for (var i = 0; i < dimension; i++) {\n                    for (var j = 0; j < dimension; j++) {\n                        if (this.isMasked(i, j)) {\n                            bits.flip(j, i);\n                        }\n                    }\n                }\n            }\n            this.isMasked = function (i, j) {\n                return j % 3 == 0;\n            }\n        }\n\n        function DataMask011() {\n            this.unmaskBitMatrix = function (bits, dimension) {\n                for (var i = 0; i < dimension; i++) {\n                    for (var j = 0; j < dimension; j++) {\n                        if (this.isMasked(i, j)) {\n                            bits.flip(j, i);\n                        }\n                    }\n                }\n            }\n            this.isMasked = function (i, j) {\n                return (i + j) % 3 == 0;\n            }\n        }\n\n        function DataMask100() {\n            this.unmaskBitMatrix = function (bits, dimension) {\n                for (var i = 0; i < dimension; i++) {\n                    for (var j = 0; j < dimension; j++) {\n                        if (this.isMasked(i, j)) {\n                            bits.flip(j, i);\n                        }\n                    }\n                }\n            }\n            this.isMasked = function (i, j) {\n                return (((URShift(i, 1)) + (j / 3)) & 0x01) == 0;\n            }\n        }\n\n        function DataMask101() {\n            this.unmaskBitMatrix = function (bits, dimension) {\n                for (var i = 0; i < dimension; i++) {\n                    for (var j = 0; j < dimension; j++) {\n                        if (this.isMasked(i, j)) {\n                            bits.flip(j, i);\n                        }\n                    }\n                }\n            }\n            this.isMasked = function (i, j) {\n                var temp = i * j;\n                return (temp & 0x01) + (temp % 3) == 0;\n            }\n        }\n\n        function DataMask110() {\n            this.unmaskBitMatrix = function (bits, dimension) {\n                for (var i = 0; i < dimension; i++) {\n                    for (var j = 0; j < dimension; j++) {\n                        if (this.isMasked(i, j)) {\n                            bits.flip(j, i);\n                        }\n                    }\n                }\n            }\n            this.isMasked = function (i, j) {\n                var temp = i * j;\n                return (((temp & 0x01) + (temp % 3)) & 0x01) == 0;\n            }\n        }\n\n        function DataMask111() {\n            this.unmaskBitMatrix = function (bits, dimension) {\n                for (var i = 0; i < dimension; i++) {\n                    for (var j = 0; j < dimension; j++) {\n                        if (this.isMasked(i, j)) {\n                            bits.flip(j, i);\n                        }\n                    }\n                }\n            }\n            this.isMasked = function (i, j) {\n                return ((((i + j) & 0x01) + ((i * j) % 3)) & 0x01) == 0;\n            }\n        }\n\n        DataMask.DATA_MASKS = new Array(new DataMask000(), new DataMask001(), new DataMask010(), new DataMask011(), new DataMask100(), new DataMask101(), new DataMask110(), new DataMask111());\n\n\n///--- RSDECODER.JS-------------------------------------------------\n\n\n        function ReedSolomonDecoder(field) {\n            this.field = field;\n            this.decode = function (received, twoS) {\n                var poly = new GF256Poly(this.field, received);\n                var syndromeCoefficients = new Array(twoS);\n                for (var i = 0; i < syndromeCoefficients.length; i++) syndromeCoefficients[i] = 0;\n                var dataMatrix = false;//this.field.Equals(GF256.DATA_MATRIX_FIELD);\n                var noError = true;\n                for (var i = 0; i < twoS; i++) {\n                    // Thanks to sanfordsquires for this fix:\n                    var evalu = poly.evaluateAt(this.field.exp(dataMatrix ? i + 1 : i));\n                    syndromeCoefficients[syndromeCoefficients.length - 1 - i] = evalu;\n                    if (evalu != 0) {\n                        noError = false;\n                    }\n                }\n                if (noError) {\n                    return;\n                }\n                var syndrome = new GF256Poly(this.field, syndromeCoefficients);\n                var sigmaOmega = this.runEuclideanAlgorithm(this.field.buildMonomial(twoS, 1), syndrome, twoS);\n                var sigma = sigmaOmega[0];\n                var omega = sigmaOmega[1];\n                var errorLocations = this.findErrorLocations(sigma);\n                var errorMagnitudes = this.findErrorMagnitudes(omega, errorLocations, dataMatrix);\n                for (var i = 0; i < errorLocations.length; i++) {\n                    var position = received.length - 1 - this.field.log(errorLocations[i]);\n                    if (position < 0) {\n                        throw \"ReedSolomonException Bad error location\";\n                    }\n                    received[position] = GF256.addOrSubtract(received[position], errorMagnitudes[i]);\n                }\n            }\n\n            this.runEuclideanAlgorithm = function (a, b, R) {\n                // Assume a's degree is >= b's\n                if (a.Degree < b.Degree) {\n                    var temp = a;\n                    a = b;\n                    b = temp;\n                }\n\n                var rLast = a;\n                var r = b;\n                var sLast = this.field.One;\n                var s = this.field.Zero;\n                var tLast = this.field.Zero;\n                var t = this.field.One;\n\n                // Run Euclidean algorithm until r's degree is less than R/2\n                while (r.Degree >= Math.floor(R / 2)) {\n                    var rLastLast = rLast;\n                    var sLastLast = sLast;\n                    var tLastLast = tLast;\n                    rLast = r;\n                    sLast = s;\n                    tLast = t;\n\n                    // Divide rLastLast by rLast, with quotient in q and remainder in r\n                    if (rLast.Zero) {\n                        // Oops, Euclidean algorithm already terminated?\n                        throw \"r_{i-1} was zero\";\n                    }\n                    r = rLastLast;\n                    var q = this.field.Zero;\n                    var denominatorLeadingTerm = rLast.getCoefficient(rLast.Degree);\n                    var dltInverse = this.field.inverse(denominatorLeadingTerm);\n                    while (r.Degree >= rLast.Degree && !r.Zero) {\n                        var degreeDiff = r.Degree - rLast.Degree;\n                        var scale = this.field.multiply(r.getCoefficient(r.Degree), dltInverse);\n                        q = q.addOrSubtract(this.field.buildMonomial(degreeDiff, scale));\n                        r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n                        //r.EXE();\n                    }\n\n                    s = q.multiply1(sLast).addOrSubtract(sLastLast);\n                    t = q.multiply1(tLast).addOrSubtract(tLastLast);\n                }\n\n                var sigmaTildeAtZero = t.getCoefficient(0);\n                if (sigmaTildeAtZero == 0) {\n                    throw \"ReedSolomonException sigmaTilde(0) was zero\";\n                }\n\n                var inverse = this.field.inverse(sigmaTildeAtZero);\n                var sigma = t.multiply2(inverse);\n                var omega = r.multiply2(inverse);\n                return new Array(sigma, omega);\n            }\n            this.findErrorLocations = function (errorLocator) {\n                // This is a direct application of Chien's search\n                var numErrors = errorLocator.Degree;\n                if (numErrors == 1) {\n                    // shortcut\n                    return new Array(errorLocator.getCoefficient(1));\n                }\n                var result = new Array(numErrors);\n                var e = 0;\n                for (var i = 1; i < 256 && e < numErrors; i++) {\n                    if (errorLocator.evaluateAt(i) == 0) {\n                        result[e] = this.field.inverse(i);\n                        e++;\n                    }\n                }\n                if (e != numErrors) {\n                    throw \"Error locator degree does not match number of roots\";\n                }\n                return result;\n            }\n            this.findErrorMagnitudes = function (errorEvaluator, errorLocations, dataMatrix) {\n                // This is directly applying Forney's Formula\n                var s = errorLocations.length;\n                var result = new Array(s);\n                for (var i = 0; i < s; i++) {\n                    var xiInverse = this.field.inverse(errorLocations[i]);\n                    var denominator = 1;\n                    for (var j = 0; j < s; j++) {\n                        if (i != j) {\n                            denominator = this.field.multiply(denominator, GF256.addOrSubtract(1, this.field.multiply(errorLocations[j], xiInverse)));\n                        }\n                    }\n                    result[i] = this.field.multiply(errorEvaluator.evaluateAt(xiInverse), this.field.inverse(denominator));\n                    // Thanks to sanfordsquires for this fix:\n                    if (dataMatrix) {\n                        result[i] = this.field.multiply(result[i], xiInverse);\n                    }\n                }\n                return result;\n            }\n        }\n\n///--- G256POLY.JS-------------------------------------------------\n\n\n        function GF256Poly(field, coefficients) {\n            if (coefficients == null || coefficients.length == 0) {\n                throw \"System.ArgumentException\";\n            }\n            this.field = field;\n            var coefficientsLength = coefficients.length;\n            if (coefficientsLength > 1 && coefficients[0] == 0) {\n                // Leading term must be non-zero for anything except the constant polynomial \"0\"\n                var firstNonZero = 1;\n                while (firstNonZero < coefficientsLength && coefficients[firstNonZero] == 0) {\n                    firstNonZero++;\n                }\n                if (firstNonZero == coefficientsLength) {\n                    this.coefficients = field.Zero.coefficients;\n                }\n                else {\n                    this.coefficients = new Array(coefficientsLength - firstNonZero);\n                    for (var i = 0; i < this.coefficients.length; i++) this.coefficients[i] = 0;\n                    //Array.Copy(coefficients, firstNonZero, this.coefficients, 0, this.coefficients.length);\n                    for (var ci = 0; ci < this.coefficients.length; ci++) this.coefficients[ci] = coefficients[firstNonZero + ci];\n                }\n            }\n            else {\n                this.coefficients = coefficients;\n            }\n\n            this.__defineGetter__(\"Zero\", function () {\n                return this.coefficients[0] == 0;\n            });\n            this.__defineGetter__(\"Degree\", function () {\n                return this.coefficients.length - 1;\n            });\n            this.__defineGetter__(\"Coefficients\", function () {\n                return this.coefficients;\n            });\n\n            this.getCoefficient = function (degree) {\n                return this.coefficients[this.coefficients.length - 1 - degree];\n            }\n\n            this.evaluateAt = function (a) {\n                if (a == 0) {\n                    // Just return the x^0 coefficient\n                    return this.getCoefficient(0);\n                }\n                var size = this.coefficients.length;\n                if (a == 1) {\n                    // Just the sum of the coefficients\n                    var result = 0;\n                    for (var i = 0; i < size; i++) {\n                        result = GF256.addOrSubtract(result, this.coefficients[i]);\n                    }\n                    return result;\n                }\n                var result2 = this.coefficients[0];\n                for (var i = 1; i < size; i++) {\n                    result2 = GF256.addOrSubtract(this.field.multiply(a, result2), this.coefficients[i]);\n                }\n                return result2;\n            }\n\n            this.addOrSubtract = function (other) {\n                if (this.field != other.field) {\n                    throw \"GF256Polys do not have same GF256 field\";\n                }\n                if (this.Zero) {\n                    return other;\n                }\n                if (other.Zero) {\n                    return this;\n                }\n\n                var smallerCoefficients = this.coefficients;\n                var largerCoefficients = other.coefficients;\n                if (smallerCoefficients.length > largerCoefficients.length) {\n                    var temp = smallerCoefficients;\n                    smallerCoefficients = largerCoefficients;\n                    largerCoefficients = temp;\n                }\n                var sumDiff = new Array(largerCoefficients.length);\n                var lengthDiff = largerCoefficients.length - smallerCoefficients.length;\n                // Copy high-order terms only found in higher-degree polynomial's coefficients\n                //Array.Copy(largerCoefficients, 0, sumDiff, 0, lengthDiff);\n                for (var ci = 0; ci < lengthDiff; ci++) sumDiff[ci] = largerCoefficients[ci];\n\n                for (var i = lengthDiff; i < largerCoefficients.length; i++) {\n                    sumDiff[i] = GF256.addOrSubtract(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n                }\n\n                return new GF256Poly(field, sumDiff);\n            }\n            this.multiply1 = function (other) {\n                if (this.field != other.field) {\n                    throw \"GF256Polys do not have same GF256 field\";\n                }\n                if (this.Zero || other.Zero) {\n                    return this.field.Zero;\n                }\n                var aCoefficients = this.coefficients;\n                var aLength = aCoefficients.length;\n                var bCoefficients = other.coefficients;\n                var bLength = bCoefficients.length;\n                var product = new Array(aLength + bLength - 1);\n                for (var i = 0; i < aLength; i++) {\n                    var aCoeff = aCoefficients[i];\n                    for (var j = 0; j < bLength; j++) {\n                        product[i + j] = GF256.addOrSubtract(product[i + j], this.field.multiply(aCoeff, bCoefficients[j]));\n                    }\n                }\n                return new GF256Poly(this.field, product);\n            }\n            this.multiply2 = function (scalar) {\n                if (scalar == 0) {\n                    return this.field.Zero;\n                }\n                if (scalar == 1) {\n                    return this;\n                }\n                var size = this.coefficients.length;\n                var product = new Array(size);\n                for (var i = 0; i < size; i++) {\n                    product[i] = this.field.multiply(this.coefficients[i], scalar);\n                }\n                return new GF256Poly(this.field, product);\n            }\n            this.multiplyByMonomial = function (degree, coefficient) {\n                if (degree < 0) {\n                    throw \"System.ArgumentException\";\n                }\n                if (coefficient == 0) {\n                    return this.field.Zero;\n                }\n                var size = this.coefficients.length;\n                var product = new Array(size + degree);\n                for (var i = 0; i < product.length; i++) product[i] = 0;\n                for (var i = 0; i < size; i++) {\n                    product[i] = this.field.multiply(this.coefficients[i], coefficient);\n                }\n                return new GF256Poly(this.field, product);\n            }\n            this.divide = function (other) {\n                if (this.field != other.field) {\n                    throw \"GF256Polys do not have same GF256 field\";\n                }\n                if (other.Zero) {\n                    throw \"Divide by 0\";\n                }\n\n                var quotient = this.field.Zero;\n                var remainder = this;\n\n                var denominatorLeadingTerm = other.getCoefficient(other.Degree);\n                var inverseDenominatorLeadingTerm = this.field.inverse(denominatorLeadingTerm);\n\n                while (remainder.Degree >= other.Degree && !remainder.Zero) {\n                    var degreeDifference = remainder.Degree - other.Degree;\n                    var scale = this.field.multiply(remainder.getCoefficient(remainder.Degree), inverseDenominatorLeadingTerm);\n                    var term = other.multiplyByMonomial(degreeDifference, scale);\n                    var iterationQuotient = this.field.buildMonomial(degreeDifference, scale);\n                    quotient = quotient.addOrSubtract(iterationQuotient);\n                    remainder = remainder.addOrSubtract(term);\n                }\n\n                return new Array(quotient, remainder);\n            }\n        }\n\n///--- G256.JS-------------------------------------------------\n\n\n        function GF256(primitive) {\n            this.expTable = new Array(256);\n            this.logTable = new Array(256);\n            var x = 1;\n            for (var i = 0; i < 256; i++) {\n                this.expTable[i] = x;\n                x <<= 1; // x = x * 2; we're assuming the generator alpha is 2\n                if (x >= 0x100) {\n                    x ^= primitive;\n                }\n            }\n            for (var i = 0; i < 255; i++) {\n                this.logTable[this.expTable[i]] = i;\n            }\n            // logTable[0] == 0 but this should never be used\n            var at0 = new Array(1);\n            at0[0] = 0;\n            this.zero = new GF256Poly(this, new Array(at0));\n            var at1 = new Array(1);\n            at1[0] = 1;\n            this.one = new GF256Poly(this, new Array(at1));\n\n            this.__defineGetter__(\"Zero\", function () {\n                return this.zero;\n            });\n            this.__defineGetter__(\"One\", function () {\n                return this.one;\n            });\n            this.buildMonomial = function (degree, coefficient) {\n                if (degree < 0) {\n                    throw \"System.ArgumentException\";\n                }\n                if (coefficient == 0) {\n                    return this.zero;\n                }\n                var coefficients = new Array(degree + 1);\n                for (var i = 0; i < coefficients.length; i++) coefficients[i] = 0;\n                coefficients[0] = coefficient;\n                return new GF256Poly(this, coefficients);\n            }\n            this.exp = function (a) {\n                return this.expTable[a];\n            }\n            this.log = function (a) {\n                if (a == 0) {\n                    throw \"System.ArgumentException\";\n                }\n                return this.logTable[a];\n            }\n            this.inverse = function (a) {\n                if (a == 0) {\n                    throw \"System.ArithmeticException\";\n                }\n                return this.expTable[255 - this.logTable[a]];\n            }\n            this.multiply = function (a, b) {\n                if (a == 0 || b == 0) {\n                    return 0;\n                }\n                if (a == 1) {\n                    return b;\n                }\n                if (b == 1) {\n                    return a;\n                }\n                return this.expTable[(this.logTable[a] + this.logTable[b]) % 255];\n            }\n        }\n\n        GF256.QR_CODE_FIELD = new GF256(0x011D);\n        GF256.DATA_MATRIX_FIELD = new GF256(0x012D);\n\n        GF256.addOrSubtract = function (a, b) {\n            return a ^ b;\n        }\n\n///--- DECODER.JS-------------------------------------------------\n\n        var Decoder = {};\n        Decoder.rsDecoder = new ReedSolomonDecoder(GF256.QR_CODE_FIELD);\n\n        Decoder.correctErrors = function (codewordBytes, numDataCodewords) {\n            var numCodewords = codewordBytes.length;\n            // First read into an array of ints\n            var codewordsInts = new Array(numCodewords);\n            for (var i = 0; i < numCodewords; i++) {\n                codewordsInts[i] = codewordBytes[i] & 0xFF;\n            }\n            var numECCodewords = codewordBytes.length - numDataCodewords;\n            try {\n                Decoder.rsDecoder.decode(codewordsInts, numECCodewords);\n                //var corrector = new ReedSolomon(codewordsInts, numECCodewords);\n                //corrector.correct();\n            }\n            catch (rse) {\n                throw rse;\n            }\n            // Copy back into array of bytes -- only need to worry about the bytes that were data\n            // We don't care about errors in the error-correction codewords\n            for (var i = 0; i < numDataCodewords; i++) {\n                codewordBytes[i] = codewordsInts[i];\n            }\n        }\n\n        Decoder.decode = function (bits) {\n            var parser = new BitMatrixParser(bits);\n            var version = parser.readVersion();\n            var ecLevel = parser.readFormatInformation().ErrorCorrectionLevel;\n\n            // Read codewords\n            var codewords = parser.readCodewords();\n\n            // Separate into data blocks\n            var dataBlocks = DataBlock.getDataBlocks(codewords, version, ecLevel);\n\n            // Count total number of data bytes\n            var totalBytes = 0;\n            for (var i = 0; i < dataBlocks.length; i++) {\n                totalBytes += dataBlocks[i].NumDataCodewords;\n            }\n            var resultBytes = new Array(totalBytes);\n            var resultOffset = 0;\n\n            // Error-correct and copy data blocks together into a stream of bytes\n            for (var j = 0; j < dataBlocks.length; j++) {\n                var dataBlock = dataBlocks[j];\n                var codewordBytes = dataBlock.Codewords;\n                var numDataCodewords = dataBlock.NumDataCodewords;\n                Decoder.correctErrors(codewordBytes, numDataCodewords);\n                for (var i = 0; i < numDataCodewords; i++) {\n                    resultBytes[resultOffset++] = codewordBytes[i];\n                }\n            }\n\n            // Decode the contents of that stream of bytes\n            var reader = new QRCodeDataBlockReader(resultBytes, version.VersionNumber, ecLevel.Bits);\n            return reader;\n            //return DecodedBitStreamParser.decode(resultBytes, version, ecLevel);\n        }\n\n\n///--- QRCODE.JS-------------------------------------------------\n\n        var qrcode = {};\n        qrcode.imagedata = null;\n        qrcode.video = false;\n        qrcode.width = 0;\n        qrcode.height = 0;\n        qrcode.qrCodeSymbol = null;\n        qrcode.debug = false;\n        qrcode.maxImgSize = 1024 * 1024;\n        qrcode.interval = 500;\n\n        qrcode.sizeOfDataLengthInfo = [[10, 9, 8, 8], [12, 11, 16, 10], [14, 13, 16, 12]];\n\n        // CALLED FROM PUBLIC INTERFACE\n        // This is the callback function that must be overwritten to pass info back to calling class\n        qrcode.callback = null;\n\n        // CALLED FROM PUBLIC INTERFACE\n        // This starts the webcam and attaches stream to the video object of ID passed in\n        // Does NOT automatically begin scanning\n        qrcode.startWebCam = function (videoId) {\n            //store the video id so all the bits can use it\n            qrcode.videoId = videoId;\n            qrcode.video = document.getElementById(qrcode.videoId);\n            var pPromise = qrcode.video.play();\n            if (pPromise !== undefined) {\n                pPromise.then(function () {\n                    // playback started we do not need to do anything\n                }).catch(function (error) {\n                    // playback could not start or was interrupted.\n                    // most likely that enter here. but we need to handle this\n                    // to suppress an error\n                });\n            }\n            var mediaConstraints = {\n                audio: false,\n                video: {facingMode: \"environment\"}\n            };\n\n            if (navigator.getUserMedia) {\n                navigator.getUserMedia(mediaConstraints, qrcode.webCamSuccess, qrcode.webCamError);\n            }\n        };\n\n        //stop the webcam\n        qrcode.stopWebCam = function () {\n            qrcode.video.pause();\n        };\n\n        qrcode.webCamSuccess = function (stream) {\n            qrcode.localstream = stream;\n            qrcode.video.srcObject = stream;\n            qrcode.video.controls = false;\n            qrcode.video.volume = 0;\n\n            //we could start this here, but lets just keep the two things separate\n            //the calling class can call the same code\n            //qrcode.startScan(qrcode.videoId);\n        };\n\n        qrcode.webCamError = function (error) {\n            qrcode.stopScan();\n            return;\n        };\n\n        // CALLED FROM PUBLIC INTERFACE\n        // This starts the scan loop on the video of id passed in\n        //scan can be run without using the internal webcam code\n        //just pass in the videoid of the webcam html5 video to startScan\n        qrcode.startScan = function (videoId) {\n\n            qrcode.canvasid = 'qr-canvas' + videoId;\n            var thevideo = document.getElementById(videoId);\n\n            //create canvas for this capture round\n            qrcode.canvas_qr2 = document.createElement('canvas');\n            qrcode.canvas_qr2.id = qrcode.canvasid;\n            qrcode.qrcontext2 = qrcode.canvas_qr2.getContext('2d');\n            qrcode.canvas_qr2.width = qrcode.video.videoWidth;\n            qrcode.canvas_qr2.height = qrcode.video.videoHeight;\n\n            //processing will run till gUM is set to false\n            qrcode.gUM = true;\n\n            //we run the doScan function inline, it loops and calls itself\n            var doScan = function () {\n                if (qrcode.gUM) {\n                    try {\n                        if (thevideo.videoWidth == 0) {\n                            setTimeout(doScan, qrcode.interval);\n                            return;\n                        }\n                        else {\n                            qrcode.canvas_qr2.width = thevideo.videoWidth;\n                            qrcode.canvas_qr2.height = thevideo.videoHeight;\n                        }\n                        qrcode.qrcontext2.drawImage(thevideo, 0, 0);\n                        try {\n                            qrcode.decode();\n                        }\n                        catch (e) {\n                            log.debug(e);\n                            setTimeout(doScan, qrcode.interval);\n                        }\n                        ;\n                    }\n                    catch (e) {\n                        log.debug(e);\n                        setTimeout(doScan, qrcode.interval);\n                    }\n                    ;\n                }\n            }\n\n            doScan();\n\n        }\n\n        // CALLED FROM PUBLIC INTERFACE\n        // This stops the scan loop\n        qrcode.stopScan = function () {\n            qrcode.gUM = false;\n        }\n\n        // CALLED FROM PUBLIC INTERFACE\n        //will do a single scan on a canvas.\n        //scan loop uses a local canvas, but you can pass one in here if you want to.\n        qrcode.decode = function (thecanvas) {\n\n            if (thecanvas) {\n                var canvas_qr = thecanvas;\n                var context = qrcode.canvas_qr2.getContext('2d');\n            } else {\n                var canvas_qr = qrcode.canvas_qr2;\n                var context = qrcode.qrcontext2;\n            }\n\n\n            qrcode.width = canvas_qr.width;\n            qrcode.height = canvas_qr.height;\n            qrcode.imagedata = context.getImageData(0, 0, qrcode.width, qrcode.height);\n            qrcode.result = qrcode.process(context);\n            if (qrcode.callback != null)\n                qrcode.callback(qrcode.result);\n            return qrcode.result;\n\n        }\n\n        qrcode.isUrl = function (s) {\n            var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n            return regexp.test(s);\n        }\n\n        qrcode.decode_url = function (s) {\n            var escaped = \"\";\n            try {\n                escaped = escape(s);\n            }\n            catch (e) {\n                log.debug(e);\n                escaped = s;\n            }\n            var ret = \"\";\n            try {\n                ret = decodeURIComponent(escaped);\n            }\n            catch (e) {\n                log.debug(e);\n                ret = escaped;\n            }\n            return ret;\n        }\n\n        qrcode.decode_utf8 = function (s) {\n            if (qrcode.isUrl(s))\n                return qrcode.decode_url(s);\n            else\n                return s;\n        }\n\n        qrcode.process = function (ctx) {\n\n            var start = new Date().getTime();\n\n            var image = qrcode.grayScaleToBitmap(qrcode.grayscale());\n            //var image = qrcode.binarize(128);\n\n            if (qrcode.debug) {\n                for (var y = 0; y < qrcode.height; y++) {\n                    for (var x = 0; x < qrcode.width; x++) {\n                        var point = (x * 4) + (y * qrcode.width * 4);\n                        qrcode.imagedata.data[point] = image[x + y * qrcode.width] ? 0 : 0;\n                        qrcode.imagedata.data[point + 1] = image[x + y * qrcode.width] ? 0 : 0;\n                        qrcode.imagedata.data[point + 2] = image[x + y * qrcode.width] ? 255 : 0;\n                    }\n                }\n                ctx.putImageData(qrcode.imagedata, 0, 0);\n            }\n\n            //var finderPatternInfo = new FinderPatternFinder().findFinderPattern(image);\n\n            var detector = new Detector(image);\n\n            var qRCodeMatrix = detector.detect();\n\n            if (qrcode.debug) {\n                for (var y = 0; y < qRCodeMatrix.bits.Height; y++) {\n                    for (var x = 0; x < qRCodeMatrix.bits.Width; x++) {\n                        var point = (x * 4 * 2) + (y * 2 * qrcode.width * 4);\n                        qrcode.imagedata.data[point] = qRCodeMatrix.bits.get_Renamed(x, y) ? 0 : 0;\n                        qrcode.imagedata.data[point + 1] = qRCodeMatrix.bits.get_Renamed(x, y) ? 0 : 0;\n                        qrcode.imagedata.data[point + 2] = qRCodeMatrix.bits.get_Renamed(x, y) ? 255 : 0;\n                    }\n                }\n                ctx.putImageData(qrcode.imagedata, 0, 0);\n            }\n\n\n            var reader = Decoder.decode(qRCodeMatrix.bits);\n            var data = reader.DataByte;\n            var str = \"\";\n            for (var i = 0; i < data.length; i++) {\n                for (var j = 0; j < data[i].length; j++)\n                    str += String.fromCharCode(data[i][j]);\n            }\n\n            var end = new Date().getTime();\n            var time = end - start;\n            log.debug(time);\n\n            return qrcode.decode_utf8(str);\n            //alert(\"Time:\" + time + \" Code: \"+str);\n        }\n\n        qrcode.getPixel = function (x, y) {\n            if (qrcode.width < x) {\n                throw \"point error\";\n            }\n            if (qrcode.height < y) {\n                throw \"point error\";\n            }\n            var point = (x * 4) + (y * qrcode.width * 4);\n            var p = (qrcode.imagedata.data[point] * 33 + qrcode.imagedata.data[point + 1] * 34 + qrcode.imagedata.data[point + 2] * 33) / 100;\n            return p;\n        }\n\n        qrcode.binarize = function (th) {\n            var ret = new Array(qrcode.width * qrcode.height);\n            for (var y = 0; y < qrcode.height; y++) {\n                for (var x = 0; x < qrcode.width; x++) {\n                    var gray = qrcode.getPixel(x, y);\n\n                    ret[x + y * qrcode.width] = gray <= th ? true : false;\n                }\n            }\n            return ret;\n        }\n\n        qrcode.getMiddleBrightnessPerArea = function (image) {\n            var numSqrtArea = 4;\n            //obtain middle brightness((min + max) / 2) per area\n            var areaWidth = Math.floor(qrcode.width / numSqrtArea);\n            var areaHeight = Math.floor(qrcode.height / numSqrtArea);\n            var minmax = new Array(numSqrtArea);\n            for (var i = 0; i < numSqrtArea; i++) {\n                minmax[i] = new Array(numSqrtArea);\n                for (var i2 = 0; i2 < numSqrtArea; i2++) {\n                    minmax[i][i2] = new Array(0, 0);\n                }\n            }\n            for (var ay = 0; ay < numSqrtArea; ay++) {\n                for (var ax = 0; ax < numSqrtArea; ax++) {\n                    minmax[ax][ay][0] = 0xFF;\n                    for (var dy = 0; dy < areaHeight; dy++) {\n                        for (var dx = 0; dx < areaWidth; dx++) {\n                            var target = image[areaWidth * ax + dx + (areaHeight * ay + dy) * qrcode.width];\n                            if (target < minmax[ax][ay][0])\n                                minmax[ax][ay][0] = target;\n                            if (target > minmax[ax][ay][1])\n                                minmax[ax][ay][1] = target;\n                        }\n                    }\n                    //minmax[ax][ay][0] = (minmax[ax][ay][0] + minmax[ax][ay][1]) / 2;\n                }\n            }\n            var middle = new Array(numSqrtArea);\n            for (var i3 = 0; i3 < numSqrtArea; i3++) {\n                middle[i3] = new Array(numSqrtArea);\n            }\n            for (var ay = 0; ay < numSqrtArea; ay++) {\n                for (var ax = 0; ax < numSqrtArea; ax++) {\n                    middle[ax][ay] = Math.floor((minmax[ax][ay][0] + minmax[ax][ay][1]) / 2);\n                    //Console.out.print(middle[ax][ay] + \",\");\n                }\n                //Console.out.println(\"\");\n            }\n            //Console.out.println(\"\");\n\n            return middle;\n        }\n\n        qrcode.grayScaleToBitmap = function (grayScale) {\n            var middle = qrcode.getMiddleBrightnessPerArea(grayScale);\n            var sqrtNumArea = middle.length;\n            var areaWidth = Math.floor(qrcode.width / sqrtNumArea);\n            var areaHeight = Math.floor(qrcode.height / sqrtNumArea);\n\n            var buff = new ArrayBuffer(qrcode.width * qrcode.height);\n            var bitmap = new Uint8Array(buff);\n\n            //var bitmap = new Array(qrcode.height*qrcode.width);\n\n            for (var ay = 0; ay < sqrtNumArea; ay++) {\n                for (var ax = 0; ax < sqrtNumArea; ax++) {\n                    for (var dy = 0; dy < areaHeight; dy++) {\n                        for (var dx = 0; dx < areaWidth; dx++) {\n                            bitmap[areaWidth * ax + dx + (areaHeight * ay + dy) * qrcode.width] = (grayScale[areaWidth * ax + dx + (areaHeight * ay + dy) * qrcode.width] < middle[ax][ay]) ? true : false;\n                        }\n                    }\n                }\n            }\n            return bitmap;\n        }\n\n        qrcode.grayscale = function () {\n            var buff = new ArrayBuffer(qrcode.width * qrcode.height);\n            var ret = new Uint8Array(buff);\n            //var ret = new Array(qrcode.width*qrcode.height);\n\n            for (var y = 0; y < qrcode.height; y++) {\n                for (var x = 0; x < qrcode.width; x++) {\n                    var gray = qrcode.getPixel(x, y);\n\n                    ret[x + y * qrcode.width] = gray;\n                }\n            }\n            return ret;\n        }\n\n\n        function URShift(number, bits) {\n            if (number >= 0)\n                return number >> bits;\n            else\n                return (number >> bits) + (2 << ~bits);\n        }\n\n\n///--- FINDPAT.JS-------------------------------------------------\n\n\n        var MIN_SKIP = 3;\n        var MAX_MODULES = 57;\n        var INTEGER_MATH_SHIFT = 8;\n        var CENTER_QUORUM = 2;\n\n        qrcode.orderBestPatterns = function (patterns) {\n\n            function distance(pattern1, pattern2) {\n                var xDiff = pattern1.X - pattern2.X;\n                var yDiff = pattern1.Y - pattern2.Y;\n                return Math.sqrt((xDiff * xDiff + yDiff * yDiff));\n            }\n\n            /// <summary> Returns the z component of the cross product between vectors BC and BA.</summary>\n            function crossProductZ(pointA, pointB, pointC) {\n                var bX = pointB.x;\n                var bY = pointB.y;\n                return ((pointC.x - bX) * (pointA.y - bY)) - ((pointC.y - bY) * (pointA.x - bX));\n            }\n\n\n            // Find distances between pattern centers\n            var zeroOneDistance = distance(patterns[0], patterns[1]);\n            var oneTwoDistance = distance(patterns[1], patterns[2]);\n            var zeroTwoDistance = distance(patterns[0], patterns[2]);\n\n            var pointA, pointB, pointC;\n            // Assume one closest to other two is B; A and C will just be guesses at first\n            if (oneTwoDistance >= zeroOneDistance && oneTwoDistance >= zeroTwoDistance) {\n                pointB = patterns[0];\n                pointA = patterns[1];\n                pointC = patterns[2];\n            }\n            else if (zeroTwoDistance >= oneTwoDistance && zeroTwoDistance >= zeroOneDistance) {\n                pointB = patterns[1];\n                pointA = patterns[0];\n                pointC = patterns[2];\n            }\n            else {\n                pointB = patterns[2];\n                pointA = patterns[0];\n                pointC = patterns[1];\n            }\n\n            // Use cross product to figure out whether A and C are correct or flipped.\n            // This asks whether BC x BA has a positive z component, which is the arrangement\n            // we want for A, B, C. If it's negative, then we've got it flipped around and\n            // should swap A and C.\n            if (crossProductZ(pointA, pointB, pointC) < 0.0) {\n                var temp = pointA;\n                pointA = pointC;\n                pointC = temp;\n            }\n\n            patterns[0] = pointA;\n            patterns[1] = pointB;\n            patterns[2] = pointC;\n        }\n\n\n        function FinderPattern(posX, posY, estimatedModuleSize) {\n            this.x = posX;\n            this.y = posY;\n            this.count = 1;\n            this.estimatedModuleSize = estimatedModuleSize;\n\n            this.__defineGetter__(\"EstimatedModuleSize\", function () {\n                return this.estimatedModuleSize;\n            });\n            this.__defineGetter__(\"Count\", function () {\n                return this.count;\n            });\n            this.__defineGetter__(\"X\", function () {\n                return this.x;\n            });\n            this.__defineGetter__(\"Y\", function () {\n                return this.y;\n            });\n            this.incrementCount = function () {\n                this.count++;\n            }\n            this.aboutEquals = function (moduleSize, i, j) {\n                if (Math.abs(i - this.y) <= moduleSize && Math.abs(j - this.x) <= moduleSize) {\n                    var moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\n                    return moduleSizeDiff <= 1.0 || moduleSizeDiff / this.estimatedModuleSize <= 1.0;\n                }\n                return false;\n            }\n\n        }\n\n        function FinderPatternInfo(patternCenters) {\n            this.bottomLeft = patternCenters[0];\n            this.topLeft = patternCenters[1];\n            this.topRight = patternCenters[2];\n            this.__defineGetter__(\"BottomLeft\", function () {\n                return this.bottomLeft;\n            });\n            this.__defineGetter__(\"TopLeft\", function () {\n                return this.topLeft;\n            });\n            this.__defineGetter__(\"TopRight\", function () {\n                return this.topRight;\n            });\n        }\n\n        function FinderPatternFinder() {\n            this.image = null;\n            this.possibleCenters = [];\n            this.hasSkipped = false;\n            this.crossCheckStateCount = new Array(0, 0, 0, 0, 0);\n            this.resultPointCallback = null;\n\n            this.__defineGetter__(\"CrossCheckStateCount\", function () {\n                this.crossCheckStateCount[0] = 0;\n                this.crossCheckStateCount[1] = 0;\n                this.crossCheckStateCount[2] = 0;\n                this.crossCheckStateCount[3] = 0;\n                this.crossCheckStateCount[4] = 0;\n                return this.crossCheckStateCount;\n            });\n\n            this.foundPatternCross = function (stateCount) {\n                var totalModuleSize = 0;\n                for (var i = 0; i < 5; i++) {\n                    var count = stateCount[i];\n                    if (count == 0) {\n                        return false;\n                    }\n                    totalModuleSize += count;\n                }\n                if (totalModuleSize < 7) {\n                    return false;\n                }\n                var moduleSize = Math.floor((totalModuleSize << INTEGER_MATH_SHIFT) / 7);\n                var maxVariance = Math.floor(moduleSize / 2);\n                // Allow less than 50% variance from 1-1-3-1-1 proportions\n                return Math.abs(moduleSize - (stateCount[0] << INTEGER_MATH_SHIFT)) < maxVariance && Math.abs(moduleSize - (stateCount[1] << INTEGER_MATH_SHIFT)) < maxVariance && Math.abs(3 * moduleSize - (stateCount[2] << INTEGER_MATH_SHIFT)) < 3 * maxVariance && Math.abs(moduleSize - (stateCount[3] << INTEGER_MATH_SHIFT)) < maxVariance && Math.abs(moduleSize - (stateCount[4] << INTEGER_MATH_SHIFT)) < maxVariance;\n            }\n            this.centerFromEnd = function (stateCount, end) {\n                return (end - stateCount[4] - stateCount[3]) - stateCount[2] / 2.0;\n            }\n            this.crossCheckVertical = function (startI, centerJ, maxCount, originalStateCountTotal) {\n                var image = this.image;\n\n                var maxI = qrcode.height;\n                var stateCount = this.CrossCheckStateCount;\n\n                // Start counting up from center\n                var i = startI;\n                while (i >= 0 && image[centerJ + i * qrcode.width]) {\n                    stateCount[2]++;\n                    i--;\n                }\n                if (i < 0) {\n                    return NaN;\n                }\n                while (i >= 0 && !image[centerJ + i * qrcode.width] && stateCount[1] <= maxCount) {\n                    stateCount[1]++;\n                    i--;\n                }\n                // If already too many modules in this state or ran off the edge:\n                if (i < 0 || stateCount[1] > maxCount) {\n                    return NaN;\n                }\n                while (i >= 0 && image[centerJ + i * qrcode.width] && stateCount[0] <= maxCount) {\n                    stateCount[0]++;\n                    i--;\n                }\n                if (stateCount[0] > maxCount) {\n                    return NaN;\n                }\n\n                // Now also count down from center\n                i = startI + 1;\n                while (i < maxI && image[centerJ + i * qrcode.width]) {\n                    stateCount[2]++;\n                    i++;\n                }\n                if (i == maxI) {\n                    return NaN;\n                }\n                while (i < maxI && !image[centerJ + i * qrcode.width] && stateCount[3] < maxCount) {\n                    stateCount[3]++;\n                    i++;\n                }\n                if (i == maxI || stateCount[3] >= maxCount) {\n                    return NaN;\n                }\n                while (i < maxI && image[centerJ + i * qrcode.width] && stateCount[4] < maxCount) {\n                    stateCount[4]++;\n                    i++;\n                }\n                if (stateCount[4] >= maxCount) {\n                    return NaN;\n                }\n\n                // If we found a finder-pattern-like section, but its size is more than 40% different than\n                // the original, assume it's a false positive\n                var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\n                if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal) {\n                    return NaN;\n                }\n\n                return this.foundPatternCross(stateCount) ? this.centerFromEnd(stateCount, i) : NaN;\n            }\n            this.crossCheckHorizontal = function (startJ, centerI, maxCount, originalStateCountTotal) {\n                var image = this.image;\n\n                var maxJ = qrcode.width;\n                var stateCount = this.CrossCheckStateCount;\n\n                var j = startJ;\n                while (j >= 0 && image[j + centerI * qrcode.width]) {\n                    stateCount[2]++;\n                    j--;\n                }\n                if (j < 0) {\n                    return NaN;\n                }\n                while (j >= 0 && !image[j + centerI * qrcode.width] && stateCount[1] <= maxCount) {\n                    stateCount[1]++;\n                    j--;\n                }\n                if (j < 0 || stateCount[1] > maxCount) {\n                    return NaN;\n                }\n                while (j >= 0 && image[j + centerI * qrcode.width] && stateCount[0] <= maxCount) {\n                    stateCount[0]++;\n                    j--;\n                }\n                if (stateCount[0] > maxCount) {\n                    return NaN;\n                }\n\n                j = startJ + 1;\n                while (j < maxJ && image[j + centerI * qrcode.width]) {\n                    stateCount[2]++;\n                    j++;\n                }\n                if (j == maxJ) {\n                    return NaN;\n                }\n                while (j < maxJ && !image[j + centerI * qrcode.width] && stateCount[3] < maxCount) {\n                    stateCount[3]++;\n                    j++;\n                }\n                if (j == maxJ || stateCount[3] >= maxCount) {\n                    return NaN;\n                }\n                while (j < maxJ && image[j + centerI * qrcode.width] && stateCount[4] < maxCount) {\n                    stateCount[4]++;\n                    j++;\n                }\n                if (stateCount[4] >= maxCount) {\n                    return NaN;\n                }\n\n                // If we found a finder-pattern-like section, but its size is significantly different than\n                // the original, assume it's a false positive\n                var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\n                if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= originalStateCountTotal) {\n                    return NaN;\n                }\n\n                return this.foundPatternCross(stateCount) ? this.centerFromEnd(stateCount, j) : NaN;\n            }\n            this.handlePossibleCenter = function (stateCount, i, j) {\n                var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\n                var centerJ = this.centerFromEnd(stateCount, j); //float\n                var centerI = this.crossCheckVertical(i, Math.floor(centerJ), stateCount[2], stateCountTotal); //float\n                if (!isNaN(centerI)) {\n                    // Re-cross check\n                    centerJ = this.crossCheckHorizontal(Math.floor(centerJ), Math.floor(centerI), stateCount[2], stateCountTotal);\n                    if (!isNaN(centerJ)) {\n                        var estimatedModuleSize = stateCountTotal / 7.0;\n                        var found = false;\n                        var max = this.possibleCenters.length;\n                        for (var index = 0; index < max; index++) {\n                            var center = this.possibleCenters[index];\n                            // Look for about the same center and module size:\n                            if (center.aboutEquals(estimatedModuleSize, centerI, centerJ)) {\n                                center.incrementCount();\n                                found = true;\n                                break;\n                            }\n                        }\n                        if (!found) {\n                            var point = new FinderPattern(centerJ, centerI, estimatedModuleSize);\n                            this.possibleCenters.push(point);\n                            if (this.resultPointCallback != null) {\n                                this.resultPointCallback.foundPossibleResultPoint(point);\n                            }\n                        }\n                        return true;\n                    }\n                }\n                return false;\n            }\n\n            this.selectBestPatterns = function () {\n\n                var startSize = this.possibleCenters.length;\n                if (startSize < 3) {\n                    // Couldn't find enough finder patterns\n                    throw \"Couldn't find enough finder patterns (found \" + startSize + \")\"\n                }\n\n                // Filter outlier possibilities whose module size is too different\n                if (startSize > 3) {\n                    // But we can only afford to do so if we have at least 4 possibilities to choose from\n                    var totalModuleSize = 0.0;\n                    var square = 0.0;\n                    for (var i = 0; i < startSize; i++) {\n                        //totalModuleSize +=  this.possibleCenters[i].EstimatedModuleSize;\n                        var centerValue = this.possibleCenters[i].EstimatedModuleSize;\n                        totalModuleSize += centerValue;\n                        square += (centerValue * centerValue);\n                    }\n                    var average = totalModuleSize / startSize;\n                    this.possibleCenters.sort(function (center1, center2) {\n                        var dA = Math.abs(center2.EstimatedModuleSize - average);\n                        var dB = Math.abs(center1.EstimatedModuleSize - average);\n                        if (dA < dB) {\n                            return (-1);\n                        } else if (dA == dB) {\n                            return 0;\n                        } else {\n                            return 1;\n                        }\n                    });\n\n                    var stdDev = Math.sqrt(square / startSize - average * average);\n                    var limit = Math.max(0.2 * average, stdDev);\n                    //for (var i = 0; i < this.possibleCenters.length && this.possibleCenters.length > 3; i++)\n                    for (var i = this.possibleCenters.length - 1; i >= 0; i--) {\n                        var pattern = this.possibleCenters[i];\n                        //if (Math.abs(pattern.EstimatedModuleSize - average) > 0.2 * average)\n                        if (Math.abs(pattern.EstimatedModuleSize - average) > limit) {\n                            //this.possibleCenters.remove(i);\n                            this.possibleCenters.splice(i, 1);\n                            //i--;\n                        }\n                    }\n                }\n\n                if (this.possibleCenters.length > 3) {\n                    // Throw away all but those first size candidate points we found.\n                    this.possibleCenters.sort(function (a, b) {\n                        if (a.count > b.count) {\n                            return -1;\n                        }\n                        if (a.count < b.count) {\n                            return 1;\n                        }\n                        return 0;\n                    });\n                }\n\n                return new Array(this.possibleCenters[0], this.possibleCenters[1], this.possibleCenters[2]);\n            }\n\n            this.findRowSkip = function () {\n                var max = this.possibleCenters.length;\n                if (max <= 1) {\n                    return 0;\n                }\n                var firstConfirmedCenter = null;\n                for (var i = 0; i < max; i++) {\n                    var center = this.possibleCenters[i];\n                    if (center.Count >= CENTER_QUORUM) {\n                        if (firstConfirmedCenter == null) {\n                            firstConfirmedCenter = center;\n                        }\n                        else {\n                            // We have two confirmed centers\n                            // How far down can we skip before resuming looking for the next\n                            // pattern? In the worst case, only the difference between the\n                            // difference in the x / y coordinates of the two centers.\n                            // This is the case where you find top left last.\n                            this.hasSkipped = true;\n                            return Math.floor((Math.abs(firstConfirmedCenter.X - center.X) - Math.abs(firstConfirmedCenter.Y - center.Y)) / 2);\n                        }\n                    }\n                }\n                return 0;\n            }\n\n            this.haveMultiplyConfirmedCenters = function () {\n                var confirmedCount = 0;\n                var totalModuleSize = 0.0;\n                var max = this.possibleCenters.length;\n                for (var i = 0; i < max; i++) {\n                    var pattern = this.possibleCenters[i];\n                    if (pattern.Count >= CENTER_QUORUM) {\n                        confirmedCount++;\n                        totalModuleSize += pattern.EstimatedModuleSize;\n                    }\n                }\n                if (confirmedCount < 3) {\n                    return false;\n                }\n                // OK, we have at least 3 confirmed centers, but, it's possible that one is a \"false positive\"\n                // and that we need to keep looking. We detect this by asking if the estimated module sizes\n                // vary too much. We arbitrarily say that when the total deviation from average exceeds\n                // 5% of the total module size estimates, it's too much.\n                var average = totalModuleSize / max;\n                var totalDeviation = 0.0;\n                for (var i = 0; i < max; i++) {\n                    pattern = this.possibleCenters[i];\n                    totalDeviation += Math.abs(pattern.EstimatedModuleSize - average);\n                }\n                return totalDeviation <= 0.05 * totalModuleSize;\n            }\n\n            this.findFinderPattern = function (image) {\n                var tryHarder = false;\n                this.image = image;\n                var maxI = qrcode.height;\n                var maxJ = qrcode.width;\n                var iSkip = Math.floor((3 * maxI) / (4 * MAX_MODULES));\n                if (iSkip < MIN_SKIP || tryHarder) {\n                    iSkip = MIN_SKIP;\n                }\n\n                var done = false;\n                var stateCount = new Array(5);\n                for (var i = iSkip - 1; i < maxI && !done; i += iSkip) {\n                    // Get a row of black/white values\n                    stateCount[0] = 0;\n                    stateCount[1] = 0;\n                    stateCount[2] = 0;\n                    stateCount[3] = 0;\n                    stateCount[4] = 0;\n                    var currentState = 0;\n                    for (var j = 0; j < maxJ; j++) {\n                        if (image[j + i * qrcode.width]) {\n                            // Black pixel\n                            if ((currentState & 1) == 1) {\n                                // Counting white pixels\n                                currentState++;\n                            }\n                            stateCount[currentState]++;\n                        }\n                        else {\n                            // White pixel\n                            if ((currentState & 1) == 0) {\n                                // Counting black pixels\n                                if (currentState == 4) {\n                                    // A winner?\n                                    if (this.foundPatternCross(stateCount)) {\n                                        // Yes\n                                        var confirmed = this.handlePossibleCenter(stateCount, i, j);\n                                        if (confirmed) {\n                                            // Start examining every other line. Checking each line turned out to be too\n                                            // expensive and didn't improve performance.\n                                            iSkip = 2;\n                                            if (this.hasSkipped) {\n                                                done = this.haveMultiplyConfirmedCenters();\n                                            }\n                                            else {\n                                                var rowSkip = this.findRowSkip();\n                                                if (rowSkip > stateCount[2]) {\n                                                    // Skip rows between row of lower confirmed center\n                                                    // and top of presumed third confirmed center\n                                                    // but back up a bit to get a full chance of detecting\n                                                    // it, entire width of center of finder pattern\n\n                                                    // Skip by rowSkip, but back off by stateCount[2] (size of last center\n                                                    // of pattern we saw) to be conservative, and also back off by iSkip which\n                                                    // is about to be re-added\n                                                    i += rowSkip - stateCount[2] - iSkip;\n                                                    j = maxJ - 1;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            // Advance to next black pixel\n                                            do {\n                                                j++;\n                                            }\n                                            while (j < maxJ && !image[j + i * qrcode.width]);\n                                            j--; // back up to that last white pixel\n                                        }\n                                        // Clear state to start looking again\n                                        currentState = 0;\n                                        stateCount[0] = 0;\n                                        stateCount[1] = 0;\n                                        stateCount[2] = 0;\n                                        stateCount[3] = 0;\n                                        stateCount[4] = 0;\n                                    }\n                                    else {\n                                        // No, shift counts back by two\n                                        stateCount[0] = stateCount[2];\n                                        stateCount[1] = stateCount[3];\n                                        stateCount[2] = stateCount[4];\n                                        stateCount[3] = 1;\n                                        stateCount[4] = 0;\n                                        currentState = 3;\n                                    }\n                                }\n                                else {\n                                    stateCount[++currentState]++;\n                                }\n                            }\n                            else {\n                                // Counting white pixels\n                                stateCount[currentState]++;\n                            }\n                        }\n                    }\n                    if (this.foundPatternCross(stateCount)) {\n                        var confirmed = this.handlePossibleCenter(stateCount, i, maxJ);\n                        if (confirmed) {\n                            iSkip = stateCount[0];\n                            if (this.hasSkipped) {\n                                // Found a third one\n                                done = this.haveMultiplyConfirmedCenters();\n                            }\n                        }\n                    }\n                }\n\n                var patternInfo = this.selectBestPatterns();\n                qrcode.orderBestPatterns(patternInfo);\n\n                return new FinderPatternInfo(patternInfo);\n            };\n        }\n\n///--- ALIGNPAT.JS-------------------------------------------------\n\n\n        function AlignmentPattern(posX, posY, estimatedModuleSize) {\n            this.x = posX;\n            this.y = posY;\n            this.count = 1;\n            this.estimatedModuleSize = estimatedModuleSize;\n\n            this.__defineGetter__(\"EstimatedModuleSize\", function () {\n                return this.estimatedModuleSize;\n            });\n            this.__defineGetter__(\"Count\", function () {\n                return this.count;\n            });\n            this.__defineGetter__(\"X\", function () {\n                return Math.floor(this.x);\n            });\n            this.__defineGetter__(\"Y\", function () {\n                return Math.floor(this.y);\n            });\n            this.incrementCount = function () {\n                this.count++;\n            }\n            this.aboutEquals = function (moduleSize, i, j) {\n                if (Math.abs(i - this.y) <= moduleSize && Math.abs(j - this.x) <= moduleSize) {\n                    var moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\n                    return moduleSizeDiff <= 1.0 || moduleSizeDiff / this.estimatedModuleSize <= 1.0;\n                }\n                return false;\n            }\n\n        }\n\n        function AlignmentPatternFinder(image, startX, startY, width, height, moduleSize, resultPointCallback) {\n            this.image = image;\n            this.possibleCenters = new Array();\n            this.startX = startX;\n            this.startY = startY;\n            this.width = width;\n            this.height = height;\n            this.moduleSize = moduleSize;\n            this.crossCheckStateCount = new Array(0, 0, 0);\n            this.resultPointCallback = resultPointCallback;\n\n            this.centerFromEnd = function (stateCount, end) {\n                return (end - stateCount[2]) - stateCount[1] / 2.0;\n            }\n            this.foundPatternCross = function (stateCount) {\n                var moduleSize = this.moduleSize;\n                var maxVariance = moduleSize / 2.0;\n                for (var i = 0; i < 3; i++) {\n                    if (Math.abs(moduleSize - stateCount[i]) >= maxVariance) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n\n            this.crossCheckVertical = function (startI, centerJ, maxCount, originalStateCountTotal) {\n                var image = this.image;\n\n                var maxI = qrcode.height;\n                var stateCount = this.crossCheckStateCount;\n                stateCount[0] = 0;\n                stateCount[1] = 0;\n                stateCount[2] = 0;\n\n                // Start counting up from center\n                var i = startI;\n                while (i >= 0 && image[centerJ + i * qrcode.width] && stateCount[1] <= maxCount) {\n                    stateCount[1]++;\n                    i--;\n                }\n                // If already too many modules in this state or ran off the edge:\n                if (i < 0 || stateCount[1] > maxCount) {\n                    return NaN;\n                }\n                while (i >= 0 && !image[centerJ + i * qrcode.width] && stateCount[0] <= maxCount) {\n                    stateCount[0]++;\n                    i--;\n                }\n                if (stateCount[0] > maxCount) {\n                    return NaN;\n                }\n\n                // Now also count down from center\n                i = startI + 1;\n                while (i < maxI && image[centerJ + i * qrcode.width] && stateCount[1] <= maxCount) {\n                    stateCount[1]++;\n                    i++;\n                }\n                if (i == maxI || stateCount[1] > maxCount) {\n                    return NaN;\n                }\n                while (i < maxI && !image[centerJ + i * qrcode.width] && stateCount[2] <= maxCount) {\n                    stateCount[2]++;\n                    i++;\n                }\n                if (stateCount[2] > maxCount) {\n                    return NaN;\n                }\n\n                var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];\n                if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal) {\n                    return NaN;\n                }\n\n                return this.foundPatternCross(stateCount) ? this.centerFromEnd(stateCount, i) : NaN;\n            }\n\n            this.handlePossibleCenter = function (stateCount, i, j) {\n                var stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];\n                var centerJ = this.centerFromEnd(stateCount, j);\n                var centerI = this.crossCheckVertical(i, Math.floor(centerJ), 2 * stateCount[1], stateCountTotal);\n                if (!isNaN(centerI)) {\n                    var estimatedModuleSize = (stateCount[0] + stateCount[1] + stateCount[2]) / 3.0;\n                    var max = this.possibleCenters.length;\n                    for (var index = 0; index < max; index++) {\n                        var center = this.possibleCenters[index];\n                        // Look for about the same center and module size:\n                        if (center.aboutEquals(estimatedModuleSize, centerI, centerJ)) {\n                            return new AlignmentPattern(centerJ, centerI, estimatedModuleSize);\n                        }\n                    }\n                    // Hadn't found this before; save it\n                    var point = new AlignmentPattern(centerJ, centerI, estimatedModuleSize);\n                    this.possibleCenters.push(point);\n                    if (this.resultPointCallback != null) {\n                        this.resultPointCallback.foundPossibleResultPoint(point);\n                    }\n                }\n                return null;\n            }\n\n            this.find = function () {\n                var startX = this.startX;\n                var height = this.height;\n                var maxJ = startX + width;\n                var middleI = startY + (height >> 1);\n                // We are looking for black/white/black modules in 1:1:1 ratio;\n                // this tracks the number of black/white/black modules seen so far\n                var stateCount = new Array(0, 0, 0);\n                for (var iGen = 0; iGen < height; iGen++) {\n                    // Search from middle outwards\n                    var i = middleI + ((iGen & 0x01) == 0 ? ((iGen + 1) >> 1) : -((iGen + 1) >> 1));\n                    stateCount[0] = 0;\n                    stateCount[1] = 0;\n                    stateCount[2] = 0;\n                    var j = startX;\n                    // Burn off leading white pixels before anything else; if we start in the middle of\n                    // a white run, it doesn't make sense to count its length, since we don't know if the\n                    // white run continued to the left of the start point\n                    while (j < maxJ && !image[j + qrcode.width * i]) {\n                        j++;\n                    }\n                    var currentState = 0;\n                    while (j < maxJ) {\n                        if (image[j + i * qrcode.width]) {\n                            // Black pixel\n                            if (currentState == 1) {\n                                // Counting black pixels\n                                stateCount[currentState]++;\n                            }\n                            else {\n                                // Counting white pixels\n                                if (currentState == 2) {\n                                    // A winner?\n                                    if (this.foundPatternCross(stateCount)) {\n                                        // Yes\n                                        var confirmed = this.handlePossibleCenter(stateCount, i, j);\n                                        if (confirmed != null) {\n                                            return confirmed;\n                                        }\n                                    }\n                                    stateCount[0] = stateCount[2];\n                                    stateCount[1] = 1;\n                                    stateCount[2] = 0;\n                                    currentState = 1;\n                                }\n                                else {\n                                    stateCount[++currentState]++;\n                                }\n                            }\n                        }\n                        else {\n                            // White pixel\n                            if (currentState == 1) {\n                                // Counting black pixels\n                                currentState++;\n                            }\n                            stateCount[currentState]++;\n                        }\n                        j++;\n                    }\n                    if (this.foundPatternCross(stateCount)) {\n                        var confirmed = this.handlePossibleCenter(stateCount, i, maxJ);\n                        if (confirmed != null) {\n                            return confirmed;\n                        }\n                    }\n                }\n\n                // Hmm, nothing we saw was observed and confirmed twice. If we had\n                // any guess at all, return it.\n                if (!(this.possibleCenters.length == 0)) {\n                    return this.possibleCenters[0];\n                }\n\n                throw \"Couldn't find enough alignment patterns\";\n            }\n\n        }\n\n///--- DATABR.JS-------------------------------------------------\n\n\n        function QRCodeDataBlockReader(blocks, version, numErrorCorrectionCode) {\n            this.blockPointer = 0;\n            this.bitPointer = 7;\n            this.dataLength = 0;\n            this.blocks = blocks;\n            this.numErrorCorrectionCode = numErrorCorrectionCode;\n            if (version <= 9)\n                this.dataLengthMode = 0;\n            else if (version >= 10 && version <= 26)\n                this.dataLengthMode = 1;\n            else if (version >= 27 && version <= 40)\n                this.dataLengthMode = 2;\n\n            this.getNextBits = function (numBits) {\n                var bits = 0;\n                if (numBits < this.bitPointer + 1) {\n                    // next word fits into current data block\n                    var mask = 0;\n                    for (var i = 0; i < numBits; i++) {\n                        mask += (1 << i);\n                    }\n                    mask <<= (this.bitPointer - numBits + 1);\n\n                    bits = (this.blocks[this.blockPointer] & mask) >> (this.bitPointer - numBits + 1);\n                    this.bitPointer -= numBits;\n                    return bits;\n                }\n                else if (numBits < this.bitPointer + 1 + 8) {\n                    // next word crosses 2 data blocks\n                    var mask1 = 0;\n                    for (var i = 0; i < this.bitPointer + 1; i++) {\n                        mask1 += (1 << i);\n                    }\n                    bits = (this.blocks[this.blockPointer] & mask1) << (numBits - (this.bitPointer + 1));\n                    this.blockPointer++;\n                    bits += ((this.blocks[this.blockPointer]) >> (8 - (numBits - (this.bitPointer + 1))));\n\n                    this.bitPointer = this.bitPointer - numBits % 8;\n                    if (this.bitPointer < 0) {\n                        this.bitPointer = 8 + this.bitPointer;\n                    }\n                    return bits;\n                }\n                else if (numBits < this.bitPointer + 1 + 16) {\n                    // next word crosses 3 data blocks\n                    var mask1 = 0; // mask of first block\n                    var mask3 = 0; // mask of 3rd block\n                    //bitPointer + 1 : number of bits of the 1st block\n                    //8 : number of the 2nd block (note that use already 8bits because next word uses 3 data blocks)\n                    //numBits - (bitPointer + 1 + 8) : number of bits of the 3rd block\n                    for (var i = 0; i < this.bitPointer + 1; i++) {\n                        mask1 += (1 << i);\n                    }\n                    var bitsFirstBlock = (this.blocks[this.blockPointer] & mask1) << (numBits - (this.bitPointer + 1));\n                    this.blockPointer++;\n\n                    var bitsSecondBlock = this.blocks[this.blockPointer] << (numBits - (this.bitPointer + 1 + 8));\n                    this.blockPointer++;\n\n                    for (var i = 0; i < numBits - (this.bitPointer + 1 + 8); i++) {\n                        mask3 += (1 << i);\n                    }\n                    mask3 <<= 8 - (numBits - (this.bitPointer + 1 + 8));\n                    var bitsThirdBlock = (this.blocks[this.blockPointer] & mask3) >> (8 - (numBits - (this.bitPointer + 1 + 8)));\n\n                    bits = bitsFirstBlock + bitsSecondBlock + bitsThirdBlock;\n                    this.bitPointer = this.bitPointer - (numBits - 8) % 8;\n                    if (this.bitPointer < 0) {\n                        this.bitPointer = 8 + this.bitPointer;\n                    }\n                    return bits;\n                }\n                else {\n                    return 0;\n                }\n            }\n            this.NextMode = function () {\n                if ((this.blockPointer > this.blocks.length - this.numErrorCorrectionCode - 2))\n                    return 0;\n                else\n                    return this.getNextBits(4);\n            }\n            this.getDataLength = function (modeIndicator) {\n                var index = 0;\n                while (true) {\n                    if ((modeIndicator >> index) == 1)\n                        break;\n                    index++;\n                }\n\n                return this.getNextBits(qrcode.sizeOfDataLengthInfo[this.dataLengthMode][index]);\n            }\n            this.getRomanAndFigureString = function (dataLength) {\n                var length = dataLength;\n                var intData = 0;\n                var strData = \"\";\n                var tableRomanAndFigure = new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', '$', '%', '*', '+', '-', '.', '/', ':');\n                do {\n                    if (length > 1) {\n                        intData = this.getNextBits(11);\n                        var firstLetter = Math.floor(intData / 45);\n                        var secondLetter = intData % 45;\n                        strData += tableRomanAndFigure[firstLetter];\n                        strData += tableRomanAndFigure[secondLetter];\n                        length -= 2;\n                    }\n                    else if (length == 1) {\n                        intData = this.getNextBits(6);\n                        strData += tableRomanAndFigure[intData];\n                        length -= 1;\n                    }\n                }\n                while (length > 0);\n\n                return strData;\n            }\n            this.getFigureString = function (dataLength) {\n                var length = dataLength;\n                var intData = 0;\n                var strData = \"\";\n                do {\n                    if (length >= 3) {\n                        intData = this.getNextBits(10);\n                        if (intData < 100)\n                            strData += \"0\";\n                        if (intData < 10)\n                            strData += \"0\";\n                        length -= 3;\n                    }\n                    else if (length == 2) {\n                        intData = this.getNextBits(7);\n                        if (intData < 10)\n                            strData += \"0\";\n                        length -= 2;\n                    }\n                    else if (length == 1) {\n                        intData = this.getNextBits(4);\n                        length -= 1;\n                    }\n                    strData += intData;\n                }\n                while (length > 0);\n\n                return strData;\n            }\n            this.get8bitByteArray = function (dataLength) {\n                var length = dataLength;\n                var intData = 0;\n                var output = new Array();\n\n                do {\n                    intData = this.getNextBits(8);\n                    output.push(intData);\n                    length--;\n                }\n                while (length > 0);\n                return output;\n            }\n            this.getKanjiString = function (dataLength) {\n                var length = dataLength;\n                var intData = 0;\n                var unicodeString = \"\";\n                do {\n                    intData = this.getNextBits(13);\n                    var lowerByte = intData % 0xC0;\n                    var higherByte = intData / 0xC0;\n\n                    var tempWord = (higherByte << 8) + lowerByte;\n                    var shiftjisWord = 0;\n                    if (tempWord + 0x8140 <= 0x9FFC) {\n                        // between 8140 - 9FFC on Shift_JIS character set\n                        shiftjisWord = tempWord + 0x8140;\n                    }\n                    else {\n                        // between E040 - EBBF on Shift_JIS character set\n                        shiftjisWord = tempWord + 0xC140;\n                    }\n\n                    //var tempByte = new Array(0,0);\n                    //tempByte[0] = (sbyte) (shiftjisWord >> 8);\n                    //tempByte[1] = (sbyte) (shiftjisWord & 0xFF);\n                    //unicodeString += new String(SystemUtils.ToCharArray(SystemUtils.ToByteArray(tempByte)));\n                    unicodeString += String.fromCharCode(shiftjisWord);\n                    length--;\n                }\n                while (length > 0);\n\n\n                return unicodeString;\n            }\n\n            this.parseECIValue = function () {\n                var intData = 0;\n                var firstByte = this.getNextBits(8);\n                if ((firstByte & 0x80) == 0) {\n                    intData = firstByte & 0x7F;\n                }\n                if ((firstByte & 0xC0) == 0x80) {\n                    // two bytes\n                    var secondByte = this.getNextBits(8);\n                    intData = ((firstByte & 0x3F) << 8) | secondByte;\n                }\n                if ((firstByte & 0xE0) == 0xC0) {\n                    // three bytes\n                    var secondThirdBytes = this.getNextBits(8);\n                    ;\n                    intData = ((firstByte & 0x1F) << 16) | secondThirdBytes;\n                }\n                return intData;\n            }\n\n            this.__defineGetter__(\"DataByte\", function () {\n                var output = new Array();\n                var MODE_NUMBER = 1;\n                var MODE_ROMAN_AND_NUMBER = 2;\n                var MODE_8BIT_BYTE = 4;\n                var MODE_ECI = 7;\n                var MODE_KANJI = 8;\n                do {\n                    var mode = this.NextMode();\n                    //canvas.println(\"mode: \" + mode);\n                    if (mode == 0) {\n                        if (output.length > 0)\n                            break;\n                        else\n                            throw \"Empty data block\";\n                    }\n                    if (mode != MODE_NUMBER && mode != MODE_ROMAN_AND_NUMBER && mode != MODE_8BIT_BYTE && mode != MODE_KANJI && mode != MODE_ECI) {\n                        throw \"Invalid mode: \" + mode + \" in (block:\" + this.blockPointer + \" bit:\" + this.bitPointer + \")\";\n                    }\n\n                    if (mode == MODE_ECI) {\n                        var temp_sbyteArray3 = this.parseECIValue();\n                        //output.push(temp_sbyteArray3);\n                    }\n                    else {\n\n                        var dataLength = this.getDataLength(mode);\n                        if (dataLength < 1)\n                            throw \"Invalid data length: \" + dataLength;\n                        switch (mode) {\n\n                            case MODE_NUMBER:\n                                var temp_str = this.getFigureString(dataLength);\n                                var ta = new Array(temp_str.length);\n                                for (var j = 0; j < temp_str.length; j++)\n                                    ta[j] = temp_str.charCodeAt(j);\n                                output.push(ta);\n                                break;\n\n                            case MODE_ROMAN_AND_NUMBER:\n                                var temp_str = this.getRomanAndFigureString(dataLength);\n                                var ta = new Array(temp_str.length);\n                                for (var j = 0; j < temp_str.length; j++)\n                                    ta[j] = temp_str.charCodeAt(j);\n                                output.push(ta);\n                                break;\n\n                            case MODE_8BIT_BYTE:\n                                var temp_sbyteArray3 = this.get8bitByteArray(dataLength);\n                                output.push(temp_sbyteArray3);\n                                break;\n\n                            case MODE_KANJI:\n                                var temp_str = this.getKanjiString(dataLength);\n                                output.push(temp_str);\n                                break;\n                        }\n                    }\n                }\n                while (true);\n                return output;\n            });\n        }\n\n\n///---END-------------------------------------------------\n\n        return {\n            startWebCam: function (videoid) {\n                qrcode.startWebCam(videoid);\n            },\n            stopWebCam: function (videoid) {\n                qrcode.stopWebCam();\n            },\n            startScan: function (videoid) {\n                qrcode.startScan(videoid);\n            },\n            stopScan: function (videoid) {\n                qrcode.stopScan();\n            },\n            setCallback: function (callback) {\n                qrcode.callback = callback;\n            },\n            decode: function (canvas) {\n                qrcode.decode(canvas)\n            }\n        };\n    }\n);\n"],"file":"poodll_qrscanner.min.js"}