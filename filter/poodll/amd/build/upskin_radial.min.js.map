{"version":3,"file":"upskin_radial.min.js","sources":["../src/upskin_radial.js"],"sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log', 'filter_poodll/anim_progress_radial'], function ($, log, radial) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('upskin_bar: initialising');\n\n    return {\n        element: null,\n        cvs: null,\n        percent: 0,\n        progressradial: null,\n        messagearea: null,\n\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        //init\n        init: function (config, element, cvs, messagearea) {\n            this.config = config;\n            this.element = element;\n            this.cvs = cvs;\n            this.progressradial = radial.clone();\n            this.messagearea = messagearea;\n        },\n\n        setDrawParam: function (paramkey, paramvalue) {\n            this.progressradial.setDrawParam(paramkey, paramvalue);\n        },\n\n        initControls: function () {\n            var self = this;\n            var showpercent = true;\n            this.progressradial.init(this.cvs, '#93c47d', showpercent);\n            this.progressradial.fetchCurrent = function () {\n                return self.percent;\n            };\n        },\n\n        //create a progress bar\n        initProgressSession: function (xhr) {\n            var self = this;\n            self.percent = 0;\n            var uploadingmessage = M.util.get_string('recui_uploading', 'filter_poodll');\n            // Handle event\n            xhr.upload.addEventListener(\"progress\", function (e) {\n                if (e.lengthComputable) {\n                    self.percent = e.loaded / e.total;\n                    self.showMessage(uploadingmessage + '(' + Math.floor(self.percent * 100) + '%)');\n                }\n            });\n            this.progressradial.start();\n        },\n\n        deactivateProgressSession: function () {\n            this.progressradial.stop();\n            log.debug('deactivating session');\n        },\n\n        showMessage: function (msg, msgid) {\n            switch (msgid) {\n                //once and readaloud skins do not offer playback so we just skin this\n                case 'recui_awaitingconversion':\n                    break;\n                default:\n                    this.messagearea.html(msg);\n            }\n        }//End of show message\n    };//end of returned object\n});//total end\n"],"names":["define","$","log","radial","debug","element","cvs","percent","progressradial","messagearea","clone","extend","this","init","config","setDrawParam","paramkey","paramvalue","initControls","self","fetchCurrent","initProgressSession","xhr","uploadingmessage","M","util","get_string","upload","addEventListener","e","lengthComputable","loaded","total","showMessage","Math","floor","start","deactivateProgressSession","stop","msg","msgid","html"],"mappings":"AACAA,qCAAO,CAAC,SAAU,WAAY,uCAAuC,SAAUC,EAAGC,IAAKC,eAInFD,IAAIE,MAAM,4BAEH,CACHC,QAAS,KACTC,IAAK,KACLC,QAAS,EACTC,eAAgB,KAChBC,YAAa,KAIbC,MAAO,kBACIT,EAAEU,QAAO,EAAM,GAAIC,OAI9BC,KAAM,SAAUC,OAAQT,QAASC,IAAKG,kBAC7BK,OAASA,YACTT,QAAUA,aACVC,IAAMA,SACNE,eAAiBL,OAAOO,aACxBD,YAAcA,aAGvBM,aAAc,SAAUC,SAAUC,iBACzBT,eAAeO,aAAaC,SAAUC,aAG/CC,aAAc,eACNC,KAAOP,UAENJ,eAAeK,KAAKD,KAAKN,IAAK,WADjB,QAEbE,eAAeY,aAAe,kBACxBD,KAAKZ,UAKpBc,oBAAqB,SAAUC,SACvBH,KAAOP,KACXO,KAAKZ,QAAU,MACXgB,iBAAmBC,EAAEC,KAAKC,WAAW,kBAAmB,iBAE5DJ,IAAIK,OAAOC,iBAAiB,YAAY,SAAUC,GAC1CA,EAAEC,mBACFX,KAAKZ,QAAUsB,EAAEE,OAASF,EAAEG,MAC5Bb,KAAKc,YAAYV,iBAAmB,IAAMW,KAAKC,MAAqB,IAAfhB,KAAKZ,SAAiB,eAG9EC,eAAe4B,SAGxBC,0BAA2B,gBAClB7B,eAAe8B,OACpBpC,IAAIE,MAAM,yBAGd6B,YAAa,SAAUM,IAAKC,UAGf,6BAFDA,iBAKK/B,YAAYgC,KAAKF"}