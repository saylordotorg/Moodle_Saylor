{"version":3,"file":"poodll_bmrmediaskin.min.js","sources":["../src/poodll_bmrmediaskin.js"],"sourcesContent":["/* jshint ignore:start */\ndefine(['jquery',  'core/log', 'filter_poodll/utils_amd', 'filter_poodll/dlg_devicesettings', 'filter_poodll/anim_progress_bar', 'filter_poodll/upskin_bar'],\n    function ($, log, utils, settings, anim_progress_bar, upskin_bar) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('PoodLL BMR Skin: initialising');\n\n\n    return {\n\n        instanceprops: null,\n        pmr: null,\n        uploaded: false,\n        devsettings: null,\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        init: function (ip, pmr) {\n            this.instanceprops = ip;\n            this.pmr = pmr;\n            this.devsettings = settings.clone();\n            this.devsettings.init(pmr, ip);\n        },\n\n\n        fetch_instanceprops: function () {\n            return this.instanceprops;\n        },\n\n\n        onUploadSuccess: function (controlbarid) {\n            $('#' + controlbarid + ' > .poodll_save-recording').hide();\n            // $('#' + controlbarid  + '_messages').hide();\n            $('#' + controlbarid + ' > .poodll_savedsuccessfully').show();\n        },\n\n        onUploadFailure: function (controlbarid) {\n            return;\n        },\n\n        fetch_status_bar: function (skin) {\n            // var status = '<div class=\"poodll_status_' + skin + '\" width=\"320\" height=\"50\">00:00:00</div>';\n            var status = '<div class=\"poodll_status_' + skin + '\">00:00:00</div>';\n            return status;\n        },\n\n        fetch_preview_audio: function (skin) {\n            var preview = '<audio class=\"poodll_preview_' + skin + ' hide\" controls playsinline=\"playsinline\" muted></audio>';\n            return preview;\n        },\n        fetch_preview_video: function (skin) {\n            var preview = '<video class=\"poodll_preview_' + skin + '\" playsinline=\"playsinline\" muted></video>';\n            return preview;\n        },\n        fetch_resource_audio: function (skin) {\n            var resourceplayer = '';\n            return resourceplayer;\n        },\n        fetch_resource_video: function (skin) {\n            var resourceplayer = '';\n            return resourceplayer;\n        },\n\n        fetch_uploader_skin: function (controlbarid, element) {\n            var ip = this.fetch_instanceprops(controlbarid);\n            var upskin = upskin_bar.clone();\n            upskin.init(ip.config, element, ip.controlbar.bmr_progresscanvas, ip.controlbar.status);\n            return upskin;\n        },\n\n        onMediaError: function (e) {\n            console.error('media error', e);\n        },\n\n        onMediaSuccess_video: function (controlbarid) {\n\n            var ip = this.fetch_instanceprops(controlbarid);\n            //clear messages\n            ip.uploader.Output('');\n            this.set_visual_mode('recordmode', controlbarid);\n            //timer and status bar\n            ip.timer.reset();\n            ip.timer.start();\n            this.update_status(controlbarid);\n        },\n\n        onMediaSuccess_audio: function (controlbarid) {\n\n\n            var ip = this.fetch_instanceprops(controlbarid);\n            //clear messages\n            ip.uploader.Output('');\n            ip.controlbar.preview.attr('src', null);\n            this.set_visual_mode('recordmode', controlbarid);\n\n            //timer and status bar\n            ip.timer.reset();\n            ip.timer.start();\n            this.update_status(controlbarid);\n        },\n\n        handle_timer_update: function (controlbarid) {\n            var ip = this.fetch_instanceprops(controlbarid);\n            ip.controlbar.status.html(ip.timer.fetch_display_time());\n            if (ip.timer.seconds == 0 && ip.timer.initseconds > 0) {\n                ip.controlbar.stopbutton.click();\n            }\n        },\n\n        update_status: function (controlbarid) {\n            var ip = this.fetch_instanceprops(controlbarid);\n            ip.controlbar.status.html(ip.timer.fetch_display_time());\n        },\n\n        //set visuals for different states (ie recording or playing)\n        set_visual_mode: function (mode, controlbarid) {\n            var self = this;\n            var ip = this.fetch_instanceprops(controlbarid);\n            this.visualmode = mode;\n\n            switch (mode) {\n\n                case 'recordmode':\n\n                    self.disable_button(ip.controlbar.startbutton);\n                    self.show_element(ip.controlbar.startbutton);\n\n                    self.hide_element(ip.controlbar.bmr_progresscanvas);\n\n                    self.enable_button(ip.controlbar.pausebutton);\n                    self.show_element(ip.controlbar.pausebutton);\n\n                    self.disable_button(ip.controlbar.playbutton);\n                    self.hide_element(ip.controlbar.resumebutton);\n                    self.enable_button(ip.controlbar.stopbutton);\n\n                    //disable save button\n                    self.disable_button(ip.controlbar.savebutton);\n\n                    ip.controlbar.preview.addClass('poodll_recording');\n                    ip.controlbar.status.addClass('poodll_recording');\n\n                    if (ip.config.mediatype == 'audio') {\n                        self.hide_element(ip.controlbar.preview);\n                    }\n                    break;\n\n                case 'previewmode':\n\n                    self.disable_button(ip.controlbar.stopbutton);\n                    self.enable_button(ip.controlbar.playbutton);\n                    self.disable_button(ip.controlbar.pausebutton);\n                    self.enable_button(ip.controlbar.savebutton);\n\n                    //reset timer button\n                    ip.controlbar.status.html(ip.timer.fetch_display_time(ip.timer.finalSeconds));\n\n\n                    //If stop has been pressed there is no \"resuming\"\n                    self.show_element(ip.controlbar.startbutton);\n\n                    self.disable_button(ip.controlbar.resumebutton);\n                    self.hide_element(ip.controlbar.resumebutton);\n                    self.hide_element(ip.controlbar.bmr_progresscanvas);\n\n                    if (!self.uploaded) {\n                        self.enable_button(ip.controlbar.startbutton);\n                        self.enable_button(ip.controlbar.savebutton);\n                    }\n\n                    self.show_element(ip.controlbar.pausebutton);\n\n                    ip.controlbar.preview.removeClass('poodll_recording');\n                    ip.controlbar.status.removeClass('poodll_recording');\n\n\n                    if (ip.config.mediatype == 'audio') {\n                        self.show_element(ip.controlbar.preview);\n                    }\n                    // ip.controlbar.status.addClass('hide');\n                    //ip.controlbar.bmr_progresscanvas.removeClass('hide');\n                    self.enable_button(ip.controlbar.playbutton);\n\n                    break;\n\n                case 'playmode':\n                    ip.controlbar.status.html('00:00:00');\n                    self.disable_button(ip.controlbar.playbutton);\n                    self.enable_button(ip.controlbar.stopbutton);\n                    self.disable_button(ip.controlbar.startbutton);\n                    self.disable_button(ip.controlbar.resumebutton);\n                    self.disable_button(ip.controlbar.playbutton);\n                    self.show_element(ip.controlbar.bmr_progresscanvas);\n\n                    //If play has been pressed there is no \"resuming\"\n                    self.show_element(ip.controlbar.startbutton);\n                    self.hide_element(ip.controlbar.resumebutton);\n\n                    break;\n\n\n                case 'pausedmode':\n\n                    self.disable_button(ip.controlbar.pausebutton);\n                    self.hide_element(ip.controlbar.startbutton);\n                    self.show_element(ip.controlbar.resumebutton);\n                    self.enable_button(ip.controlbar.resumebutton);\n                    self.enable_button(ip.controlbar.savebutton);\n\n                    ip.controlbar.preview.removeClass('poodll_recording');\n                    ip.controlbar.status.removeClass('poodll_recording');\n                    break;\n\n                case 'uploadmode':\n                    self.disable_button(ip.controlbar.savebutton);\n                    self.disable_button(ip.controlbar.startbutton);\n                    self.show_element(ip.controlbar.bmr_progresscanvas);\n                    break;\n            }\n\n        },\n\n        //insert the control bar and return it to be reused\n        insert_controlbar_video: function (element, controlbarid, preview, resource) {\n            var controlbar = this.prepare_controlbar(element, controlbarid, preview, resource, 'video');\n            return controlbar;\n        },\n\n        //insert the control bar and return it to be reused\n        insert_controlbar_audio: function (element, controlbarid, preview, resource) {\n            var controlbar = this.prepare_controlbar(element, controlbarid, preview, resource, 'audio');\n            return controlbar;\n        },\n\n        //insert the control bar and return it to be reused\n        prepare_controlbar: function (element, controlbarid, preview, resource, mediatype) {\n            var ip = this.fetch_instanceprops(controlbarid);\n            var skin_style = ip.config.media_skin_style;\n\n            var size_class = 'poodll_mediarecorder_size_auto';\n            switch (ip.config.size) {\n                case 'small':\n                    size_class = 'poodll_mediarecorder_size_small';\n                    break;\n                case 'big':\n                    size_class = 'poodll_mediarecorder_size_big';\n                    break;\n                case 'auto':\n                    size_class = 'poodll_mediarecorder_size_auto';\n            }\n\n            var ss = this.pmr.fetch_strings();\n            var hideshowupload = ip.showupload ? '' : 'hide';\n            var record_icon = mediatype == 'video' ? 'fa-video-camera' : 'fa-microphone';\n            var recorder_class = mediatype == 'video' ? 'poodll_mediarecorder_video' : 'poodll_mediarecorder_audio';\n\n            var controls = '<div class=\"poodll_mediarecorderholder_bmr poodll_videorecorderholder_bmr '\n                + recorder_class + ' ' + size_class + '\" id=\"holder_' + controlbarid + '\">';\n\n            controls += '<div class=\"poodll_mediarecorderbox_bmr\" id=\"' + controlbarid + '\">';\n            controls += '<audio style=\"display: none !important;\" class=\"poodll-alert-recording\" id=\"' + controlbarid + '\"><source src=\"https://poodll.com/wp-content/themes/Poodll-Theme/images/ding.mp3\" type=\"audio/mpeg\"></audio>';\n            controls += '<div class=\"style-holder ' + skin_style + '\">';\n            controls += '<div class=\"poodll_statusholder_bmr\" >';\n            controls += '<canvas class=\"bmr_range\"></canvas>';\n            var status = this.fetch_status_bar('bmr');\n            controls += status;\n            controls += '</div>';\n\n            controls += preview,\n                controls += '<div class=\"settingsicon\" id=\"settingsicon_' + controlbarid + '\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>';\n            controls += '<button type=\"button\" class=\"poodll_mediarecorder_button_bmr poodll_start-recording_bmr\"><i class=\"fa ' + record_icon + '\" aria-hidden=\"true\"></i></button>';\n            controls += ' <button type=\"button\" class=\"poodll_mediarecorder_button_bmr poodll_resume-recording_bmr bmr_disabled hide\" disabled><i class=\"fa ' + record_icon + '\" aria-hidden=\"true\"></i></button>';\n            controls += '<button type=\"button\" class=\"poodll_mediarecorder_button_bmr poodll_stop-recording_bmr bmr_disabled\" disabled><i class=\"fa fa-stop\" aria-hidden=\"true\"></i></button>';\n            controls += '<button type=\"button\" class=\"poodll_mediarecorder_button_bmr poodll_pause-recording_bmr bmr_disabled\" disabled><i class=\"fa fa-pause\" aria-hidden=\"true\"></i></button>';\n            controls += ' <button type=\"button\" class=\"poodll_mediarecorder_button_bmr poodll_play-recording_bmr bmr_disabled\" disabled><i class=\"fa fa-play\" aria-hidden=\"true\"></i></button>';\n            controls += '<button type=\"button\" class=\"poodll_save-recording_bmr ' + hideshowupload + '\" disabled>' + ss['recui_save'] + '</button>';\n            controls += '</div>';\n            controls += this.devsettings.fetch_dialogue_box();\n            controls += ip.downloaddialog.fetch_dialogue_box();\n            controls += ip.errordialog.fetch_dialogue_box();\n            controls += '</div>';\n            controls += '</div>';\n            $(element).prepend(controls);\n            var controlbar = {\n                poodll_recording_alert: $('#' + controlbarid + ' .poodll-alert-recording'),\n                bmr_progresscanvas: $('#' + controlbarid + ' .bmr_range'),\n                settingsdialog: $('#' + controlbarid + ' .poodll_dialogue_box_settings'),\n                downloaddialog: $('#' + controlbarid + ' .poodll_dialogue_box_download'),\n                errorsdialog: $('#' + controlbarid + ' .poodll_dialogue_box_errors'),\n                settingsicon: $('#' + controlbarid + ' .settingsicon'),\n                status: $('#' + controlbarid + ' .poodll_status_bmr'),\n                preview: $('#' + controlbarid + ' .poodll_preview_bmr'),\n                startbutton: $('#' + controlbarid + ' .poodll_start-recording_bmr'),\n                stopbutton: $('#' + controlbarid + ' .poodll_stop-recording_bmr'),\n                pausebutton: $('#' + controlbarid + ' .poodll_pause-recording_bmr'),\n                resumebutton: $('#' + controlbarid + ' .poodll_resume-recording_bmr'),\n                playbutton: $('#' + controlbarid + ' .poodll_play-recording_bmr'),\n                savebutton: $('#' + controlbarid + ' .poodll_save-recording_bmr')\n            };\n\n\n            //settings and error and download dialogs\n            //settings is on 'this' because it is shown from skkn events, but errors are from pmr stuff\n            ip.downloaddialog.set_dialogue_box(controlbar.downloaddialog);\n            ip.errordialog.set_dialogue_box(controlbar.errorsdialog);\n            this.devsettings.set_dialogue_box(controlbar.settingsdialog);\n            return controlbar;\n\n        }, //end of fetch_control_bar_bmr\n\n\n        register_controlbar_events_video: function (onMediaSuccess, controlbarid) {\n            return this.register_controlbar_events_audio(onMediaSuccess, controlbarid);\n        },\n\n        register_controlbar_events_audio: function (onMediaSuccess, controlbarid) {\n            var self = this;\n            var pmr = this.pmr;\n            var ip = this.fetch_instanceprops(controlbarid);\n\n            //Open the settings dialog\n            ip.controlbar.settingsicon.click(function () {\n                if (!self.uploaded) {\n                    self.devsettings.open();\n                } else {\n                    ip.downloaddialog.open();\n                }\n            });\n\n            //init progress bar\n            var hprogress = anim_progress_bar.clone();\n            hprogress.init(ip.controlbar.bmr_progresscanvas);\n\n\n            ip.controlbar.startbutton.click(function () {\n\n                //Play alert sound\n                //ip.controlbar.poodll_recording_alert.get(0).play();\n\n                //start recording\n                pmr.do_start_audio(ip, onMediaSuccess);\n\n            });\n\n            ip.controlbar.stopbutton.click(function () {\n                //stop the audio\n                pmr.do_stop_audio(ip);\n\n                var preview = ip.controlbar.preview;\n                if (preview && preview.get(0)) {\n                    preview.get(0).pause();\n                }\n\n                //timer and status bar\n                ip.timer.stop();\n                self.update_status(controlbarid);\n\n                //do visuals\n                self.set_visual_mode('previewmode', controlbarid);\n\n            });\n\n            ip.controlbar.pausebutton.click(function () {\n\n                pmr.do_pause_audio(ip);\n\n                //timer and status bar\n                ip.timer.pause();\n                self.update_status(controlbarid);\n                //do visuals\n                self.set_visual_mode('pausedmode', controlbarid);\n            });\n\n            ip.controlbar.resumebutton.click(function () {\n\n                pmr.do_resume_audio(ip);\n\n                //timer and status bar\n                ip.timer.resume();\n                self.update_status(controlbarid);\n                //do visuals\n                self.set_visual_mode('recordmode', controlbarid);\n            });\n\n            ip.controlbar.preview.on('timeupdate', function () {\n                if (self.visualmode != 'playmode') {\n                    return;\n                }\n                var currentTime = this.currentTime;\n                ip.controlbar.status.html(ip.timer.fetch_display_time(currentTime));\n            });\n\n            ip.controlbar.playbutton.click(function () {\n\n                var preview = ip.controlbar.preview.get(0);\n                pmr.do_play_audio(ip, preview);\n\n                //do visuals\n                self.set_visual_mode('playmode', controlbarid);\n\n                //start animation\n                hprogress.clear();\n                hprogress.fetchCurrent = function () {\n                    var ct = ip.controlbar.preview.prop('currentTime');\n                    var duration = ip.controlbar.preview.prop('duration');\n                    if (!isFinite(duration)) {\n                        duration = ip.timer.finalseconds;\n                    }\n                    return ct / duration;\n                };\n                hprogress.start();\n\n            });\n\n            ip.controlbar.savebutton.click(function () {\n\n                if (ip.blobs && ip.blobs.length > 0) {\n                    self.set_visual_mode('uploadmode', controlbarid);\n                    pmr.do_save_audio(ip);\n                    self.uploaded = true;\n                } else {\n                    ip.uploader.Output(M.util.get_string('recui_nothingtosaveerror', 'filter_poodll'));\n                }//end of if self.blobs\t\t\n                //probably not necessary  ... but getting odd ajax errors occasionally\n                return false;\n            });//end of save recording\n\n            window.onbeforeunload = function () {\n                self.enable_button(ip.controlbar.startbutton);\n                var preview = ip.controlbar.preview;\n                if (preview && preview.get(0)) {\n                    preview.get(0).pause();\n                    preview.get(0).controls = false;\n                }\n            };\n\n        }, //end of register_control_bar_events_bmr\n\n        show_element: function (element) {\n            $(element).removeClass('hide');\n            $(element).show();\n        },\n        hide_element: function (element) {\n            $(element).addClass('hide');\n            $(element).hide();\n        },\n        enable_button: function (button) {\n            $(button).attr('disabled', false);\n            $(button).removeClass('bmr_disabled');\n        },\n        disable_button: function (button) {\n            $(button).attr('disabled', true);\n            $(button).addClass('bmr_disabled');\n        },\n\n    };//end of returned object\n\n\n});//total end"],"names":["define","$","log","utils","settings","anim_progress_bar","upskin_bar","debug","instanceprops","pmr","uploaded","devsettings","clone","extend","this","init","ip","fetch_instanceprops","onUploadSuccess","controlbarid","hide","show","onUploadFailure","fetch_status_bar","skin","fetch_preview_audio","fetch_preview_video","fetch_resource_audio","fetch_resource_video","fetch_uploader_skin","element","upskin","config","controlbar","bmr_progresscanvas","status","onMediaError","e","console","error","onMediaSuccess_video","uploader","Output","set_visual_mode","timer","reset","start","update_status","onMediaSuccess_audio","preview","attr","handle_timer_update","html","fetch_display_time","seconds","initseconds","stopbutton","click","mode","visualmode","disable_button","startbutton","show_element","hide_element","enable_button","pausebutton","playbutton","resumebutton","savebutton","addClass","mediatype","finalSeconds","removeClass","insert_controlbar_video","resource","prepare_controlbar","insert_controlbar_audio","skin_style","media_skin_style","size_class","size","ss","fetch_strings","hideshowupload","showupload","record_icon","controls","fetch_dialogue_box","downloaddialog","errordialog","prepend","poodll_recording_alert","settingsdialog","errorsdialog","settingsicon","set_dialogue_box","register_controlbar_events_video","onMediaSuccess","register_controlbar_events_audio","self","open","hprogress","do_start_audio","do_stop_audio","get","pause","stop","do_pause_audio","do_resume_audio","resume","on","currentTime","do_play_audio","clear","fetchCurrent","ct","prop","duration","isFinite","finalseconds","blobs","length","do_save_audio","M","util","get_string","window","onbeforeunload","button"],"mappings":"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"}