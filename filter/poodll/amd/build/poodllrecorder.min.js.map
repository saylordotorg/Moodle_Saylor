{"version":3,"sources":["../src/poodllrecorder.js"],"names":["define","$","log","flashrec","mediarec","uploadrec","mobilerec","flashsnapshot","snapshot","red5","debug","init","config","theid","widgetid","configcontrol","get","JSON","parse","value","remove","wwwroot","M","cfg","sesskey","element","selector","use_rec","i","length","supports_current_browser","embed"],"mappings":"AACAA,OAAM,gCAAC,CAAC,QAAD,CACC,UADD,CAEC,oCAFD,CAGC,oCAHD,CAIC,qCAJD,CAKC,qCALD,CAMC,4CAND,CAOC,uCAPD,CAQC,mCARD,CAAD,CASF,SAAUC,CAAV,CAAaC,CAAb,CAAkBC,CAAlB,CAA4BC,CAA5B,CAAsCC,CAAtC,CAAiDC,CAAjD,CAA4DC,CAA5D,CAA2EC,CAA3E,CAAqFC,CAArF,CAA2F,CAEvF,aAEAP,CAAG,CAACQ,KAAJ,CAAU,+BAAV,EAEA,MAAO,CAIHC,IAAI,CAAE,cAAUC,CAAV,CAAkB,IAGhBC,CAAAA,CAAK,CAAG,YAAcD,CAAM,CAACE,QAHb,CAIhBC,CAAa,CAAGd,CAAC,CAACY,CAAD,CAAD,CAASG,GAAT,CAAa,CAAb,CAJA,CAKpB,GAAID,CAAJ,CAAmB,CACf,KAAKH,MAAL,CAAcK,IAAI,CAACC,KAAL,CAAWH,CAAa,CAACI,KAAzB,CAAd,CACAlB,CAAC,CAACY,CAAD,CAAD,CAASO,MAAT,EACH,CAHD,IAGO,CAEHlB,CAAG,CAACQ,KAAJ,CAAU,sDAAV,EACA,MACH,CAGD,KAAKE,MAAL,CAAYS,OAAZ,CAAsBC,CAAC,CAACC,GAAF,CAAMF,OAA5B,CACA,KAAKT,MAAL,CAAYY,OAAZ,CAAsBF,CAAC,CAACC,GAAF,CAAMC,OAA5B,CAEA,GAAIC,CAAAA,CAAO,CAAG,KAAKb,MAAL,CAAYc,QAA1B,CACA,GAAI,CAACD,CAAL,CAAc,CACVvB,CAAG,CAACQ,KAAJ,CAAU,yCAA2C,KAAKE,MAAL,CAAYc,QAAjE,EACA,MACH,CAED,OADIC,CAAAA,CAAO,GACX,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKhB,MAAL,WAAyBiB,MAA7C,CAAqDD,CAAC,EAAtD,CAA0D,CACtD,OAAQ,KAAKhB,MAAL,WAAyBgB,CAAzB,CAAR,EACI,IAAK,MAAL,CACID,CAAO,CAAGlB,CAAV,CACA,MACJ,IAAK,YAAL,CACIkB,CAAO,CAAGxB,CAAV,CACA,MACJ,IAAK,OAAL,CACIwB,CAAO,CAAGvB,CAAV,CACA,MACJ,IAAK,QAAL,CACIuB,CAAO,CAAGtB,CAAV,CACA,MACJ,IAAK,QAAL,CACIsB,CAAO,CAAGrB,CAAV,CACA,MACJ,IAAK,eAAL,CACIqB,CAAO,CAAGpB,CAAV,CACA,MACJ,IAAK,UAAL,CACIoB,CAAO,CAAGnB,CAAV,CACA,MArBR,CAyBA,GAAImB,CAAO,CAACG,wBAAR,CAAiC,KAAKlB,MAAtC,CAAJ,CAAmD,CAC/Ce,CAAO,CAACI,KAAR,CAAcN,CAAd,CAAuB,KAAKb,MAA5B,EACA,MACH,CACJ,CAGDV,CAAG,CAACQ,KAAJ,CAAU,mDAAV,CACH,CA9DE,CAgEV,CA/EC,CAAN","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery',\n        'core/log',\n        'filter_poodll/poodll_flashrecorder',\n        'filter_poodll/poodll_mediarecorder',\n        'filter_poodll/poodll_uploadrecorder',\n        'filter_poodll/poodll_mobilerecorder',\n        'filter_poodll/poodll_flashsnapshotrecorder',\n        'filter_poodll/poodll_snapshotrecorder',\n        'filter_poodll/poodll_red5recorder'],\n    function ($, log, flashrec, mediarec, uploadrec, mobilerec, flashsnapshot, snapshot, red5) {\n\n        \"use strict\"; // jshint ;_;\n\n        log.debug('PoodLL Recorder: initialising');\n\n        return {\n\n            //init the poodll recorder\n            //basically we check the users preferred recorders and if the rec supports the browser\n            init: function (config) {\n\n                //pick up opts from html\n                var theid = '#amdopts_' + config.widgetid;\n                var configcontrol = $(theid).get(0);\n                if (configcontrol) {\n                    this.config = JSON.parse(configcontrol.value);\n                    $(theid).remove();\n                } else {\n                    //if there is no config we might as well give up\n                    log.debug('PoodLL Recorder: No config found on page. Giving up.');\n                    return;\n                }\n\n                //we are going to need the site url and the sess key\n                this.config.wwwroot = M.cfg.wwwroot;\n                this.config.sesskey = M.cfg.sesskey;\n\n                var element = this.config.selector;\n                if (!element) {\n                    log.debug(\"unable to fetch element with selector:\" + this.config.selector);\n                    return;\n                }\n                var use_rec = false;\n                for (var i = 0; i < this.config['rec_order'].length; i++) {\n                    switch (this.config['rec_order'][i]) {\n                        case 'red5':\n                            use_rec = red5;\n                            break;\n                        case 'flashaudio':\n                            use_rec = flashrec;\n                            break;\n                        case 'media':\n                            use_rec = mediarec;\n                            break;\n                        case 'upload':\n                            use_rec = uploadrec;\n                            break;\n                        case 'mobile':\n                            use_rec = mobilerec;\n                            break;\n                        case 'flashsnapshot':\n                            use_rec = flashsnapshot;\n                            break;\n                        case 'snapshot':\n                            use_rec = snapshot;\n                            break;\n                    }//end of switch\n\n                    //if current browser supported by rec, then embed and return\n                    if (use_rec.supports_current_browser(this.config)) {\n                        use_rec.embed(element, this.config);\n                        return;\n                    } // end of current browser support check\n                }//end of each\n\n                //if we got here no recorder was preferred AND supported the browser\n                log.debug('none of available recorders works on this browser');\n            }\n        };//end of returned object\n    });//total end\n"],"file":"poodllrecorder.min.js"}