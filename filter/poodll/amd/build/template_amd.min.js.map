{"version":3,"sources":["../src/template_amd.js"],"names":["define","$","log","debug","allopts","extscripts","csslinks","jslinks","appendjspath","jslink","require","config","paths","theprefix","injectcss","csslink","link","document","createElement","href","toLowerCase","lastIndexOf","length","rel","type","getElementsByTagName","appendChild","loadtemplate","opts","theid","optscontrol","get","JSON","parse","value","remove","indexOf","push","d"],"mappings":"AACAA,OAAM,8BAAC,CAAC,QAAD,CAAW,UAAX,CAAD,CAAyB,SAAUC,CAAV,CAAaC,CAAb,CAAkB,CAE7C,aAEAA,CAAG,CAACC,KAAJ,CAAU,4BAAV,EAEA,MAAO,CAEHC,OAAO,CAAE,EAFN,CAIHC,UAAU,CAAE,EAJT,CAMHC,QAAQ,GANL,CAQHC,OAAO,GARJ,CAUHC,YAAY,CAAE,sBAAUC,CAAV,CAA6B,CACvCC,OAAO,CAACC,MAAR,CAAe,CACXC,KAAK,CAAE,CACHC,SAAS,CAAEJ,CADR,CADI,CAAf,CAKH,CAhBE,CAkBHK,SAAS,CAAE,mBAAUC,CAAV,CAAmB,CAC1B,GAAIC,CAAAA,CAAI,CAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX,CACAF,CAAI,CAACG,IAAL,CAAYJ,CAAZ,CACA,GAAIA,CAAO,CAACK,WAAR,GAAsBC,WAAtB,CAAkC,OAAlC,GAA8CN,CAAO,CAACO,MAAR,CAAiB,CAAnE,CAAsE,CAClEN,CAAI,CAACO,GAAL,CAAW,QACd,CAFD,IAEO,CACHP,CAAI,CAACQ,IAAL,CAAY,UAAZ,CACAR,CAAI,CAACO,GAAL,CAAW,YACd,CACDN,QAAQ,CAACQ,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDV,CAArD,CACH,CA5BE,CA+BHW,YAAY,CAAE,sBAAUC,CAAV,CAAgB,IAGtBC,CAAAA,CAAK,CAAG,0BAA4BD,CAAI,OAHlB,CAItBE,CAAW,CAAG7B,CAAC,CAAC4B,CAAD,CAAD,CAASE,GAAT,CAAa,CAAb,CAJQ,CAK1B,GAAID,CAAJ,CAAiB,CACbF,CAAI,CAAGI,IAAI,CAACC,KAAL,CAAWH,CAAW,CAACI,KAAvB,CAAP,CAEAjC,CAAC,CAAC4B,CAAD,CAAD,CAASM,MAAT,EACH,CAID,GAAIP,CAAI,QAAR,CAAqB,CACjB,GAA6C,CAAzC,MAAKtB,QAAL,CAAc8B,OAAd,CAAsBR,CAAI,QAA1B,CAAJ,CAAgD,CAC5C,KAAKtB,QAAL,CAAc+B,IAAd,CAAmBT,CAAI,QAAvB,EACA,KAAKd,SAAL,CAAec,CAAI,QAAnB,CACH,CACJ,CAGD,GAAIA,CAAI,UAAR,CAAuB,CACnB,GAA+C,CAA3C,MAAKtB,QAAL,CAAc8B,OAAd,CAAsBR,CAAI,UAA1B,CAAJ,CAAkD,CAC9C,KAAKtB,QAAL,CAAc+B,IAAd,CAAmBT,CAAI,UAAvB,EACA,KAAKd,SAAL,CAAec,CAAI,UAAnB,CACH,CACJ,CAID,GAAIA,CAAI,UAAR,CAAuB,CACnB,GAA+C,CAA3C,MAAKtB,QAAL,CAAc8B,OAAd,CAAsBR,CAAI,UAA1B,CAAJ,CAAkD,CAC9C,KAAKtB,QAAL,CAAc+B,IAAd,CAAmBT,CAAI,UAAvB,EACA,KAAKd,SAAL,CAAec,CAAI,UAAnB,CACH,CACJ,CAMD,GAAiC,WAA7B,QAAOA,CAAAA,CAAI,WAAf,CAA8C,CAE1ClB,OAAO,CAAC,CAAC,kBAAoBkB,CAAI,WAAzB,CAAD,CAA2C,SAAUU,CAAV,CAAa,CAC3DA,CAAC,CAACV,CAAD,CACJ,CAFM,CAGV,CAGJ,CAhFE,CAkFV,CAxFK,CAAN","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log'], function ($, log) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Filter Poodll initialising');\n\n    return {\n\n        allopts: {},\n\n        extscripts: {},\n\n        csslinks: Array(),\n\n        jslinks: Array(),\n\n        appendjspath: function (jslink, theprefix) {\n            require.config({\n                paths: {\n                    theprefix: jslink\n                }\n            });\n        },\n\n        injectcss: function (csslink) {\n            var link = document.createElement(\"link\");\n            link.href = csslink;\n            if (csslink.toLowerCase().lastIndexOf('.html') == csslink.length - 5) {\n                link.rel = 'import';\n            } else {\n                link.type = \"text/css\";\n                link.rel = \"stylesheet\";\n            }\n            document.getElementsByTagName(\"head\")[0].appendChild(link);\n        },\n\n        // load all poodll stuff and stash all our variables\n        loadtemplate: function (opts) {\n\n            //pick up opts from html\n            var theid = '#filter_poodll_amdopts_' + opts['AUTOID'];\n            var optscontrol = $(theid).get(0);\n            if (optscontrol) {\n                opts = JSON.parse(optscontrol.value);\n                //remove the hidden form element, in case it is really part of a form\n                $(theid).remove();\n            }\n\n            //load our css in head if required\n            //only do it once per extension though\n            if (opts['CSSLINK']) {\n                if (this.csslinks.indexOf(opts['CSSLINK']) < 0) {\n                    this.csslinks.push(opts['CSSLINK']);\n                    this.injectcss(opts['CSSLINK']);\n                }\n            }\n            //load our css in head if required\n            //only do it once per extension though\n            if (opts['CSSUPLOAD']) {\n                if (this.csslinks.indexOf(opts['CSSUPLOAD']) < 0) {\n                    this.csslinks.push(opts['CSSUPLOAD']);\n                    this.injectcss(opts['CSSUPLOAD']);\n                }\n            }\n\n            //load our css in head if required\n            //only do it once per extension though\n            if (opts['CSSCUSTOM']) {\n                if (this.csslinks.indexOf(opts['CSSCUSTOM']) < 0) {\n                    this.csslinks.push(opts['CSSCUSTOM']);\n                    this.injectcss(opts['CSSCUSTOM']);\n                }\n            }\n\n            //if we did get a template id then proceed\n            //we might not get one if the html was generated, but never sent to\n            //the page. Sometimes this happens in the assignment and probably\n            //elsewhere\n            if (typeof opts['TEMPLATEID'] != 'undefined') {\n                //here require, then load the template scripts and js\n                require(['filter_poodll_d' + opts['TEMPLATEID']], function (d) {\n                    d(opts);\n                });\n            }\n\n\n        }//end of function\n    };\n});\n/* jshint ignore:end */"],"file":"template_amd.min.js"}