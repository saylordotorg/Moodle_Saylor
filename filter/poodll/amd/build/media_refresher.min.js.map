{"version":3,"sources":["../src/media_refresher.js"],"names":["define","$","log","debug","placeholderduration","mediaduration","alertconverted","clone","extend","init","filename","check_updates","should_be_checked","parseFloat","toFixed","isNumeric","checktype","xhr","XMLHttpRequest","that","onreadystatechange","readyState","status","payload","responseText","payloadobject","JSON","parse","code","setTimeout","open","M","cfg","wwwroot","setRequestHeader","send"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log'], function ($, log) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Media refresher: initialising');\n\n    return {\n\n        placeholderduration: null,\n        mediaduration: null, //audio or video tag\n        alertconverted: null,\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        //pass in config, the jquery video/audio object, and a function to be called when conversion has finshed\n        init: function (filename, placeholderduration, mediaduration, alertconverted) {\n            //debugger;\n            this.placeholderduration = placeholderduration;\n            this.mediaduration = mediaduration;\n            this.alertconverted = alertconverted;\n            this.check_updates(filename, 'firstpass');\n        },\n\n        should_be_checked: function (filename) {\n            //check this is an unconverted recording that we need to track\n\n            log.debug('mediaduration: ' + this.mediaduration);\n            log.debug('placeholderduration: ' + this.placeholderduration);\n            log.debug('fixed to one mediaduration: ' + parseFloat(this.mediaduration).toFixed(1));\n            log.debug('fixed to one placeholderduration: ' + parseFloat(this.placeholderduration).toFixed(1));\n\n            //if any of these numbers is not numeric we kill it\n            if (!$.isNumeric(this.placeholderduration)) {\n                return false;\n            }\n            if (!$.isNumeric(this.mediaduration)) {\n                return false;\n            }\n            //if the two numbers are equivalent to one decimal place we credit it\n            //firefox calcs mp3 size diff to chrome, but they seem same to 1 place ... now anyway\n            if (parseFloat(this.mediaduration).toFixed(1) != parseFloat(this.placeholderduration).toFixed(1)) {\n                return false;\n            }\n            //this is a bogus check.\n            //later we only want to check filenames that look like poodll recorded ones\n            if (filename == '') {\n                return false;\n            }\n            return true;\n        },\n\n        check_updates: function (filename, checktype) {\n            //checktype:firstpass - if have a task then we keep checking till there is no task\n            //then we know its finished. Those checks are the 'secondpass'\n            this.should_be_checked(filename);\n            //check this is a recording that we need to track\n            if (checktype == 'firstpass' && !this.should_be_checked(filename)) {\n                return;\n            }\n\n            //set up our ajax request\n            var xhr = new XMLHttpRequest();\n            var that = this;\n\n            //set up our handler for the response\n            xhr.onreadystatechange = function (e) {\n                if (this.readyState === 4) {\n                    if (xhr.status == 200) {\n\n                        //get a yes or forgetit or tryagain\n                        var payload = xhr.responseText;\n                        var payloadobject = JSON.parse(payload);\n                        if (payloadobject) {\n                            switch (payloadobject.code) {\n\n                                case 'mediaready':\n                                    that.alertconverted();\n                                    break;\n                                case 'stillwaiting':\n                                    setTimeout(function () {\n                                        that.check_updates(filename, 'secondpass')\n                                    }, 15000);\n                                    break;\n                                case 'notask':\n                                    if (checktype == 'secondpass') {\n                                        that.alertconverted();\n                                    }\n                                    break;\n                                case 'notloggedin':\n                                default:\n                                //just stop trying in this case\n                                //the task is long ago processed or its not a rec. or something\n                            }\n                        }\n                    } else {\n                        log.debug('Not 200 response:' + xhr.status);\n                    }\n                }\n            };\n\n            //log.debug(params);\n            var params = \"filename=\" + filename;\n            xhr.open(\"POST\", M.cfg.wwwroot + '/filter/poodll/ajaxmediaquery.php', true);\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n            xhr.send(params);\n        }\n    };//end of returned object\n});//total end\n"],"file":"media_refresher.min.js"}