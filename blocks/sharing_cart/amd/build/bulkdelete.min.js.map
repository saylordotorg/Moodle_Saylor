{"version":3,"file":"bulkdelete.min.js","sources":["../src/bulkdelete.js"],"sourcesContent":["define(['jquery', 'core/modal_factory', 'core/modal_events'], function($, ModalFactory, ModalEvents) {\n\n    return {\n        init: function() {\n\n            /**\n             *  Returns a localized string\n             *\n             *  @param {String} identifier\n             *  @return {String}\n             */\n            function str(identifier) {\n                return M.str.block_sharing_cart[identifier] || M.str.moodle[identifier];\n            }\n\n            /**\n             *\n             * @param object\n             */\n            function confirm_modal(object) {\n                var trigger = $('#create-modal');\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: object.title,\n                    body: object.body,\n                }, trigger).done(function(modal) {\n                    modal.setSaveButtonText(object.save_button);\n\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        object.next();\n                    });\n\n                    // Remove modal from html.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        $('.modal.moodle-has-zindex').remove();\n                    });\n                    modal.show();\n                });\n            }\n\n            /**\n             *\n             * @returns {any[]}\n             */\n            function get_checks() {\n                var elements = $('form :checkbox[name^=\"delete\"]');\n                return elements;\n            }\n\n            /**\n             *\n             * @param check\n             */\n            function check_all(check) {\n                var checks = get_checks();\n                $(checks).prop('checked', check.checked);\n\n                $('form :button[name =\"delete_checked\"]').prop('disabled', !check.checked);\n            }\n\n            /**\n             *\n             */\n            function check() {\n                var delete_checked = $('form :button[name^=\"delete_checked\"]');\n                var checks = get_checks();\n                var checked_checkbox = false;\n\n                $(checks).each(function(i, val) {\n                    if ($(val).prop('checked')) {\n                        checked_checkbox = true;\n                        return false;\n                    }\n                });\n\n                delete_checked.prop('disabled', !checked_checkbox);\n                $('.bulk-delete-select-all :checkbox').prop('checked', checked_checkbox);\n            }\n\n            /**\n             * Check activity button\n             */\n            $('.bulk-delete-item [id^=delete]').on('click', function() {\n                check();\n            });\n\n            /**\n             * Select all checkbox.\n             */\n            $('.bulk-delete-select-all input').on('click', function() {\n                check_all(this);\n            });\n\n            /**\n             * Delete selected, opens modal for confirmation.\n             */\n            $('.form_submit').on('click', function() {\n                var modal_body = '<ul>';\n                var selected_input = $('.bulk-delete-item input:checked');\n                $(selected_input).each(function() {\n                    var label = $('label[for=\"' + this.id + '\"]');\n                    modal_body += '<li>' + label.text() + '</li>';\n                });\n                modal_body += '</ul>';\n\n                confirm_modal({\n                    'title': str('modal_bulkdelete_title'),\n                    'body': modal_body,\n                    'save_button': str('modal_bulkdelete_confirm'),\n                    'next': function() {\n                        $('#form').submit();\n                    }\n                });\n            });\n        }\n    };\n});\n"],"names":["define","$","ModalFactory","ModalEvents","init","str","identifier","M","block_sharing_cart","moodle","get_checks","on","delete_checked","checks","checked_checkbox","each","i","val","prop","check","checked","check_all","this","object","trigger","modal_body","selected_input","label","id","text","submit","create","type","types","SAVE_CANCEL","title","body","done","modal","setSaveButtonText","save_button","getRoot","save","next","hidden","remove","show"],"mappings":"AAAAA,uCAAO,CAAC,SAAU,qBAAsB,sBAAsB,SAASC,EAAGC,aAAcC,mBAE7E,CACHC,KAAM,oBAQOC,IAAIC,mBACFC,EAAEF,IAAIG,mBAAmBF,aAAeC,EAAEF,IAAII,OAAOH,qBAgCvDI,oBACUT,EAAE,kCAqCrBA,EAAE,kCAAkCU,GAAG,SAAS,eAlBxCC,eACAC,OACAC,iBAFAF,eAAiBX,EAAE,wCACnBY,OAASH,aACTI,kBAAmB,EAEvBb,EAAEY,QAAQE,MAAK,SAASC,EAAGC,QACnBhB,EAAEgB,KAAKC,KAAK,kBACZJ,kBAAmB,GACZ,KAIfF,eAAeM,KAAK,YAAaJ,kBACjCb,EAAE,qCAAqCiB,KAAK,UAAWJ,qBAa3Db,EAAE,iCAAiCU,GAAG,SAAS,qBApC5BQ,WACXN,OAASH,aACbT,EAAEY,QAAQK,KAAK,UAAWC,MAAMC,SAEhCnB,EAAE,wCAAwCiB,KAAK,YAAaC,MAAMC,SAiClEC,CAAUC,SAMdrB,EAAE,gBAAgBU,GAAG,SAAS,eA7EPY,OACfC,QA6EAC,WAAa,OACbC,eAAiBzB,EAAE,mCACvBA,EAAEyB,gBAAgBX,MAAK,eACfY,MAAQ1B,EAAE,cAAgBqB,KAAKM,GAAK,MACxCH,YAAc,OAASE,MAAME,OAAS,WAE1CJ,YAAc,QApFKF,OAsFL,OACDlB,IAAI,+BACLoB,uBACOpB,IAAI,iCACX,WACJJ,EAAE,SAAS6B,WA1FfN,QAAUvB,EAAE,iBAChBC,aAAa6B,OAAO,CAChBC,KAAM9B,aAAa+B,MAAMC,YACzBC,MAAOZ,OAAOY,MACdC,KAAMb,OAAOa,MACdZ,SAASa,MAAK,SAASC,OACtBA,MAAMC,kBAAkBhB,OAAOiB,aAE/BF,MAAMG,UAAU9B,GAAGR,YAAYuC,MAAM,WACjCnB,OAAOoB,UAIXL,MAAMG,UAAU9B,GAAGR,YAAYyC,QAAQ,WACnC3C,EAAE,4BAA4B4C,YAElCP,MAAMQ"}