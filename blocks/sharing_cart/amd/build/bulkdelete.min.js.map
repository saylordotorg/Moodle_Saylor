{"version":3,"sources":["../src/bulkdelete.js"],"names":["define","$","ModalFactory","ModalEvents","init","str","identifier","M","block_sharing_cart","moodle","confirm_modal","object","trigger","create","type","types","SAVE_CANCEL","title","body","done","modal","setSaveButtonText","save_button","getRoot","on","save","next","hidden","remove","show","get_checks","elements","check_all","check","checks","prop","checked","delete_checked","checked_checkbox","each","i","val","modal_body","selected_input","label","id","text","submit"],"mappings":"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","sourcesContent":["define(['jquery', 'core/modal_factory', 'core/modal_events'], function($, ModalFactory, ModalEvents) {\n\n    return {\n        init: function() {\n\n            /**\n             *  Returns a localized string\n             *\n             *  @param {String} identifier\n             *  @return {String}\n             */\n            function str(identifier) {\n                return M.str.block_sharing_cart[identifier] || M.str.moodle[identifier];\n            }\n\n            /**\n             *\n             * @param object\n             */\n            function confirm_modal(object) {\n                var trigger = $('#create-modal');\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: object.title,\n                    body: object.body,\n                }, trigger).done(function(modal) {\n                    modal.setSaveButtonText(object.save_button);\n\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        object.next();\n                    });\n\n                    // Remove modal from html.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        $('.modal.moodle-has-zindex').remove();\n                    });\n                    modal.show();\n                });\n            }\n\n            /**\n             *\n             * @returns {any[]}\n             */\n            function get_checks() {\n                var elements = $('form :checkbox[name^=\"delete\"]');\n                return elements;\n            }\n\n            /**\n             *\n             * @param check\n             */\n            function check_all(check) {\n                var checks = get_checks();\n                $(checks).prop('checked', check.checked);\n\n                $('form :button[name =\"delete_checked\"]').prop('disabled', !check.checked);\n            }\n\n            /**\n             *\n             */\n            function check() {\n                var delete_checked = $('form :button[name^=\"delete_checked\"]');\n                var checks = get_checks();\n                var checked_checkbox = false;\n\n                $(checks).each(function(i, val) {\n                    if ($(val).prop('checked')) {\n                        checked_checkbox = true;\n                        return false;\n                    }\n                });\n\n                delete_checked.prop('disabled', !checked_checkbox);\n                $('.bulk-delete-select-all :checkbox').prop('checked', checked_checkbox);\n            }\n\n            /**\n             * Check activity button\n             */\n            $('.bulk-delete-item [id^=delete]').on('click', function() {\n                check();\n            });\n\n            /**\n             * Select all checkbox.\n             */\n            $('.bulk-delete-select-all input').on('click', function() {\n                check_all(this);\n            });\n\n            /**\n             * Delete selected, opens modal for confirmation.\n             */\n            $('.form_submit').on('click', function() {\n                var modal_body = '<ul>';\n                var selected_input = $('.bulk-delete-item input:checked');\n                $(selected_input).each(function() {\n                    var label = $('label[for=\"' + this.id + '\"]');\n                    modal_body += '<li>' + label.text() + '</li>';\n                });\n                modal_body += '</ul>';\n\n                confirm_modal({\n                    'title': str('modal_bulkdelete_title'),\n                    'body': modal_body,\n                    'save_button': str('modal_bulkdelete_confirm'),\n                    'next': function() {\n                        $('#form').submit();\n                    }\n                });\n            });\n        }\n    };\n});\n"],"file":"bulkdelete.min.js"}