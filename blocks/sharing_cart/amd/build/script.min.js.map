{"version":3,"file":"script.min.js","sources":["../src/script.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *  Sharing Cart\n *\n *  @package    block_sharing_cart\n *  @copyright  2017 (C) VERSION2, INC.\n *  @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/modal_factory', 'core/modal_events'], function($, ModalFactory, ModalEvents) {\n    return {\n        init: function(addMethod) {\n\n            $(document).ready(function() {\n\n                /**\n                 *  Returns a localized string\n                 *\n                 *  @param {String} identifier\n                 *  @return {String}\n                 */\n                function str(identifier) {\n                    return M.str.block_sharing_cart[identifier] || M.str.moodle[identifier];\n                }\n\n                /**\n                 *  Get an action URL\n                 *\n                 *  @param {String} name   The action name\n                 *  @param {Object} [args] The action parameters\n                 *  @return {String}\n                 */\n                function get_action_url(name, args) {\n                    var url = M.cfg.wwwroot + '/blocks/sharing_cart/' + name + '.php';\n                    if (args) {\n                        var q = [];\n                        for (var k in args) {\n                            q.push(k + '=' + encodeURIComponent(args[k]));\n                        }\n                        url += '?' + q.join('&');\n                    }\n                    return url;\n                }\n\n                /**\n                 * Modal called when confirming an action.\n                 *\n                 * @param obj\n                 */\n                function confirm_modal(obj) {\n\n                    // Checkbox for copying userdata confirmation.\n                    if (obj.checkbox) {\n                        obj.body +=\n                            '<div class=\"modal-checbox-wrapper\">' +\n                            '<input type=\"checkbox\" id=\"modal-checkbox\" class=\"modal-checkbox\">' +\n                            '<label for=\"modal-checkbox\">' + str('modal_checkbox') + '</label>' +\n                            '</div>';\n                    }\n\n\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: obj.title,\n                        body: obj.body,\n                    }).done(function(modal) {\n                        modal.setSaveButtonText(obj.save_button);\n\n                        // On save save check - if checkbox is checked.\n                        modal.getRoot().on(ModalEvents.save, function(e) {\n\n                            var response = {\n                                'checkbox': $(e.target).find('.modal-checkbox').is(':checked'),\n                            };\n\n                            obj.next(response);\n                        });\n\n                        // Remove modal from html.\n                        modal.getRoot().on(ModalEvents.hidden, function() {\n                            $('body').removeClass('modal-open');\n                        });\n\n                        modal.show();\n                    });\n                }\n\n                /**\n                 * Get the section name from the section when\n                 * it's changed with the in place editor\n                 *\n                 * @param $section\n                 * @returns {*}\n                 */\n                function in_place_edit_section_name($section) {\n                    var sectionName = '';\n                    var $inPlaceEditable = $section.find('h3.sectionname .inplaceeditable');\n                    if ($inPlaceEditable.length) {\n                        sectionName = $inPlaceEditable.data('value');\n                    }\n                    return sectionName;\n                }\n\n                /**\n                 * @param post_data\n                 * @param title_str\n                 * @param body_str\n                 * @param isSection\n                 */\n                function on_backup_modal(post_data, title_str, body_str, isSection) {\n                    (function(on_success) {\n                        $.post(get_action_url('rest'), post_data,\n                            function(response) {\n                                on_success(response);\n                            }, \"text\")\n                            .fail(function(response) {\n                                show_error(response);\n                            });\n                    })(function(response) {\n                        var copyable = response === '1';\n                        var checkbox = false;\n\n                        if (copyable) {\n                            checkbox = true;\n                        }\n\n                        confirm_modal({\n                            'title': title_str,\n                            'body': body_str,\n                            'save_button': str('modal_confirm_backup'),\n                            'checkbox': checkbox,\n                            'next': function(data) {\n                                if (isSection === true) {\n                                    backup_section(post_data.sectionid, post_data.sectionnumber, post_data.courseid, data.checkbox);\n                                } else {\n                                    backup(post_data.cmid, data.checkbox);\n                                }\n                            }\n                        });\n                    });\n                }\n\n                /** @var {Object}  The icon configurations */\n                var icon = {\n                    // Actions\n                    'backup': {\n                        css: 'editing_backup',\n                        iconClass: 'fa fa-frown-o',\n                    },\n                    'movedir': {\n                        css: 'editing_right',\n                        iconClass: 'fa fa-arrow-right',\n                    },\n                    'move': {\n                        css: 'editing_move_',\n                        iconClass: 'fa fa-arrows-v',\n                    },\n                    'edit': {\n                        css: 'editing_update',\n                        iconClass: 'fa fa-pencil',\n                    },\n                    'cancel': {\n                        css: 'editing_cancel',\n                        iconClass: 'fa fa-ban',\n                    },\n                    'delete': {\n                        css: 'editing_update',\n                        iconClass: 'fa fa-trash',\n                    },\n                    'restore': {\n                        css: 'editing_restore',\n                        iconClass: 'fa fa-clone',\n                    },\n                    // Directories\n                    'dir-open': {\n                        iconClass: 'fa fa-folder-open-o'\n                    },\n                    'dir-closed': {\n                        iconClass: 'fa fa-folder-o'\n                    },\n                };\n\n                /** @var {Node}  The Sharing Cart block container node */\n                var $block = $('.block_sharing_cart');\n\n                /** @var {Object}  The current course */\n                var course = new function() {\n                    var body = $('body');\n                    this.id = body.attr('class').match(/course-(\\d+)/)[1];\n                    this.is_frontpage = body.hasClass('pagelayout-frontpage');\n                }();\n\n                /**\n                 *  Shows an error message with given Ajax error\n                 *\n                 *  @param {Object} response  The Ajax response\n                 */\n                function show_error(response) {\n                    try {\n                        var ex = JSON.parse(response.responseText);\n                        new M.core.exception({\n                            name: str('pluginname') + ' - ' + str('error'),\n                            message: ex.message\n                        });\n                    } catch (e) {\n                        new M.core.exception({\n                            name: str('pluginname') + ' - ' + str('error'),\n                            message: response.responseText\n                        });\n                    }\n                }\n\n                /**\n                 *  Check special layout (theme boost)\n                 *\n                 *  @return {Boolean}\n                 */\n                function verify_layout() {\n                    var menuelement = $block.find('.menubar .dropdown .dropdown-menu');\n                    return (menuelement.length);\n                }\n\n                /**\n                 * Set Cookie\n                 * @param name\n                 * @param value\n                 * @param expireTimeInMillisecond\n                 */\n                function setCookie(name, value, expireTimeInMillisecond) {\n                    var d = new Date();\n                    d.setTime(d.getTime() + expireTimeInMillisecond);\n                    var expires = 'expires=' + d.toUTCString();\n                    document.cookie = name + '=' + value + ';' + expires + '';\n                }\n\n                /**\n                 * Get Cookie Value\n                 * @param param\n                 * @returns {*}\n                 */\n                function getCookieValue(param) {\n                    var readCookie = document.cookie.match('(^|;)\\\\s*' + param + '\\\\s*=\\\\s*([^;]+)');\n                    return readCookie ? readCookie.pop() : '';\n                }\n\n                /**\n                 * Create a command icon\n                 *\n                 *  @param {String} name  The command name, predefined in icon\n                 *  @param {String} [pix] The icon pix name to override\n                 */\n                function create_command(name) {\n                    var iconElement = $('<i/>')\n                        .attr('alt', str(name))\n                        .attr('class', icon[name].iconClass);\n                    // If (verify_layout()) {\n                    //     iconElement.addClass('iconcustom');\n                    // }\n\n                    return $('<a href=\"javascript:void(0)\"/>')\n                        .addClass(icon[name].css)\n                        .attr('title', str(name))\n                        .append(iconElement);\n                }\n\n                /**\n                 * Create a spinner\n                 * @param $node\n                 * @returns {*|jQuery}\n                 */\n                function add_spinner() {\n                    var $spinner = ($('<div class=\"block_spinner\"><i class=\"fa fa-circle-o-notch fa-spin fa-2x\"></i></div>'));\n                    $('section.block_sharing_cart').append($spinner);\n                    return $spinner;\n                }\n\n                /**\n                 *\n                 * @param $node\n                 * @returns {jQuery.fn.init}\n                 */\n                function add_node_spinner($node) {\n                    var $node_spinner = $('<i class=\"fa fa-circle-o-notch fa-spin node_spinner\"></i>');\n                    $node.append($node_spinner);\n                    return $node_spinner;\n                }\n\n                $(document).on('click', 'a.restore', function() {\n                    add_spinner();\n                });\n\n                /**\n                 *\n                 *  Reload the Sharing Cart item tree\n                 */\n                function reload_tree() {\n                    $.post(get_action_url(\"rest\"),\n                        {\n                            \"action\": \"render_tree\",\n                            \"courseid\": course.id\n                        },\n                        function(response) {\n                            $block.find(\".tree\").replaceWith($(response));\n                            $.init_item_tree();\n                        }, \"html\")\n                        .fail(function(response) {\n                            show_error(response);\n                        });\n                }\n\n                /**\n                 *  Backup an activity\n                 *\n                 *  @param {int} cmid\n                 *  @param {Boolean} userdata\n                 */\n                function backup(cmid, userdata) {\n                    var $commands = $('#module-' + cmid + ' .actions');\n                    if (!$commands.length) {\n                        $commands = $('[data-owner=\"#module-' + cmid + '\"]');\n                    }\n\n                    var $spinner = add_spinner();\n                    var $node_spinner = add_node_spinner($commands);\n\n                    $.post(get_action_url(\"rest\"),\n                        {\n                            \"action\": \"backup\",\n                            \"cmid\": cmid,\n                            \"userdata\": userdata,\n                            \"sesskey\": M.cfg.sesskey,\n                            \"courseid\": course.id\n                        },\n                        function() {\n                            reload_tree();\n                        })\n                        .fail(function(response) {\n                            show_error(response);\n                        })\n                        .always(function() {\n                            $node_spinner.hide();\n                            $spinner.hide();\n                        });\n                }\n\n                /**\n                 *  Backup an activities in a section\n                 *\n                 *  @param {int} sectionId\n                 *  @param {int} sectionNumber\n                 *  @param {int} courseId\n                 *  @param {Boolean} userdata\n                 */\n                function backup_section(sectionId, sectionNumber, courseId, userdata) {\n                    var $commands = $('span.inplaceeditable[data-itemtype=sectionname][data-itemid=' + sectionId + ']');\n                    var $section = $commands.closest(\"li.section.main\");\n                    var sectionName = $section.attr('aria-label') || $section.find('.sectionname').text().trim();\n\n                    if (sectionName === null) {\n                        sectionName = String($('#region-main .section_action_menu[data-sectionid=\\'' + sectionId + '\\']')\n                            .parent().parent().find('h3.sectionname').text());\n                    }\n\n                    var inPlaceEditSectionName = in_place_edit_section_name($section);\n                    sectionName = (inPlaceEditSectionName !== '') ? inPlaceEditSectionName : sectionName;\n\n                    var $spinner = add_spinner();\n                    var $node_spinner = add_node_spinner($commands);\n\n                    $.post(get_action_url(\"rest\"),\n                        {\n                            \"action\": \"backup_section\",\n                            \"sectionid\": sectionId,\n                            \"sectionnumber\": sectionNumber,\n                            \"courseid\": courseId,\n                            \"sectionname\": sectionName,\n                            \"userdata\": userdata,\n                            \"sesskey\": M.cfg.sesskey\n                        },\n                        function() {\n                            reload_tree();\n                        })\n                        .fail(function(response) {\n                            show_error(response);\n                        })\n                        .always(function() {\n                            $spinner.hide();\n                            $node_spinner.hide();\n                        });\n                }\n\n\n                // /////// CLASSES /////////\n\n                /**\n                 *  @class Directory states manager\n                 */\n                var directories = new function() {\n                    var KEY = 'block_sharing_cart-dirs';\n\n                    var opens = getCookieValue(KEY).split(',').map(function(v) {\n                        return parseInt(v);\n                    });\n\n                    function save() {\n                        var expires = new Date();\n                        expires.setDate(expires.getDate() + 30);\n                        setCookie(KEY, opens.join(','), expires);\n                    }\n\n                    function open($dir, visible) {\n                        var iconIndex = visible ? 'dir-open' : 'dir-closed';\n                        var iconElement = icon[iconIndex].iconClass;\n                        $dir.find('> div i.icon').attr('class', 'icon ' + iconElement);\n                        $dir.find('> ul.list')[visible ? 'show' : 'hide']();\n                    }\n\n                    function toggle(e) {\n                        var $dir = $(e.target).closest('li.directory');\n                        var i = $dir.attr('id').match(/(\\d+)$/)[1];\n                        var v = $dir.find('> ul.list').css('display') === 'none';\n\n                        open($dir, v);\n                        opens[i] = v ? 1 : 0;\n                        save();\n                    }\n\n                    /**\n                     *  Initialize directory states\n                     */\n                    this.init = function() {\n                        var i = 0;\n                        $block.find('li.directory').each(function(index, dir) {\n                            var $dir = $(dir);\n                            $dir.attr('id', 'block_sharing_cart-dir-' + i);\n                            if (i >= opens.length) {\n                                opens.push(0);\n                            } else if (opens[i]) {\n                                open($dir, true);\n                            }\n                            $dir.find('> div div.toggle-wrapper').css('cursor', 'pointer').on('click', function(e) {\n                                toggle(e);\n                            });\n                            i++;\n                        });\n                    };\n\n                    /**\n                     *  Reset directory states\n                     */\n                    this.reset = function() {\n                        opens = [];\n                        this.init();\n                        save();\n                    };\n                }();\n\n                /**\n                 *  @class Targets for moving an item directory\n                 */\n                var move_targets = new function() {\n                    var $cancel = null,\n                        targets = [];\n\n                    /**\n                     *  Hide move targets\n                     */\n                    this.hide = function() {\n                        if ($cancel !== null) {\n                            var $commands = $cancel.closest('.commands');\n                            $cancel.remove();\n                            $cancel = null;\n                            $commands.closest('li.activity').css('opacity', 1.0);\n                            $commands.find('a').each(function() {\n                                $(this).show();\n                            });\n                            $.each(targets, function(index, $target) {\n                                $target.remove();\n                            });\n                            targets = [];\n                        }\n                    };\n\n                    /**\n                     *  Show move targets for a given item\n                     *\n                     *  @param {int} id  The item ID\n                     */\n                    this.show = function(item_id) {\n                        this.hide();\n\n                        function move(e) {\n\n                            var m = $(e.target).closest('a').attr('class').match(/move-(\\d+)-to-(\\d+)/);\n                            var item_id = m[1],\n                                area_to = m[2];\n\n                            var $spinner = add_spinner();\n                            $.post(get_action_url(\"rest\"),\n                                {\n                                    \"action\": \"move\",\n                                    \"item_id\": item_id,\n                                    \"area_to\": area_to,\n                                    \"sesskey\": M.cfg.sesskey\n                                },\n                                function() {\n                                    reload_tree();\n                                })\n                                .fail(function(response) {\n                                    show_error(response);\n                                })\n                                .always(function() {\n                                    $spinner.hide();\n                                });\n                        }\n\n                        var $current = $block.find('#block_sharing_cart-item-' + item_id);\n                        var $next = $current.next();\n                        var $list = $current.closest('ul');\n\n                        var next_id = 0;\n                        if ($next.length) {\n                            next_id = $next.attr('id').match(/item-(\\d+)$/)[1];\n                        }\n\n                        /**\n                         *\n                         * @param item_id\n                         * @param area_to\n                         * @returns {jQuery}\n                         */\n                        function create_target(item_id, area_to) {\n                            var $anchor = $('<a href=\"javascript:void(0)\"/>')\n                                .addClass('move-' + item_id + '-to-' + area_to)\n                                .attr('title', str('movehere'))\n                                .append(\n                                    $('<p>' + str('clicktomove') + '</p>')\n                                        .attr('alt', str('movehere'))\n                                );\n\n                            var $target = $('<li class=\"activity move-to\"/>')\n                                .append($anchor);\n                            $anchor.on('click', function(e) {\n                                move(e);\n                            });\n\n                            return $target;\n                        }\n\n                        $list.find('> li.activity').each(function(index, item) {\n                            var $item = $(item);\n                            var to = $item.attr('id').match(/item-(\\d+)$/)[1];\n                            if (to === item_id) {\n                                $cancel = create_command('cancel', 't/left');\n                                $cancel.on('click', function() {\n                                    move_targets.hide();\n                                });\n                                var $commands = $item.find('.commands');\n                                $commands.find('a').each(function() {\n                                    $(this).hide();\n                                });\n                                $commands.append($cancel);\n                                $item.css('opacity', 0.5);\n                            } else if (to !== next_id) {\n                                var $target = create_target(item_id, to);\n                                $item.before($target);\n                                targets.push($target);\n                            }\n                        }, this);\n\n                        if ($next) {\n                            var $target = create_target(item_id, 0);\n                            $list.append($target);\n                            targets.push($target);\n                        }\n                    };\n                }();\n\n                /**\n                 *  @class Targets for restoring an item\n                 */\n\n                var restore_targets = new function() {\n                    this.is_directory = null;\n                    var $clipboard = null,\n                        targets = [];\n\n                    /**\n                     *\n                     * @param id\n                     * @param section\n                     * @returns {jQuery}\n                     */\n\n\n                    function create_target(id, section) {\n                        var href = '';\n\n                        var inSection = $('#copy-section-form').data('in-section');\n                        if (restore_targets.is_directory) {\n                            href = get_action_url('restore', {\n                                'directory': true,\n                                'path': id,\n                                'course': course.id,\n                                'section': section,\n                                'in_section': inSection,\n                                'sesskey': M.cfg.sesskey\n                            });\n                        } else {\n                            href = get_action_url('restore', {\n                                'directory': false,\n                                'id': id,\n                                'course': course.id,\n                                'section': section,\n                                'in_section': inSection,\n                                'sesskey': M.cfg.sesskey\n                            });\n                        }\n\n                        var $target = $('<a/>')\n                            .attr('class', 'restore')\n                            .attr('href', href)\n                            .attr('title', str('copyhere'))\n                            .append(\n                                $('<img class=\"move_target\"/>')\n                                    .attr('alt', str('copyhere'))\n                                    .attr('src', M.util.image_url('dropzone_arrow', 'block_sharing_cart'))\n                            );\n\n                        targets.push($target);\n                        return $target;\n                    }\n\n                    /**\n                     *  Hide restore targets\n                     */\n                    this.hide = function() {\n                        if ($clipboard !== null) {\n                            $clipboard.remove();\n                            $clipboard = null;\n                            $.each(targets, function(index, $target) {\n                                $target.remove();\n                            });\n                            targets = [];\n                        }\n                    };\n\n                    /**\n                     *\n                     *\n                     *  @param {int} id  The item ID\n                     */\n                    this.show = function(id) {\n                        this.hide();\n\n                        var $view = $(\"<span/>\");\n\n                        if (this.is_directory) {\n                            $view.html(id).css('display', 'inline');\n                            $view.prepend(\n                                $(\"<i/>\").addClass(\"icon\")\n                                    .attr(\"alt\", id)\n                                // .attr(\"src\", M.util.image_url(icon['dir-closed'].pix, null))\n                            );\n                        } else {\n                            var $item = $block.find('#block_sharing_cart-item-' + id);\n                            $view = $($item.find('div')[0].cloneNode(true)).css('display', 'inline');\n                            $view.attr('class', $view.attr('class').replace(/mod-indent-\\d+/, ''));\n                            $view.find('.commands').remove();\n                        }\n\n                        var $cancel = create_command('cancel');\n\n                        $cancel.on('click', this.hide);\n\n                        $clipboard = $('<div class=\"clipboard\"/>');\n                        $clipboard.append(str('clipboard') + \": \").append($view).append($cancel);\n\n                        if (course.is_frontpage) {\n                            var $sitetopic = $('.sitetopic');\n                            var $mainmenu = $('.block_site_main_menu');\n                            if ($sitetopic) {\n                                $sitetopic.find('*').before($clipboard);\n                            } else if ($mainmenu) {\n                                $mainmenu.find('.content').before($clipboard);\n                            }\n\n                            // Mainmenu = section #0, sitetopic = section #1\n                            if ($mainmenu) {\n                                $mainmenu.find('.footer').before(create_target(id, 0));\n                            }\n                            if ($sitetopic) {\n                                $sitetopic.find('ul.section').append(create_target(id, 1));\n                            }\n                        } else {\n                            var $container = $('.course-content');\n                            $container.prepend($clipboard);\n                            $container.find(M.course.format.get_section_wrapper(null)).each(function(index, sectionDOM) {\n                                var $section = $(sectionDOM);\n                                var section = $section.attr('id').match(/(\\d+)$/)[1];\n                                $section.find('ul.section').first().append(create_target(id, section));\n                            }, this);\n                        }\n                    };\n                }();\n\n                // /////// INITIALIZATION /////////\n\n                /**\n                 *\n                 * @returns {string|*}\n                 */\n                $.get_plugin_name = function() {\n                    var $blockheader = $block.find(\"h2\");\n\n                    if (!$blockheader.length) {\n                        $blockheader = $block.find(\"h3\");\n\n                        if ($blockheader.length) {\n                            return $blockheader.html();\n                        }\n                    } else {\n                        return $blockheader.html();\n                    }\n\n                    return \"\";\n                };\n\n                /**\n                 *\n                 * @param e\n                 * @param activityName\n                 */\n                $.on_backup = function(e, activityName) {\n                    var cmid = (function($backup) {\n                        var $activity = $backup.closest('li.activity');\n                        if ($activity.length) {\n                            return $activity.attr('id').match(/(\\d+)$/)[1];\n                        }\n                        var $commands = $backup.closest('.commands');\n                        var dataowner = $commands.attr('data-owner');\n                        if (dataowner.length) {\n                            return dataowner.match(/(\\d+)$/)[1];\n                        }\n                        return $commands.find('a.editing_delete').attr('href').match(/delete=(\\d+)/)[1];\n                    })($(e.target));\n\n                    var data =\n                        {\n                            \"action\": \"is_userdata_copyable\",\n                            \"cmid\": cmid\n                        };\n\n                    on_backup_modal(data, activityName, str('confirm_backup'), false);\n                };\n\n                /**\n                 *  On movedir command clicked\n                 *\n                 *  @param {DOMEventFacade} e\n                 */\n                $.on_movedir = function(e) {\n                    var $commands = $(e.target).closest('.commands');\n\n                    var $current_dir = $commands.closest('li.directory');\n                    var current_path = $current_dir.length ? $current_dir.attr('directory-path') : '/';\n\n                    var item_id = $(e.target).closest('li.activity').attr('id').match(/(\\d+)$/)[1];\n\n                    var dirs = [];\n                    $block.find('li.directory').each(function() {\n                        dirs.push($(this).attr('directory-path'));\n                    });\n\n                    var $form = $('<form/>');\n                    // eslint-disable-next-line no-script-url\n                    $form.attr('action', 'javascript:void(0)');\n\n                    function submit() {\n                        var folder_to = $form.find('[name=\"to\"]').val();\n                        var $spinner = add_spinner();\n                        $.post(get_action_url('rest'),\n                            {\n                                \"action\": \"movedir\",\n                                \"item_id\": item_id,\n                                \"folder_to\": folder_to,\n                                \"sesskey\": M.cfg.sesskey\n                            },\n                            function() {\n                                reload_tree();\n                                directories.reset();\n                            })\n                            .fail(function(response) {\n                                show_error(response);\n                            })\n                            .always(function() {\n                                $spinner.hide();\n                            });\n                    }\n\n                    $form.submit(submit);\n\n                    if (dirs.length === 0) {\n                        var $input = $('<input class=\"form-control\" type=\"text\" name=\"to\"/>').val(current_path);\n                        setTimeout(function() {\n                            $input.focus();\n                        }, 1);\n                        $form.append($input);\n                    } else {\n                        dirs.unshift('/');\n\n                        var $select = $('<select class=\"custom-select\" name=\"to\"/>');\n                        for (var i = 0; i < dirs.length; i++) {\n                            $select.append($('<option/>').val(dirs[i]).append(dirs[i]));\n                        }\n                        $select.val(current_path);\n                        $select.change(submit);\n                        $form.append($select);\n\n                        var $edit = create_command('edit');\n\n                        $edit.on('click', function() {\n                            var $input = $('<input type=\"text\" name=\"to\"/>').val(current_path);\n                            $select.remove();\n                            $edit.replaceWith($input);\n                            $input.focus();\n                        });\n\n                        $form.append($edit);\n                    }\n\n                    var $cancel = create_command('cancel');\n                    $cancel.on('click', function() {\n                        $form.remove();\n                        $commands.find('a').show();\n                    });\n                    $form.append($cancel);\n\n                    $commands.find('a').each(function() {\n                        $(this).hide();\n                    });\n                    $commands.append($form);\n                };\n\n                /**\n                 *  On move command clicked\n                 *\n                 *  @param {DOMEventFacade} e\n                 */\n                $.on_move = function(e) {\n                    var $item = $(e.target).closest('li.activity');\n                    var id = $item.attr('id').match(/(\\d+)$/)[1];\n\n                    move_targets.show(id);\n                };\n\n                /**\n                 *  On delete command clicked\n                 *\n                 *  @param {DOMEventFacade} e\n                 */\n                $.on_delete = function(e) {\n                    var $item = $(e.target).closest('li');\n                    var liText = $item[0].innerText;\n\n                    var isDirectory = false;\n                    var modalBody;\n                    var item;\n                    var description_text = '';\n\n                    if ($item.hasClass(\"directory\")) {\n                        isDirectory = true;\n                        item = str('folder_string');\n                        description_text = str('delete_folder');\n                    } else {\n                        item = str('activity_string');\n                    }\n\n                    modalBody = '<p class=\"delete-item\">' + item + ' ' + liText + description_text + '</p>';\n\n                    confirm_modal({\n                        'title': str('confirm_delete'),\n                        'body': modalBody,\n                        'save_button': str('modal_confirm_delete'),\n                        'checkbox': false,\n                        'next': function() {\n\n                            var data = {};\n\n                            if (isDirectory === true) {\n                                data = {\n                                    \"action\": \"delete_directory\",\n                                    \"path\": $item.attr(\"directory-path\"),\n                                    \"sesskey\": M.cfg.sesskey\n                                };\n                            } else if ($item.hasClass(\"activity\")) {\n                                data = {\n                                    \"action\": \"delete\",\n                                    \"id\": $item.attr('id').match(/(\\d+)$/)[1],\n                                    \"sesskey\": M.cfg.sesskey\n                                };\n                            }\n\n                            var $spinner = add_spinner();\n\n                            $.post(get_action_url(\"rest\"), data,\n                                function() {\n                                    reload_tree();\n                                })\n                                .fail(function(response) {\n                                    show_error(response);\n                                })\n                                .always(function() {\n                                    $spinner.hide();\n                                });\n\n                            e.stopPropagation();\n                        }\n                    });\n                };\n\n                /**\n                 *  On restore command clicked\n                 *\n                 *  @param {DOMEventFacade} e\n                 */\n                $.on_restore = function(e) {\n                    var $item = $(e.target).closest('li');\n                    var id = null;\n\n                    if ($item.hasClass(\"directory\")) {\n                        id = $item.attr(\"directory-path\");\n                        restore_targets.is_directory = true;\n                    } else if ($item.hasClass(\"activity\")) {\n                        id = $item.attr('id').match(/(\\d+)$/)[1];\n                        restore_targets.is_directory = false;\n                    }\n\n                    restore_targets.show(id);\n                };\n\n                /**\n                 * On backup the whole section as a folder\n                 *\n                 * @param {int} sectionId\n                 * @param {int} sectionNumber\n                 * @param {int} courseId\n                 * @param {string} sectionName\n                 */\n                $.on_section_backup = function(sectionId, sectionNumber, courseId, sectionName) {\n                    var data =\n                        {\n                            \"action\": \"is_userdata_copyable_section\",\n                            \"sectionid\": sectionId,\n                            \"sectionnumber\": sectionNumber,\n                            \"courseid\": courseId,\n                        };\n\n                    var body_html = '<p class=\"alert alert-danger mt-3\">' + str('backup_heavy_load_warning_message') +\n                        '</p>' + str('confirm_backup_section');\n\n                    on_backup_modal(data, sectionName, body_html, true);\n                };\n\n                /**\n                 *  Initialize the delete bulk\n                 */\n                $.init_bulk_delete = function(isspeciallayout) {\n                    var bulkdelete = $block.find('.editing_bulkdelete');\n                    if (bulkdelete.length) {\n                        if (isspeciallayout) {\n                            bulkdelete.attr('role', 'menuitem').addClass('dropdown-item menu-action');\n                            bulkdelete.append($(\"<span class='menu-action-text'/>\").append(bulkdelete.attr('title')));\n\n                            $block.find('.menubar .dropdown .dropdown-menu').append(bulkdelete);\n                        } else {\n                            $block.find('.header .commands').append(bulkdelete);\n                        }\n                    }\n                };\n\n                /**\n                 *  Initialize the help icon\n                 */\n                $.init_help_icon = function(isspeciallayout) {\n                    var helpicon = $block.find('.header-commands > .help-icon');\n\n                    if (isspeciallayout) {\n                        $block.find('.header-commands').parent().css('display', 'block');\n                    } else {\n                        $block.find('.header .commands').append(helpicon);\n                    }\n                };\n\n                /**\n                 *  Initialize the Sharing Cart block header\n                 */\n                $.init_block_header = function() {\n                    var isspeciallayout = verify_layout();\n                    $.init_bulk_delete(isspeciallayout);\n                    $.init_help_icon(isspeciallayout);\n                };\n\n                /**\n                 *  Initialize the Sharing Cart item tree\n                 */\n                $.init_item_tree = function() {\n                    function add_actions(item, actions) {\n                        var $item = $(item);\n                        var $commands = $item.find('.commands').first();\n\n                        $.each(actions, function(index, action) {\n                            var $command = create_command(action);\n                            $command.on('click', function(e) {\n                                $['on_' + action](e);\n                            });\n                            $commands.append($command);\n                        }, this);\n                    }\n\n                    var activity_actions = ['movedir', 'move', 'delete'];\n                    if (course) {\n                        activity_actions.push('restore');\n                    }\n\n                    var directory_actions = ['delete', 'restore'];\n\n                    // Initialize items\n                    $block.find('li.activity').each(function(index, item) {\n                        if($(item).attr('data-disable-copy') == 1) {\n                            add_actions(item, ['movedir', 'move', 'delete']);\n                            return;\n                        }\n                        add_actions(item, activity_actions);\n                    });\n\n                    // Initialize directory items\n                    $block.find('li.directory').each(function(index, item) {\n                        add_actions(item, directory_actions);\n                    });\n\n                    // Initialize directories\n                    directories.init();\n                };\n\n                /**\n                 * Extract html object from area where moodle ajax was called.\n                 *\n                 * Call add_activity_backup_control to re append sharing cart icon.\n                 */\n                $.init_activity_commands = function() {\n                    $(document).ajaxComplete(function(event, xhr, settings) {\n\n                        var url = settings.url;\n                        var lastslashindex = url.lastIndexOf('=');\n                        var result = url.substring(lastslashindex + 1);\n\n                        if (result === 'core_course_edit_module' || result === 'core_course_get_module') {\n\n                            var data = JSON.parse(settings.data);\n                            var action = data[0].args.action;\n\n                            // Don't try to add icon if activity has been deleted.\n                            if (action === 'delete') {\n                                return;\n                            }\n\n                            setTimeout(function() {\n                                var activity_id = data[0].args.id;\n                                var activity = $('#module-' + activity_id);\n                                add_activity_backup_control(activity);\n\n                                if (action === 'duplicate') {\n                                    var duplicated = activity.next();\n                                    add_activity_backup_control(duplicated);\n                                }\n                            }, 1);\n                        }\n                    });\n\n                    /**\n                     * Create the backup icon\n                     *\n                     * @returns $backupIcon\n                     */\n                    function create_backup_icon() {\n\n                        var $backupIcon = $('<a href=\"javascript:void(0)\" class=\"add-to-sharing-cart\" />')\n                            .append($('<i class=\"fa fa-shopping-basket icon\"></i>'))\n                            .attr('title', str('backup'));\n\n                        if (addMethod !== 'click_to_add') {\n                            $backupIcon.addClass('d-none');\n                        }\n\n                        return $backupIcon;\n                    }\n\n                    /**\n                     * Add backup control with a click event to an activity\n                     * Added fix for copying an activity without backup routine\n                     *\n                     * @param $activity\n                     */\n                    function add_activity_backup_control($activity) {\n\n                        var activityClass = $activity[0].className;\n\n                        // Selecting modtype without prefix.\n                        var modtype = activityClass.substr(activityClass.indexOf('modtype_') + 8);\n\n                        // Default activity name.\n                        var activityName = str('activity_string');\n\n                        // Label is using a different html / css layout, so it's needed to get the name by using another $find.\n                        if (modtype !== 'label') {\n                            activityName = $('.activity#' + $activity[0].id)\n                                .find('.mod-indent-outer .activityinstance span.instancename')\n                                .html();\n                        }\n\n                        var $backupIcon = create_backup_icon();\n\n                        $backupIcon.on('click', function(e) {\n                            $.on_backup(e, activityName);\n                        });\n\n                        var $actionMenuItem = $activity.find('.action-menu.section-cm-edit-actions').parent('.actions');\n\n                        if (!$actionMenuItem.find('.add-to-sharing-cart').length) {\n                            $actionMenuItem.append($backupIcon);\n                        }\n                    }\n\n                    /**\n                     * Add backup control with a click event to a section\n                     *\n                     * @param $section\n                     */\n                    function add_section_backup_control($section) {\n\n                        var sectionId = $section.find('.section_action_menu').data('sectionid');\n                        var sectionNumber = parseInt(String($section.attr('id')).match(/\\d+/)[0]);\n                        var sectionName = $section.attr('aria-label') || $section.find('.sectionname').text().trim();\n\n                        var isFlexibleCourseFormat = $('body[id$=flexsections]').length;\n\n                        // Extract the section ID from the section if this is a Flexible\n                        // course format (since this format doesn't have an action menu)\n                        if (isFlexibleCourseFormat && (typeof sectionId === 'undefined' || sectionId === null)) {\n                            sectionId = $section.data('section-id');\n                        }\n\n                        // A bit unsafe to extract the course ID from the body but it's the best option we got at the moment\n                        var courseId = parseInt(String($('body').attr('class')).match(/course-([0-9]*)( |$)/)[1]);\n\n                        var $backupIcon = create_backup_icon();\n\n                        $backupIcon.on('click', function() {\n                            var inPlaceEditSectionName = in_place_edit_section_name($section);\n                            sectionName = (inPlaceEditSectionName !== '') ? inPlaceEditSectionName : sectionName;\n                            $.on_section_backup(sectionId, sectionNumber, courseId, sectionName);\n                        });\n\n                        var $sectionTitle = $section.find('h3.sectionname').first().find('a').last();\n\n                        var $inPlaceEditable = $section.find('h3.sectionname .inplaceeditable').first();\n                        if ($inPlaceEditable.length) {\n                            $sectionTitle = $inPlaceEditable;\n                        }\n\n                        // Add the backup icon after the cog wheel if this is a Flexible course format\n                        if (isFlexibleCourseFormat && sectionNumber === 0) {\n                            $sectionTitle = $section.find('> .controls');\n                            $sectionTitle.prepend($backupIcon);\n                        } else {\n                            $backupIcon.insertAfter($sectionTitle);\n                        }\n\n                        var activitySelector = 'li.activity';\n\n                        var $activities = $section.find(activitySelector);\n\n                        $($activities).each(function() {\n                            add_activity_backup_control($(this));\n                        });\n                    }\n\n                    $(\"body.editing .course-content li.section\").each(function() {\n                        add_section_backup_control($(this));\n                    });\n                };\n\n                /**\n                 *  Initialize the Sharing Cart footer basket for 4.0+.\n                 */\n                function init_footer_basket() {\n                    let currentDragging;\n                    const activities = document.querySelectorAll(\".activity.activity-wrapper\");\n                    const sections = document.querySelectorAll(\".course-section-header\");\n                    const sharingCartBlock = document.querySelector('section[data-block=\"sharing_cart\"]');\n\n                    add_draggable_to_first_section();\n\n                    const footer = document.getElementById('page-footer');\n                    const footerIconContainer = footer.querySelector('div[data-region=\"footer-container-popover\"]');\n\n                    var basket = document.createElement('i');\n                    basket.setAttribute('class', 'fa fa-shopping-basket');\n\n                    var basketButton = document.createElement('button');\n                    basketButton.setAttribute('class', 'btn btn-icon bg-secondary icon-no-margin btn-footer-popover');\n                    basketButton.setAttribute('style', 'z-index: 1001;');\n                    basketButton.append(basket);\n\n                    var dropAreaText = document.createElement('p');\n                    dropAreaText.setAttribute('class', 'font-weight-bold text-white');\n                    dropAreaText.innerText = str('drop_here');\n\n                    var dropArea = document.createElement('div');\n                    dropArea.setAttribute('class',\n                        'h-100 w-100 position-absolute d-flex justify-content-center align-items-center');\n                    dropArea.append(dropAreaText);\n\n                    sections.forEach(section => {\n                        drag_event_listeners(section);\n                    });\n\n                    activities.forEach(activity => {\n                        drag_event_listeners(activity);\n                    });\n\n                    /**\n                     *  Initialize events for dragging\n                     * @param {object} draggable\n                     */\n                    function drag_event_listeners(draggable) {\n                        draggable.addEventListener('dragstart', (e) => {\n                            footerIconContainer?.prepend(basketButton);\n                            sharingCartBlock.children[0].classList.add('dragging_item');\n                            sharingCartBlock.append(dropArea);\n                            currentDragging = e.target;\n                        });\n\n                        draggable.addEventListener('dragend', () => {\n                            footerIconContainer?.removeChild(basketButton);\n                            sharingCartBlock.children[0].classList.remove('dragging_item');\n                            sharingCartBlock.removeChild(dropArea);\n                        });\n                    }\n\n                    [basketButton, sharingCartBlock].forEach((dropzone) => {\n                        dropzone.addEventListener(\"dragover\", (e) => {\n                            e.preventDefault();\n                        });\n                        dropzone.addEventListener(\"dragenter\", (e) => {\n                            e.preventDefault();\n                        });\n\n                        dropzone.addEventListener(\"drop\", () => {\n                            if (currentDragging instanceof HTMLElement) {\n                                currentDragging.querySelector('.add-to-sharing-cart').click();\n                            }\n\n                            currentDragging = undefined;\n                        });\n                    });\n                }\n\n                /**\n                 *  Make the first section (General) draggable\n                 */\n                function add_draggable_to_first_section() {\n                    const courseSectionHeader = document.getElementsByClassName(\"course-section-header\")[0] ?? null;\n\n                    if (courseSectionHeader instanceof HTMLElement) {\n                        courseSectionHeader.classList.add('draggable');\n                        courseSectionHeader.setAttribute('draggable', true);\n                    }\n                }\n\n                /**\n                 * Initialize the Sharing Cart block\n                 */\n                $.init = function() {\n                    M.str.block_sharing_cart.pluginname = this.get_plugin_name();\n\n                    // Arrange header icons (bulkdelete, help)\n                    $.init_block_header();\n                    $.init_item_tree();\n                    $.init_activity_commands();\n\n                    if (addMethod === 'drag_and_drop') {\n                        init_footer_basket();\n                    }\n                };\n                var $spinner = $('<i/>').addClass('spinner fa fa-3x fa-circle-o-notch fa-spin');\n                $('div#sharing-cart-spinner-modal div.spinner-container').prepend($spinner);\n\n                $.init();\n            });\n\n            $('.copy_section').on('click', function() {\n\n                var $section_selected = ($('.section-dropdown option:selected'));\n                var sectionId = $section_selected.data('section-id');\n                var sectionNumber = $section_selected.data('section-number');\n                var courseId = $section_selected.data('course-id');\n                var sectionName = $section_selected.data('section-name');\n\n                $.on_section_backup(sectionId, sectionNumber, courseId, sectionName);\n            });\n        }\n    };\n});\n"],"names":["define","$","ModalFactory","ModalEvents","init","addMethod","document","ready","str","identifier","M","block_sharing_cart","moodle","get_action_url","name","args","url","cfg","wwwroot","q","k","push","encodeURIComponent","join","confirm_modal","obj","checkbox","body","create","type","types","SAVE_CANCEL","title","done","modal","setSaveButtonText","save_button","getRoot","on","save","e","response","target","find","is","next","hidden","removeClass","show","in_place_edit_section_name","$section","sectionName","$inPlaceEditable","length","data","on_backup_modal","post_data","title_str","body_str","isSection","post","sectionId","sectionNumber","courseId","userdata","$commands","closest","attr","text","trim","String","parent","inPlaceEditSectionName","$spinner","add_spinner","$node_spinner","add_node_spinner","sesskey","reload_tree","fail","show_error","always","hide","backup_section","sectionid","sectionnumber","courseid","cmid","course","id","backup","on_success","icon","css","iconClass","$block","match","is_frontpage","hasClass","ex","JSON","parse","responseText","core","exception","message","create_command","iconElement","addClass","append","$node","replaceWith","init_item_tree","directories","param","readCookie","KEY","opens","cookie","pop","split","map","v","parseInt","expires","Date","setDate","getDate","value","expireTimeInMillisecond","d","setTime","getTime","toUTCString","setCookie","open","$dir","visible","i","each","index","dir","toggle","reset","move_targets","$cancel","targets","remove","this","$target","item_id","$current","$next","$list","next_id","create_target","area_to","$anchor","m","move","item","$item","to","before","restore_targets","is_directory","$clipboard","section","href","inSection","util","image_url","$view","html","prepend","cloneNode","replace","$sitetopic","$mainmenu","$container","format","get_section_wrapper","sectionDOM","first","init_footer_basket","currentDragging","activities","querySelectorAll","sections","sharingCartBlock","querySelector","courseSectionHeader","getElementsByClassName","HTMLElement","classList","add","setAttribute","add_draggable_to_first_section","footerIconContainer","getElementById","basket","createElement","basketButton","dropAreaText","innerText","dropArea","drag_event_listeners","draggable","addEventListener","children","removeChild","forEach","activity","dropzone","preventDefault","click","undefined","get_plugin_name","$blockheader","on_backup","activityName","$backup","$activity","dataowner","on_movedir","$current_dir","current_path","dirs","$form","submit","folder_to","val","$input","setTimeout","focus","unshift","$select","change","$edit","on_move","on_delete","modalBody","liText","isDirectory","description_text","stopPropagation","on_restore","on_section_backup","init_bulk_delete","isspeciallayout","bulkdelete","init_help_icon","helpicon","init_block_header","add_actions","actions","action","$command","activity_actions","directory_actions","init_activity_commands","create_backup_icon","$backupIcon","add_activity_backup_control","activityClass","className","modtype","substr","indexOf","$actionMenuItem","ajaxComplete","event","xhr","settings","lastslashindex","lastIndexOf","result","substring","activity_id","isFlexibleCourseFormat","$sectionTitle","last","insertAfter","$activities","add_section_backup_control","pluginname","$section_selected"],"mappings":"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"}