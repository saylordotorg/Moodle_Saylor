{"version":3,"sources":["../src/script.js"],"names":["define","$","ModalFactory","ModalEvents","init","document","ready","str","identifier","M","block_sharing_cart","moodle","get_action_url","name","args","url","cfg","wwwroot","q","k","push","encodeURIComponent","join","confirm_modal","obj","checkbox","body","create","type","types","SAVE_CANCEL","title","done","modal","setSaveButtonText","save_button","getRoot","on","save","e","response","target","find","is","next","hidden","removeClass","show","in_place_edit_section_name","$section","sectionName","$inPlaceEditable","length","data","on_backup_modal","post_data","title_str","body_str","isSection","post","sectionId","sectionNumber","courseId","userdata","$commands","closest","attr","text","trim","String","parent","inPlaceEditSectionName","$spinner","add_spinner","$node_spinner","add_node_spinner","action","sectionid","sectionnumber","courseid","sectionname","sesskey","reload_tree","fail","show_error","always","hide","backup_section","cmid","course","id","backup","on_success","icon","css","iconClass","movedir","move","edit","cancel","delete","restore","dir-open","dir-closed","$block","this","match","is_frontpage","hasClass","ex","JSON","parse","responseText","core","exception","message","create_command","iconElement","addClass","append","$node","replaceWith","init_item_tree","directories","param","readCookie","KEY","opens","cookie","pop","split","map","v","parseInt","expires","Date","setDate","getDate","value","expireTimeInMillisecond","d","setTime","getTime","toUTCString","setCookie","open","$dir","visible","i","each","index","dir","toggle","reset","move_targets","$cancel","targets","remove","$target","item_id","$current","$next","$list","next_id","create_target","area_to","$anchor","m","item","$item","to","before","restore_targets","is_directory","$clipboard","section","href","inSection","directory","path","in_section","util","image_url","$view","html","prepend","cloneNode","replace","$sitetopic","$mainmenu","$container","format","get_section_wrapper","sectionDOM","first","get_plugin_name","$blockheader","on_backup","activityName","$backup","$activity","dataowner","on_movedir","$current_dir","current_path","dirs","$form","submit","folder_to","val","$input","setTimeout","focus","unshift","$select","change","$edit","on_move","on_delete","modalBody","liText","innerText","isDirectory","description_text","stopPropagation","on_restore","on_section_backup","init_bulk_delete","isspeciallayout","bulkdelete","init_help_icon","helpicon","init_block_header","add_actions","actions","$command","activity_actions","directory_actions","init_activity_commands","create_backup_icon","add_activity_backup_control","activityClass","className","modtype","substr","indexOf","$backupIcon","$actionMenuItem","ajaxComplete","event","xhr","settings","lastslashindex","lastIndexOf","result","substring","activity_id","activity","isFlexibleCourseFormat","$sectionTitle","last","insertAfter","$activities","add_section_backup_control","pluginname","$section_selected"],"mappings":"AAuBAA,QAAQ,SAAU,qBAAsB,qBAAsB,SAASC,EAAGC,EAAcC,GACpF,OACIC,KAAM,WACFH,EAAEI,UAAUC,MAAM,WAQd,SAASC,EAAIC,GACT,OAAOC,EAAEF,IAAIG,mBAAmBF,IAAeC,EAAEF,IAAII,OAAOH,GAUhE,SAASI,EAAeC,EAAMC,GAC1B,IAAIC,EAAMN,EAAEO,IAAIC,QAAU,wBAA0BJ,EAAO,OAC3D,GAAIC,EAAM,CACN,IAAII,KACJ,IAAK,IAAIC,KAAKL,EACVI,EAAEE,KAAKD,EAAI,IAAME,mBAAmBP,EAAKK,KAE7CJ,GAAO,IAAMG,EAAEI,KAAK,KAExB,OAAOP,EAQX,SAASQ,EAAcC,GAGfA,EAAIC,WACJD,EAAIE,MACA,oIAEiCnB,EAAI,kBAAoB,kBAKjEL,EAAayB,QACTC,KAAM1B,EAAa2B,MAAMC,YACzBC,MAAOP,EAAIO,MACXL,KAAMF,EAAIE,OACXM,KAAK,SAASC,GACbA,EAAMC,kBAAkBV,EAAIW,aAG5BF,EAAMG,UAAUC,GAAGlC,EAAYmC,KAAM,SAASC,GAE1C,IAAIC,GACAf,SAAYxB,EAAEsC,EAAEE,QAAQC,KAAK,mBAAmBC,GAAG,aAGvDnB,EAAIoB,KAAKJ,KAIbP,EAAMG,UAAUC,GAAGlC,EAAY0C,OAAQ,WACnC5C,EAAE,QAAQ6C,YAAY,gBAG1Bb,EAAMc,SAWd,SAASC,EAA2BC,GAChC,IAAIC,EAAc,GACdC,EAAmBF,EAASP,KAAK,mCAIrC,OAHIS,EAAiBC,SACjBF,EAAcC,EAAiBE,KAAK,UAEjCH,EASX,SAASI,EAAgBC,EAAWC,EAAWC,EAAUC,GAEjDzD,EAAE0D,KAAK/C,EAAe,QAAS2C,EAC3B,SAASf,IAMd,SAASA,GACR,IACIf,GAAW,EADa,MAAbe,IAIXf,GAAW,GAGfF,GACIQ,MAASyB,EACT9B,KAAQ+B,EACRtB,YAAe5B,EAAI,wBACnBkB,SAAYA,EACZmB,KAAQ,SAASS,IACK,IAAdK,EA6NpB,SAAwBE,EAAWC,EAAeC,EAAUC,GACxD,IAAIC,EAAY/D,EAAE,+DAAiE2D,EAAY,KAC3FX,EAAWe,EAAUC,QAAQ,mBAC7Bf,EAAcD,EAASiB,KAAK,eAAiBjB,EAASP,KAAK,gBAAgByB,OAAOC,OAElE,OAAhBlB,IACAA,EAAcmB,OAAOpE,EAAE,qDAAwD2D,EAAY,MACtFU,SAASA,SAAS5B,KAAK,kBAAkByB,SAGlD,IAAII,EAAyBvB,EAA2BC,GACxDC,EAA0C,KAA3BqB,EAAiCA,EAAyBrB,EAEzE,IAAIsB,EAAWC,IACXC,EAAgBC,EAAiBX,GAErC/D,EAAE0D,KAAK/C,EAAe,SAEdgE,OAAU,iBACVC,UAAajB,EACbkB,cAAiBjB,EACjBkB,SAAYjB,EACZkB,YAAe9B,EACfa,SAAYA,EACZkB,QAAWxE,EAAEO,IAAIiE,SAErB,WACIC,MAEHC,KAAK,SAAS3C,GACX4C,EAAW5C,KAEd6C,OAAO,WACJb,EAASc,OACTZ,EAAcY,SA9PNC,CAAehC,EAAUsB,UAAWtB,EAAUuB,cAAevB,EAAUwB,SAAU1B,EAAK5B,UAuL1G,SAAgB+D,EAAMzB,GAClB,IAAIC,EAAY/D,EAAE,WAAauF,EAAO,aACjCxB,EAAUZ,SACXY,EAAY/D,EAAE,wBAA0BuF,EAAO,OAGnD,IAAIhB,EAAWC,IACXC,EAAgBC,EAAiBX,GAErC/D,EAAE0D,KAAK/C,EAAe,SAEdgE,OAAU,SACVY,KAAQA,EACRzB,SAAYA,EACZkB,QAAWxE,EAAEO,IAAIiE,QACjBF,SAAYU,EAAOC,IAEvB,WACIR,MAEHC,KAAK,SAAS3C,GACX4C,EAAW5C,KAEd6C,OAAO,WACJX,EAAcY,OACdd,EAASc,SA9MDK,CAAOpC,EAAUiC,KAAMnC,EAAK5B,aAtBhCmE,CAAWpD,IACZ,QACF2C,KAAK,SAAS3C,GACX4C,EAAW5C,KA2B3B,IAAIqD,GAEAF,QACIG,IAAK,iBACLC,UAAW,iBAEfC,SACIF,IAAK,gBACLC,UAAW,qBAEfE,MACIH,IAAK,gBACLC,UAAW,kBAEfG,MACIJ,IAAK,iBACLC,UAAW,gBAEfI,QACIL,IAAK,iBACLC,UAAW,aAEfK,QACIN,IAAK,iBACLC,UAAW,eAEfM,SACIP,IAAK,kBACLC,UAAW,eAGfO,YACIP,UAAW,uBAEfQ,cACIR,UAAW,mBAKfS,EAASvG,EAAE,uBAGXwF,EAAS,IAAI,WACb,IAAI/D,EAAOzB,EAAE,QACbwG,KAAKf,GAAKhE,EAAKwC,KAAK,SAASwC,MAAM,gBAAgB,GACnDD,KAAKE,aAAejF,EAAKkF,SAAS,yBAQtC,SAASxB,EAAW5C,GAChB,IACI,IAAIqE,EAAKC,KAAKC,MAAMvE,EAASwE,cAC7B,IAAIvG,EAAEwG,KAAKC,WACPrG,KAAMN,EAAI,cAAgB,MAAQA,EAAI,SACtC4G,QAASN,EAAGM,UAElB,MAAO5E,GACL,IAAI9B,EAAEwG,KAAKC,WACPrG,KAAMN,EAAI,cAAgB,MAAQA,EAAI,SACtC4G,QAAS3E,EAASwE,gBA4C9B,SAASI,EAAevG,GACpB,IAAIwG,EAAcpH,EAAE,QACfiE,KAAK,MAAO3D,EAAIM,IAChBqD,KAAK,QAAS2B,EAAKhF,GAAMkF,WAK9B,OAAO9F,EAAE,kCACJqH,SAASzB,EAAKhF,GAAMiF,KACpB5B,KAAK,QAAS3D,EAAIM,IAClB0G,OAAOF,GAQhB,SAAS5C,IACL,IAAID,EAAYvE,EAAE,uFAElB,OADAA,EAAE,8BAA8BsH,OAAO/C,GAChCA,EAQX,SAASG,EAAiB6C,GACtB,IAAI9C,EAAgBzE,EAAE,6DAEtB,OADAuH,EAAMD,OAAO7C,GACNA,EAWX,SAASQ,IACLjF,EAAE0D,KAAK/C,EAAe,SAEdgE,OAAU,cACVG,SAAYU,EAAOC,IAEvB,SAASlD,GACLgE,EAAO9D,KAAK,SAAS+E,YAAYxH,EAAEuC,IACnCvC,EAAEyH,kBACH,QACFvC,KAAK,SAAS3C,GACX4C,EAAW5C,KAnBvBvC,EAAEI,UAAUgC,GAAG,QAAS,YAAa,WACjCoC,MA6GJ,IAAIkD,EAAc,IAAI,WAClB,IA9JoBC,EAChBC,EA6JAC,EAAM,0BAENC,GAhKgBH,EAgKOE,EA/JvBD,EAAaxH,SAAS2H,OAAOtB,MAAM,YAAckB,EAAQ,oBACtDC,EAAaA,EAAWI,MAAQ,IA8JPC,MAAM,KAAKC,IAAI,SAASC,GACpD,OAAOC,SAASD,KAGpB,SAAS9F,IACL,IAAIgG,EAAU,IAAIC,KAClBD,EAAQE,QAAQF,EAAQG,UAAY,IAlL5C,SAAmB5H,EAAM6H,EAAOC,GAC5B,IAAIC,EAAI,IAAIL,KACZK,EAAEC,QAAQD,EAAEE,UAAYH,GACxB,IAAIL,EAAU,WAAaM,EAAEG,cAC7B1I,SAAS2H,OAASnH,EAAO,IAAM6H,EAAQ,IAAMJ,EA+KzCU,CAAUlB,EAAKC,EAAMzG,KAAK,KAAMgH,GAGpC,SAASW,EAAKC,EAAMC,GAChB,IACI9B,EAAcxB,EADFsD,EAAU,WAAa,cACLpD,UAClCmD,EAAKxG,KAAK,gBAAgBwB,KAAK,QAAS,QAAUmD,GAClD6B,EAAKxG,KAAK,aAAayG,EAAU,OAAS,UAgB9C1C,KAAKrG,KAAO,WACR,IAAIgJ,EAAI,EACR5C,EAAO9D,KAAK,gBAAgB2G,KAAK,SAASC,EAAOC,GAC7C,IAAIL,EAAOjJ,EAAEsJ,GACbL,EAAKhF,KAAK,KAAM,0BAA4BkF,GACxCA,GAAKrB,EAAM3E,OACX2E,EAAM3G,KAAK,GACJ2G,EAAMqB,IACbH,EAAKC,GAAM,GAEfA,EAAKxG,KAAK,4BAA4BoD,IAAI,SAAU,WAAWzD,GAAG,QAAS,SAASE,IAvB5F,SAAgBA,GACZ,IAAI2G,EAAOjJ,EAAEsC,EAAEE,QAAQwB,QAAQ,gBAC3BmF,EAAIF,EAAKhF,KAAK,MAAMwC,MAAM,UAAU,GACpC0B,EAA8C,SAA1Cc,EAAKxG,KAAK,aAAaoD,IAAI,WAEnCmD,EAAKC,EAAMd,GACXL,EAAMqB,GAAKhB,EAAI,EAAI,EACnB9F,IAiBQkH,CAAOjH,KAEX6G,OAOR3C,KAAKgD,MAAQ,WACT1B,KACAtB,KAAKrG,OACLkC,MAOJoH,EAAe,IAAI,WACnB,IAAIC,EAAU,KACVC,KAKJnD,KAAKnB,KAAO,WACR,GAAgB,OAAZqE,EAAkB,CAClB,IAAI3F,EAAY2F,EAAQ1F,QAAQ,aAChC0F,EAAQE,SACRF,EAAU,KACV3F,EAAUC,QAAQ,eAAe6B,IAAI,UAAW,GAChD9B,EAAUtB,KAAK,KAAK2G,KAAK,WACrBpJ,EAAEwG,MAAM1D,SAEZ9C,EAAEoJ,KAAKO,EAAS,SAASN,EAAOQ,GAC5BA,EAAQD,WAEZD,OASRnD,KAAK1D,KAAO,SAASgH,GACjBtD,KAAKnB,OA2BL,IAAI0E,EAAWxD,EAAO9D,KAAK,4BAA8BqH,GACrDE,EAAQD,EAASpH,OACjBsH,EAAQF,EAAS/F,QAAQ,MAEzBkG,EAAU,EAWd,SAASC,EAAcL,EAASM,GAC5B,IAAIC,EAAUrK,EAAE,kCACXqH,SAAS,QAAUyC,EAAU,OAASM,GACtCnG,KAAK,QAAS3D,EAAI,aAClBgH,OACGtH,EAAE,MAAQM,EAAI,eAAiB,QAC1B2D,KAAK,MAAO3D,EAAI,cAGzBuJ,EAAU7J,EAAE,kCACXsH,OAAO+C,GAKZ,OAJAA,EAAQjI,GAAG,QAAS,SAASE,IAnDjC,SAAcA,GAEV,IAAIgI,EAAItK,EAAEsC,EAAEE,QAAQwB,QAAQ,KAAKC,KAAK,SAASwC,MAAM,uBACjDqD,EAAUQ,EAAE,GACZF,EAAUE,EAAE,GAEZ/F,EAAWC,IACfxE,EAAE0D,KAAK/C,EAAe,SAEdgE,OAAU,OACVmF,QAAWA,EACXM,QAAWA,EACXpF,QAAWxE,EAAEO,IAAIiE,SAErB,WACIC,MAEHC,KAAK,SAAS3C,GACX4C,EAAW5C,KAEd6C,OAAO,WACJb,EAASc,SA+BbW,CAAK1D,KAGFuH,EAwBX,GAjDIG,EAAM7G,SACN+G,EAAUF,EAAM/F,KAAK,MAAMwC,MAAM,eAAe,IA2BpDwD,EAAMxH,KAAK,iBAAiB2G,KAAK,SAASC,EAAOkB,GAC7C,IAAIC,EAAQxK,EAAEuK,GACVE,EAAKD,EAAMvG,KAAK,MAAMwC,MAAM,eAAe,GAC/C,GAAIgE,IAAOX,EAAS,EAChBJ,EAAUvC,EAAe,WACjB/E,GAAG,QAAS,WAChBqH,EAAapE,SAEjB,IAAItB,EAAYyG,EAAM/H,KAAK,aAC3BsB,EAAUtB,KAAK,KAAK2G,KAAK,WACrBpJ,EAAEwG,MAAMnB,SAEZtB,EAAUuD,OAAOoC,GACjBc,EAAM3E,IAAI,UAAW,SAClB,GAAI4E,IAAOP,EAAS,CACvB,IAAIL,EAAUM,EAAcL,EAASW,GACrCD,EAAME,OAAOb,GACbF,EAAQxI,KAAK0I,KAElBrD,MAECwD,EAAO,CACP,IAAIH,EAAUM,EAAcL,EAAS,GACrCG,EAAM3C,OAAOuC,GACbF,EAAQxI,KAAK0I,MASrBc,EAAkB,IAAI,WACtBnE,KAAKoE,aAAe,KACpB,IAAIC,EAAa,KACblB,KAUJ,SAASQ,EAAc1E,EAAIqF,GACvB,IAAIC,EAAO,GAEPC,EAAYhL,EAAE,sBAAsBoD,KAAK,cAEzC2H,EADAJ,EAAgBC,aACTjK,EAAe,WAClBsK,WAAa,EACbC,KAAQzF,EACRD,OAAUA,EAAOC,GACjBqF,QAAWA,EACXK,WAAcH,EACdhG,QAAWxE,EAAEO,IAAIiE,UAGdrE,EAAe,WAClBsK,WAAa,EACbxF,GAAMA,EACND,OAAUA,EAAOC,GACjBqF,QAAWA,EACXK,WAAcH,EACdhG,QAAWxE,EAAEO,IAAIiE,UAIzB,IAAI6E,EAAU7J,EAAE,QACXiE,KAAK,QAAS,WACdA,KAAK,OAAQ8G,GACb9G,KAAK,QAAS3D,EAAI,aAClBgH,OACGtH,EAAE,8BACGiE,KAAK,MAAO3D,EAAI,aAChB2D,KAAK,MAAOzD,EAAE4K,KAAKC,UAAU,iBAAkB,wBAI5D,OADA1B,EAAQxI,KAAK0I,GACNA,EAMXrD,KAAKnB,KAAO,WACW,OAAfwF,IACAA,EAAWjB,SACXiB,EAAa,KACb7K,EAAEoJ,KAAKO,EAAS,SAASN,EAAOQ,GAC5BA,EAAQD,WAEZD,OASRnD,KAAK1D,KAAO,SAAS2C,GACjBe,KAAKnB,OAEL,IAAIiG,EAAQtL,EAAE,WAEd,GAAIwG,KAAKoE,aACLU,EAAMC,KAAK9F,GAAII,IAAI,UAAW,UAC9ByF,EAAME,QACFxL,EAAE,QAAQqH,SAAS,QACdpD,KAAK,MAAOwB,QAGlB,CACH,IAAI+E,EAAQjE,EAAO9D,KAAK,4BAA8BgD,IACtD6F,EAAQtL,EAAEwK,EAAM/H,KAAK,OAAO,GAAGgJ,WAAU,IAAO5F,IAAI,UAAW,WACzD5B,KAAK,QAASqH,EAAMrH,KAAK,SAASyH,QAAQ,iBAAkB,KAClEJ,EAAM7I,KAAK,aAAamH,SAG5B,IAAIF,EAAUvC,EAAe,UAO7B,GALAuC,EAAQtH,GAAG,QAASoE,KAAKnB,OAEzBwF,EAAa7K,EAAE,6BACJsH,OAAOhH,EAAI,aAAe,MAAMgH,OAAOgE,GAAOhE,OAAOoC,GAE5DlE,EAAOkB,aAAc,CACrB,IAAIiF,EAAa3L,EAAE,cACf4L,EAAY5L,EAAE,yBACd2L,EACAA,EAAWlJ,KAAK,KAAKiI,OAAOG,GACrBe,GACPA,EAAUnJ,KAAK,YAAYiI,OAAOG,GAIlCe,GACAA,EAAUnJ,KAAK,WAAWiI,OAAOP,EAAc1E,EAAI,IAEnDkG,GACAA,EAAWlJ,KAAK,cAAc6E,OAAO6C,EAAc1E,EAAI,QAExD,CACH,IAAIoG,EAAa7L,EAAE,mBACnB6L,EAAWL,QAAQX,GACnBgB,EAAWpJ,KAAKjC,EAAEgF,OAAOsG,OAAOC,oBAAoB,OAAO3C,KAAK,SAASC,EAAO2C,GAC5E,IAAIhJ,EAAWhD,EAAEgM,GACblB,EAAU9H,EAASiB,KAAK,MAAMwC,MAAM,UAAU,GAClDzD,EAASP,KAAK,cAAcwJ,QAAQ3E,OAAO6C,EAAc1E,EAAIqF,KAC9DtE,SAWfxG,EAAEkM,gBAAkB,WAChB,IAAIC,EAAe5F,EAAO9D,KAAK,MAE/B,OAAK0J,EAAahJ,OAOPgJ,EAAaZ,QANpBY,EAAe5F,EAAO9D,KAAK,OAEVU,OACNgJ,EAAaZ,OAMrB,IAQXvL,EAAEoM,UAAY,SAAS9J,EAAG+J,GAoBtBhJ,GAJQsB,OAAU,uBACVY,KAhBG,SAAU+G,GACjB,IAAIC,EAAYD,EAAQtI,QAAQ,eAChC,GAAIuI,EAAUpJ,OACV,OAAOoJ,EAAUtI,KAAK,MAAMwC,MAAM,UAAU,GAEhD,IAAI1C,EAAYuI,EAAQtI,QAAQ,aAC5BwI,EAAYzI,EAAUE,KAAK,cAC/B,OAAIuI,EAAUrJ,OACHqJ,EAAU/F,MAAM,UAAU,GAE9B1C,EAAUtB,KAAK,oBAAoBwB,KAAK,QAAQwC,MAAM,gBAAgB,GAVtE,CAWRzG,EAAEsC,EAAEE,UAQe6J,EAAc/L,EAAI,mBAAmB,IAQ/DN,EAAEyM,WAAa,SAASnK,GACpB,IAAIyB,EAAY/D,EAAEsC,EAAEE,QAAQwB,QAAQ,aAEhC0I,EAAe3I,EAAUC,QAAQ,gBACjC2I,EAAeD,EAAavJ,OAASuJ,EAAazI,KAAK,kBAAoB,IAE3E6F,EAAU9J,EAAEsC,EAAEE,QAAQwB,QAAQ,eAAeC,KAAK,MAAMwC,MAAM,UAAU,GAExEmG,KACJrG,EAAO9D,KAAK,gBAAgB2G,KAAK,WAC7BwD,EAAKzL,KAAKnB,EAAEwG,MAAMvC,KAAK,qBAG3B,IAAI4I,EAAQ7M,EAAE,WAId,SAAS8M,IACL,IAAIC,EAAYF,EAAMpK,KAAK,eAAeuK,MACtCzI,EAAWC,IACfxE,EAAE0D,KAAK/C,EAAe,SAEdgE,OAAU,UACVmF,QAAWA,EACXiD,UAAaA,EACb/H,QAAWxE,EAAEO,IAAIiE,SAErB,WACIC,IACAyC,EAAY8B,UAEftE,KAAK,SAAS3C,GACX4C,EAAW5C,KAEd6C,OAAO,WACJb,EAASc,SAMrB,GA1BAwH,EAAM5I,KAAK,SAAU,sBAwBrB4I,EAAMC,OAAOA,GAEO,IAAhBF,EAAKzJ,OAAc,CACnB,IAAI8J,EAASjN,EAAE,uDAAuDgN,IAAIL,GAC1EO,WAAW,WACPD,EAAOE,SACR,GACHN,EAAMvF,OAAO2F,OACV,CACHL,EAAKQ,QAAQ,KAGb,IADA,IAAIC,EAAUrN,EAAE,6CACPmJ,EAAI,EAAGA,EAAIyD,EAAKzJ,OAAQgG,IAC7BkE,EAAQ/F,OAAOtH,EAAE,aAAagN,IAAIJ,EAAKzD,IAAI7B,OAAOsF,EAAKzD,KAE3DkE,EAAQL,IAAIL,GACZU,EAAQC,OAAOR,GACfD,EAAMvF,OAAO+F,GAEb,IAAIE,EAAQpG,EAAe,QAE3BoG,EAAMnL,GAAG,QAAS,WACd,IAAI6K,EAASjN,EAAE,kCAAkCgN,IAAIL,GACrDU,EAAQzD,SACR2D,EAAM/F,YAAYyF,GAClBA,EAAOE,UAGXN,EAAMvF,OAAOiG,GAGjB,IAAI7D,EAAUvC,EAAe,UAC7BuC,EAAQtH,GAAG,QAAS,WAChByK,EAAMjD,SACN7F,EAAUtB,KAAK,KAAKK,SAExB+J,EAAMvF,OAAOoC,GAEb3F,EAAUtB,KAAK,KAAK2G,KAAK,WACrBpJ,EAAEwG,MAAMnB,SAEZtB,EAAUuD,OAAOuF,IAQrB7M,EAAEwN,QAAU,SAASlL,GACjB,IACImD,EADQzF,EAAEsC,EAAEE,QAAQwB,QAAQ,eACjBC,KAAK,MAAMwC,MAAM,UAAU,GAE1CgD,EAAa3G,KAAK2C,IAQtBzF,EAAEyN,UAAY,SAASnL,GACnB,IAIIoL,EACAnD,EALAC,EAAQxK,EAAEsC,EAAEE,QAAQwB,QAAQ,MAC5B2J,EAASnD,EAAM,GAAGoD,UAElBC,GAAc,EAGdC,EAAmB,GAEnBtD,EAAM7D,SAAS,cACfkH,GAAc,EACdtD,EAAOjK,EAAI,iBACXwN,EAAmBxN,EAAI,kBAEvBiK,EAAOjK,EAAI,mBAGfoN,EAAY,0BAA4BnD,EAAO,IAAMoD,EAASG,EAAmB,OAEjFxM,GACIQ,MAASxB,EAAI,kBACbmB,KAAQiM,EACRxL,YAAe5B,EAAI,wBACnBkB,UAAY,EACZmB,KAAQ,WAEJ,IAAIS,MAEgB,IAAhByK,EACAzK,GACIuB,OAAU,mBACVuG,KAAQV,EAAMvG,KAAK,kBACnBe,QAAWxE,EAAEO,IAAIiE,SAEdwF,EAAM7D,SAAS,cACtBvD,GACIuB,OAAU,SACVc,GAAM+E,EAAMvG,KAAK,MAAMwC,MAAM,UAAU,GACvCzB,QAAWxE,EAAEO,IAAIiE,UAIzB,IAAIT,EAAWC,IAEfxE,EAAE0D,KAAK/C,EAAe,QAASyC,EAC3B,WACI6B,MAEHC,KAAK,SAAS3C,GACX4C,EAAW5C,KAEd6C,OAAO,WACJb,EAASc,SAGjB/C,EAAEyL,sBAUd/N,EAAEgO,WAAa,SAAS1L,GACpB,IAAIkI,EAAQxK,EAAEsC,EAAEE,QAAQwB,QAAQ,MAC5ByB,EAAK,KAEL+E,EAAM7D,SAAS,cACflB,EAAK+E,EAAMvG,KAAK,kBAChB0G,EAAgBC,cAAe,GACxBJ,EAAM7D,SAAS,cACtBlB,EAAK+E,EAAMvG,KAAK,MAAMwC,MAAM,UAAU,GACtCkE,EAAgBC,cAAe,GAGnCD,EAAgB7H,KAAK2C,IAWzBzF,EAAEiO,kBAAoB,SAAStK,EAAWC,EAAeC,EAAUZ,GAY/DI,GATQsB,OAAU,+BACVC,UAAajB,EACbkB,cAAiBjB,EACjBkB,SAAYjB,GAMEZ,EAHN,sCAAwC3C,EAAI,qCACxD,OAASA,EAAI,2BAE6B,IAMlDN,EAAEkO,iBAAmB,SAASC,GAC1B,IAAIC,EAAa7H,EAAO9D,KAAK,uBACzB2L,EAAWjL,SACPgL,GACAC,EAAWnK,KAAK,OAAQ,YAAYoD,SAAS,6BAC7C+G,EAAW9G,OAAOtH,EAAE,oCAAoCsH,OAAO8G,EAAWnK,KAAK,WAE/EsC,EAAO9D,KAAK,qCAAqC6E,OAAO8G,IAExD7H,EAAO9D,KAAK,qBAAqB6E,OAAO8G,KAQpDpO,EAAEqO,eAAiB,SAASF,GACxB,IAAIG,EAAW/H,EAAO9D,KAAK,iCAEvB0L,EACA5H,EAAO9D,KAAK,oBAAoB4B,SAASwB,IAAI,UAAW,SAExDU,EAAO9D,KAAK,qBAAqB6E,OAAOgH,IAOhDtO,EAAEuO,kBAAoB,WAClB,IAAIJ,EA5wBc5H,EAAO9D,KAAK,qCACJ,OA4wB1BzC,EAAEkO,iBAAiBC,GACnBnO,EAAEqO,eAAeF,IAMrBnO,EAAEyH,eAAiB,WACf,SAAS+G,EAAYjE,EAAMkE,GACvB,IACI1K,EADQ/D,EAAEuK,GACQ9H,KAAK,aAAawJ,QAExCjM,EAAEoJ,KAAKqF,EAAS,SAASpF,EAAO1E,GAC5B,IAAI+J,EAAWvH,EAAexC,GAC9B+J,EAAStM,GAAG,QAAS,SAASE,GAC1BtC,EAAE,MAAQ2E,GAAQrC,KAEtByB,EAAUuD,OAAOoH,IAClBlI,MAGP,IAAImI,GAAoB,UAAW,OAAQ,UACvCnJ,GACAmJ,EAAiBxN,KAAK,WAG1B,IAAIyN,GAAqB,SAAU,WAGnCrI,EAAO9D,KAAK,eAAe2G,KAAK,SAASC,EAAOkB,GACJ,GAArCvK,EAAEuK,GAAMtG,KAAK,qBAIhBuK,EAAYjE,EAAMoE,GAHdH,EAAYjE,GAAO,UAAW,OAAQ,aAO9ChE,EAAO9D,KAAK,gBAAgB2G,KAAK,SAASC,EAAOkB,GAC7CiE,EAAYjE,EAAMqE,KAItBlH,EAAYvH,QAQhBH,EAAE6O,uBAAyB,WAmCvB,SAASC,IAML,OAJkB9O,EAAE,+DACfsH,OAAOtH,EAAE,+CACTiE,KAAK,QAAS3D,EAAI,WAW3B,SAASyO,EAA4BxC,GAEjC,IAAIyC,EAAgBzC,EAAU,GAAG0C,UAG7BC,EAAUF,EAAcG,OAAOH,EAAcI,QAAQ,YAAc,GAGnE/C,EAAe/L,EAAI,mBAGP,UAAZ4O,IACA7C,EAAerM,EAAE,aAAeuM,EAAU,GAAG9G,IACxChD,KAAK,yDACL8I,QAGT,IAAI8D,EAAcP,IAElBO,EAAYjN,GAAG,QAAS,SAASE,GAC7BtC,EAAEoM,UAAU9J,EAAG+J,KAGnB,IAAIiD,EAAkB/C,EAAU9J,KAAK,wCAAwC4B,OAAO,YAE/EiL,EAAgB7M,KAAK,wBAAwBU,QAC9CmM,EAAgBhI,OAAO+H,GA3E/BrP,EAAEI,UAAUmP,aAAa,SAASC,EAAOC,EAAKC,GAE1C,IAAI5O,EAAM4O,EAAS5O,IACf6O,EAAiB7O,EAAI8O,YAAY,KACjCC,EAAS/O,EAAIgP,UAAUH,EAAiB,GAE5C,GAAe,4BAAXE,GAAmD,2BAAXA,EAAqC,CAE7E,IAAIzM,EAAOyD,KAAKC,MAAM4I,EAAStM,MAC3BuB,EAASvB,EAAK,GAAGvC,KAAK8D,OAG1B,GAAe,WAAXA,EACA,OAGJuI,WAAW,WACP,IAAI6C,EAAc3M,EAAK,GAAGvC,KAAK4E,GAC3BuK,EAAWhQ,EAAE,WAAa+P,IAC9BhB,EAA4BiB,GAEb,cAAXrL,IAEAoK,EADiBiB,EAASrN,SAG/B,MA4GX3C,EAAE,2CAA2CoJ,KAAK,YAjDlD,SAAoCpG,GAEhC,IAAIW,EAAYX,EAASP,KAAK,wBAAwBW,KAAK,aACvDQ,EAAgBwE,SAAShE,OAAOpB,EAASiB,KAAK,OAAOwC,MAAM,OAAO,IAClExD,EAAcD,EAASiB,KAAK,eAAiBjB,EAASP,KAAK,gBAAgByB,OAAOC,OAElF8L,EAAyBjQ,EAAE,0BAA0BmD,QAIrD8M,QAAgD,IAAdtM,GAA2C,OAAdA,IAC/DA,EAAYX,EAASI,KAAK,eAI9B,IAAIS,EAAWuE,SAAShE,OAAOpE,EAAE,QAAQiE,KAAK,UAAUwC,MAAM,wBAAwB,IAElF4I,EAAcP,IAElBO,EAAYjN,GAAG,QAAS,WACpB,IAAIkC,EAAyBvB,EAA2BC,GACxDC,EAA0C,KAA3BqB,EAAiCA,EAAyBrB,EACzEjD,EAAEiO,kBAAkBtK,EAAWC,EAAeC,EAAUZ,KAG5D,IAAIiN,EAAgBlN,EAASP,KAAK,kBAAkBwJ,QAAQxJ,KAAK,KAAK0N,OAElEjN,EAAmBF,EAASP,KAAK,mCAAmCwJ,QACpE/I,EAAiBC,SACjB+M,EAAgBhN,GAIhB+M,GAA4C,IAAlBrM,GAC1BsM,EAAgBlN,EAASP,KAAK,gBAChB+I,QAAQ6D,GAEtBA,EAAYe,YAAYF,GAG5B,IAEIG,EAAcrN,EAASP,KAFJ,eAIvBzC,EAAEqQ,GAAajH,KAAK,WAChB2F,EAA4B/O,EAAEwG,SAKlC8J,CAA2BtQ,EAAEwG,UAOrCxG,EAAEG,KAAO,WACLK,EAAEF,IAAIG,mBAAmB8P,WAAa/J,KAAK0F,kBAG3ClM,EAAEuO,oBACFvO,EAAEyH,iBACFzH,EAAE6O,0BAEN,IAAItK,EAAWvE,EAAE,QAAQqH,SAAS,8CAClCrH,EAAE,wDAAwDwL,QAAQjH,GAElEvE,EAAEG,SAGNH,EAAE,iBAAiBoC,GAAG,QAAS,WAE3B,IAAIoO,EAAqBxQ,EAAE,qCACvB2D,EAAY6M,EAAkBpN,KAAK,cACnCQ,EAAgB4M,EAAkBpN,KAAK,kBACvCS,EAAW2M,EAAkBpN,KAAK,aAClCH,EAAcuN,EAAkBpN,KAAK,gBAEzCpD,EAAEiO,kBAAkBtK,EAAWC,EAAeC,EAAUZ","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *  Sharing Cart\n *\n *  @package    block_sharing_cart\n *  @copyright  2017 (C) VERSION2, INC.\n *  @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/modal_factory', 'core/modal_events'], function($, ModalFactory, ModalEvents) {\n    return {\n        init: function() {\n            $(document).ready(function() {\n\n                /**\n                 *  Returns a localized string\n                 *\n                 *  @param {String} identifier\n                 *  @return {String}\n                 */\n                function str(identifier) {\n                    return M.str.block_sharing_cart[identifier] || M.str.moodle[identifier];\n                }\n\n                /**\n                 *  Get an action URL\n                 *\n                 *  @param {String} name   The action name\n                 *  @param {Object} [args] The action parameters\n                 *  @return {String}\n                 */\n                function get_action_url(name, args) {\n                    var url = M.cfg.wwwroot + '/blocks/sharing_cart/' + name + '.php';\n                    if (args) {\n                        var q = [];\n                        for (var k in args) {\n                            q.push(k + '=' + encodeURIComponent(args[k]));\n                        }\n                        url += '?' + q.join('&');\n                    }\n                    return url;\n                }\n\n                /**\n                 * Modal called when confirming an action.\n                 *\n                 * @param obj\n                 */\n                function confirm_modal(obj) {\n\n                    // Checkbox for copying userdata confirmation.\n                    if (obj.checkbox) {\n                        obj.body +=\n                            '<div class=\"modal-checbox-wrapper\">' +\n                            '<input type=\"checkbox\" id=\"modal-checkbox\" class=\"modal-checkbox\">' +\n                            '<label for=\"modal-checkbox\">' + str('modal_checkbox') + '</label>' +\n                            '</div>';\n                    }\n\n\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: obj.title,\n                        body: obj.body,\n                    }).done(function(modal) {\n                        modal.setSaveButtonText(obj.save_button);\n\n                        // On save save check - if checkbox is checked.\n                        modal.getRoot().on(ModalEvents.save, function(e) {\n\n                            var response = {\n                                'checkbox': $(e.target).find('.modal-checkbox').is(':checked'),\n                            };\n\n                            obj.next(response);\n                        });\n\n                        // Remove modal from html.\n                        modal.getRoot().on(ModalEvents.hidden, function() {\n                            $('body').removeClass('modal-open');\n                        });\n\n                        modal.show();\n                    });\n                }\n\n                /**\n                 * Get the section name from the section when\n                 * it's changed with the in place editor\n                 *\n                 * @param $section\n                 * @returns {*}\n                 */\n                function in_place_edit_section_name($section) {\n                    var sectionName = '';\n                    var $inPlaceEditable = $section.find('h3.sectionname .inplaceeditable');\n                    if ($inPlaceEditable.length) {\n                        sectionName = $inPlaceEditable.data('value');\n                    }\n                    return sectionName;\n                }\n\n                /**\n                 * @param post_data\n                 * @param title_str\n                 * @param body_str\n                 * @param isSection\n                 */\n                function on_backup_modal(post_data, title_str, body_str, isSection) {\n                    (function(on_success) {\n                        $.post(get_action_url('rest'), post_data,\n                            function(response) {\n                                on_success(response);\n                            }, \"text\")\n                            .fail(function(response) {\n                                show_error(response);\n                            });\n                    })(function(response) {\n                        var copyable = response === '1';\n                        var checkbox = false;\n\n                        if (copyable) {\n                            checkbox = true;\n                        }\n\n                        confirm_modal({\n                            'title': title_str,\n                            'body': body_str,\n                            'save_button': str('modal_confirm_backup'),\n                            'checkbox': checkbox,\n                            'next': function(data) {\n                                if (isSection === true) {\n                                    backup_section(post_data.sectionid, post_data.sectionnumber, post_data.courseid, data.checkbox);\n                                } else {\n                                    backup(post_data.cmid, data.checkbox);\n                                }\n                            }\n                        });\n                    });\n                }\n\n                /** @var {Object}  The icon configurations */\n                var icon = {\n                    // Actions\n                    'backup': {\n                        css: 'editing_backup',\n                        iconClass: 'fa fa-frown-o',\n                    },\n                    'movedir': {\n                        css: 'editing_right',\n                        iconClass: 'fa fa-arrow-right',\n                    },\n                    'move': {\n                        css: 'editing_move_',\n                        iconClass: 'fa fa-arrows-v',\n                    },\n                    'edit': {\n                        css: 'editing_update',\n                        iconClass: 'fa fa-pencil',\n                    },\n                    'cancel': {\n                        css: 'editing_cancel',\n                        iconClass: 'fa fa-ban',\n                    },\n                    'delete': {\n                        css: 'editing_update',\n                        iconClass: 'fa fa-trash',\n                    },\n                    'restore': {\n                        css: 'editing_restore',\n                        iconClass: 'fa fa-clone',\n                    },\n                    // Directories\n                    'dir-open': {\n                        iconClass: 'fa fa-folder-open-o'\n                    },\n                    'dir-closed': {\n                        iconClass: 'fa fa-folder-o'\n                    },\n                };\n\n                /** @var {Node}  The Sharing Cart block container node */\n                var $block = $('.block_sharing_cart');\n\n                /** @var {Object}  The current course */\n                var course = new function() {\n                    var body = $('body');\n                    this.id = body.attr('class').match(/course-(\\d+)/)[1];\n                    this.is_frontpage = body.hasClass('pagelayout-frontpage');\n                }();\n\n                /**\n                 *  Shows an error message with given Ajax error\n                 *\n                 *  @param {Object} response  The Ajax response\n                 */\n                function show_error(response) {\n                    try {\n                        var ex = JSON.parse(response.responseText);\n                        new M.core.exception({\n                            name: str('pluginname') + ' - ' + str('error'),\n                            message: ex.message\n                        });\n                    } catch (e) {\n                        new M.core.exception({\n                            name: str('pluginname') + ' - ' + str('error'),\n                            message: response.responseText\n                        });\n                    }\n                }\n\n                /**\n                 *  Check special layout (theme boost)\n                 *\n                 *  @return {Boolean}\n                 */\n                function verify_layout() {\n                    var menuelement = $block.find('.menubar .dropdown .dropdown-menu');\n                    return (menuelement.length);\n                }\n\n                /**\n                 * Set Cookie\n                 * @param name\n                 * @param value\n                 * @param expireTimeInMillisecond\n                 */\n                function setCookie(name, value, expireTimeInMillisecond) {\n                    var d = new Date();\n                    d.setTime(d.getTime() + expireTimeInMillisecond);\n                    var expires = 'expires=' + d.toUTCString();\n                    document.cookie = name + '=' + value + ';' + expires + '';\n                }\n\n                /**\n                 * Get Cookie Value\n                 * @param param\n                 * @returns {*}\n                 */\n                function getCookieValue(param) {\n                    var readCookie = document.cookie.match('(^|;)\\\\s*' + param + '\\\\s*=\\\\s*([^;]+)');\n                    return readCookie ? readCookie.pop() : '';\n                }\n\n                /**\n                 * Create a command icon\n                 *\n                 *  @param {String} name  The command name, predefined in icon\n                 *  @param {String} [pix] The icon pix name to override\n                 */\n                function create_command(name) {\n                    var iconElement = $('<i/>')\n                        .attr('alt', str(name))\n                        .attr('class', icon[name].iconClass);\n                    // If (verify_layout()) {\n                    //     iconElement.addClass('iconcustom');\n                    // }\n\n                    return $('<a href=\"javascript:void(0)\"/>')\n                        .addClass(icon[name].css)\n                        .attr('title', str(name))\n                        .append(iconElement);\n                }\n\n                /**\n                 * Create a spinner\n                 * @param $node\n                 * @returns {*|jQuery}\n                 */\n                function add_spinner() {\n                    var $spinner = ($('<div class=\"block_spinner\"><i class=\"fa fa-circle-o-notch fa-spin fa-2x\"></i></div>'));\n                    $('section.block_sharing_cart').append($spinner);\n                    return $spinner;\n                }\n\n                /**\n                 *\n                 * @param $node\n                 * @returns {jQuery.fn.init}\n                 */\n                function add_node_spinner($node) {\n                    var $node_spinner = $('<i class=\"fa fa-circle-o-notch fa-spin node_spinner\"></i>');\n                    $node.append($node_spinner);\n                    return $node_spinner;\n                }\n\n                $(document).on('click', 'a.restore', function() {\n                    add_spinner();\n                });\n\n                /**\n                 *\n                 *  Reload the Sharing Cart item tree\n                 */\n                function reload_tree() {\n                    $.post(get_action_url(\"rest\"),\n                        {\n                            \"action\": \"render_tree\",\n                            \"courseid\": course.id\n                        },\n                        function(response) {\n                            $block.find(\".tree\").replaceWith($(response));\n                            $.init_item_tree();\n                        }, \"html\")\n                        .fail(function(response) {\n                            show_error(response);\n                        });\n                }\n\n                /**\n                 *  Backup an activity\n                 *\n                 *  @param {int} cmid\n                 *  @param {Boolean} userdata\n                 */\n                function backup(cmid, userdata) {\n                    var $commands = $('#module-' + cmid + ' .actions');\n                    if (!$commands.length) {\n                        $commands = $('[data-owner=\"#module-' + cmid + '\"]');\n                    }\n\n                    var $spinner = add_spinner();\n                    var $node_spinner = add_node_spinner($commands);\n\n                    $.post(get_action_url(\"rest\"),\n                        {\n                            \"action\": \"backup\",\n                            \"cmid\": cmid,\n                            \"userdata\": userdata,\n                            \"sesskey\": M.cfg.sesskey,\n                            \"courseid\": course.id\n                        },\n                        function() {\n                            reload_tree();\n                        })\n                        .fail(function(response) {\n                            show_error(response);\n                        })\n                        .always(function() {\n                            $node_spinner.hide();\n                            $spinner.hide();\n                        });\n                }\n\n                /**\n                 *  Backup an activities in a section\n                 *\n                 *  @param {int} sectionId\n                 *  @param {int} sectionNumber\n                 *  @param {int} courseId\n                 *  @param {Boolean} userdata\n                 */\n                function backup_section(sectionId, sectionNumber, courseId, userdata) {\n                    var $commands = $('span.inplaceeditable[data-itemtype=sectionname][data-itemid=' + sectionId + ']');\n                    var $section = $commands.closest(\"li.section.main\");\n                    var sectionName = $section.attr('aria-label') || $section.find('.sectionname').text().trim();\n\n                    if (sectionName === null) {\n                        sectionName = String($('#region-main .section_action_menu[data-sectionid=\\'' + sectionId + '\\']')\n                            .parent().parent().find('h3.sectionname').text());\n                    }\n\n                    var inPlaceEditSectionName = in_place_edit_section_name($section);\n                    sectionName = (inPlaceEditSectionName !== '') ? inPlaceEditSectionName : sectionName;\n\n                    var $spinner = add_spinner();\n                    var $node_spinner = add_node_spinner($commands);\n\n                    $.post(get_action_url(\"rest\"),\n                        {\n                            \"action\": \"backup_section\",\n                            \"sectionid\": sectionId,\n                            \"sectionnumber\": sectionNumber,\n                            \"courseid\": courseId,\n                            \"sectionname\": sectionName,\n                            \"userdata\": userdata,\n                            \"sesskey\": M.cfg.sesskey\n                        },\n                        function() {\n                            reload_tree();\n                        })\n                        .fail(function(response) {\n                            show_error(response);\n                        })\n                        .always(function() {\n                            $spinner.hide();\n                            $node_spinner.hide();\n                        });\n                }\n\n\n                // /////// CLASSES /////////\n\n                /**\n                 *  @class Directory states manager\n                 */\n                var directories = new function() {\n                    var KEY = 'block_sharing_cart-dirs';\n\n                    var opens = getCookieValue(KEY).split(',').map(function(v) {\n                        return parseInt(v);\n                    });\n\n                    function save() {\n                        var expires = new Date();\n                        expires.setDate(expires.getDate() + 30);\n                        setCookie(KEY, opens.join(','), expires);\n                    }\n\n                    function open($dir, visible) {\n                        var iconIndex = visible ? 'dir-open' : 'dir-closed';\n                        var iconElement = icon[iconIndex].iconClass;\n                        $dir.find('> div i.icon').attr('class', 'icon ' + iconElement);\n                        $dir.find('> ul.list')[visible ? 'show' : 'hide']();\n                    }\n\n                    function toggle(e) {\n                        var $dir = $(e.target).closest('li.directory');\n                        var i = $dir.attr('id').match(/(\\d+)$/)[1];\n                        var v = $dir.find('> ul.list').css('display') === 'none';\n\n                        open($dir, v);\n                        opens[i] = v ? 1 : 0;\n                        save();\n                    }\n\n                    /**\n                     *  Initialize directory states\n                     */\n                    this.init = function() {\n                        var i = 0;\n                        $block.find('li.directory').each(function(index, dir) {\n                            var $dir = $(dir);\n                            $dir.attr('id', 'block_sharing_cart-dir-' + i);\n                            if (i >= opens.length) {\n                                opens.push(0);\n                            } else if (opens[i]) {\n                                open($dir, true);\n                            }\n                            $dir.find('> div div.toggle-wrapper').css('cursor', 'pointer').on('click', function(e) {\n                                toggle(e);\n                            });\n                            i++;\n                        });\n                    };\n\n                    /**\n                     *  Reset directory states\n                     */\n                    this.reset = function() {\n                        opens = [];\n                        this.init();\n                        save();\n                    };\n                }();\n\n                /**\n                 *  @class Targets for moving an item directory\n                 */\n                var move_targets = new function() {\n                    var $cancel = null,\n                        targets = [];\n\n                    /**\n                     *  Hide move targets\n                     */\n                    this.hide = function() {\n                        if ($cancel !== null) {\n                            var $commands = $cancel.closest('.commands');\n                            $cancel.remove();\n                            $cancel = null;\n                            $commands.closest('li.activity').css('opacity', 1.0);\n                            $commands.find('a').each(function() {\n                                $(this).show();\n                            });\n                            $.each(targets, function(index, $target) {\n                                $target.remove();\n                            });\n                            targets = [];\n                        }\n                    };\n\n                    /**\n                     *  Show move targets for a given item\n                     *\n                     *  @param {int} id  The item ID\n                     */\n                    this.show = function(item_id) {\n                        this.hide();\n\n                        function move(e) {\n\n                            var m = $(e.target).closest('a').attr('class').match(/move-(\\d+)-to-(\\d+)/);\n                            var item_id = m[1],\n                                area_to = m[2];\n\n                            var $spinner = add_spinner();\n                            $.post(get_action_url(\"rest\"),\n                                {\n                                    \"action\": \"move\",\n                                    \"item_id\": item_id,\n                                    \"area_to\": area_to,\n                                    \"sesskey\": M.cfg.sesskey\n                                },\n                                function() {\n                                    reload_tree();\n                                })\n                                .fail(function(response) {\n                                    show_error(response);\n                                })\n                                .always(function() {\n                                    $spinner.hide();\n                                });\n                        }\n\n                        var $current = $block.find('#block_sharing_cart-item-' + item_id);\n                        var $next = $current.next();\n                        var $list = $current.closest('ul');\n\n                        var next_id = 0;\n                        if ($next.length) {\n                            next_id = $next.attr('id').match(/item-(\\d+)$/)[1];\n                        }\n\n                        /**\n                         *\n                         * @param item_id\n                         * @param area_to\n                         * @returns {jQuery}\n                         */\n                        function create_target(item_id, area_to) {\n                            var $anchor = $('<a href=\"javascript:void(0)\"/>')\n                                .addClass('move-' + item_id + '-to-' + area_to)\n                                .attr('title', str('movehere'))\n                                .append(\n                                    $('<p>' + str('clicktomove') + '</p>')\n                                        .attr('alt', str('movehere'))\n                                );\n\n                            var $target = $('<li class=\"activity move-to\"/>')\n                                .append($anchor);\n                            $anchor.on('click', function(e) {\n                                move(e);\n                            });\n\n                            return $target;\n                        }\n\n                        $list.find('> li.activity').each(function(index, item) {\n                            var $item = $(item);\n                            var to = $item.attr('id').match(/item-(\\d+)$/)[1];\n                            if (to === item_id) {\n                                $cancel = create_command('cancel', 't/left');\n                                $cancel.on('click', function() {\n                                    move_targets.hide();\n                                });\n                                var $commands = $item.find('.commands');\n                                $commands.find('a').each(function() {\n                                    $(this).hide();\n                                });\n                                $commands.append($cancel);\n                                $item.css('opacity', 0.5);\n                            } else if (to !== next_id) {\n                                var $target = create_target(item_id, to);\n                                $item.before($target);\n                                targets.push($target);\n                            }\n                        }, this);\n\n                        if ($next) {\n                            var $target = create_target(item_id, 0);\n                            $list.append($target);\n                            targets.push($target);\n                        }\n                    };\n                }();\n\n                /**\n                 *  @class Targets for restoring an item\n                 */\n\n                var restore_targets = new function() {\n                    this.is_directory = null;\n                    var $clipboard = null,\n                        targets = [];\n\n                    /**\n                     *\n                     * @param id\n                     * @param section\n                     * @returns {jQuery}\n                     */\n\n\n                    function create_target(id, section) {\n                        var href = '';\n\n                        var inSection = $('#copy-section-form').data('in-section');\n                        if (restore_targets.is_directory) {\n                            href = get_action_url('restore', {\n                                'directory': true,\n                                'path': id,\n                                'course': course.id,\n                                'section': section,\n                                'in_section': inSection,\n                                'sesskey': M.cfg.sesskey\n                            });\n                        } else {\n                            href = get_action_url('restore', {\n                                'directory': false,\n                                'id': id,\n                                'course': course.id,\n                                'section': section,\n                                'in_section': inSection,\n                                'sesskey': M.cfg.sesskey\n                            });\n                        }\n\n                        var $target = $('<a/>')\n                            .attr('class', 'restore')\n                            .attr('href', href)\n                            .attr('title', str('copyhere'))\n                            .append(\n                                $('<img class=\"move_target\"/>')\n                                    .attr('alt', str('copyhere'))\n                                    .attr('src', M.util.image_url('dropzone_arrow', 'block_sharing_cart'))\n                            );\n\n                        targets.push($target);\n                        return $target;\n                    }\n\n                    /**\n                     *  Hide restore targets\n                     */\n                    this.hide = function() {\n                        if ($clipboard !== null) {\n                            $clipboard.remove();\n                            $clipboard = null;\n                            $.each(targets, function(index, $target) {\n                                $target.remove();\n                            });\n                            targets = [];\n                        }\n                    };\n\n                    /**\n                     *\n                     *\n                     *  @param {int} id  The item ID\n                     */\n                    this.show = function(id) {\n                        this.hide();\n\n                        var $view = $(\"<span/>\");\n\n                        if (this.is_directory) {\n                            $view.html(id).css('display', 'inline');\n                            $view.prepend(\n                                $(\"<i/>\").addClass(\"icon\")\n                                    .attr(\"alt\", id)\n                                // .attr(\"src\", M.util.image_url(icon['dir-closed'].pix, null))\n                            );\n                        } else {\n                            var $item = $block.find('#block_sharing_cart-item-' + id);\n                            $view = $($item.find('div')[0].cloneNode(true)).css('display', 'inline');\n                            $view.attr('class', $view.attr('class').replace(/mod-indent-\\d+/, ''));\n                            $view.find('.commands').remove();\n                        }\n\n                        var $cancel = create_command('cancel');\n\n                        $cancel.on('click', this.hide);\n\n                        $clipboard = $('<div class=\"clipboard\"/>');\n                        $clipboard.append(str('clipboard') + \": \").append($view).append($cancel);\n\n                        if (course.is_frontpage) {\n                            var $sitetopic = $('.sitetopic');\n                            var $mainmenu = $('.block_site_main_menu');\n                            if ($sitetopic) {\n                                $sitetopic.find('*').before($clipboard);\n                            } else if ($mainmenu) {\n                                $mainmenu.find('.content').before($clipboard);\n                            }\n\n                            // Mainmenu = section #0, sitetopic = section #1\n                            if ($mainmenu) {\n                                $mainmenu.find('.footer').before(create_target(id, 0));\n                            }\n                            if ($sitetopic) {\n                                $sitetopic.find('ul.section').append(create_target(id, 1));\n                            }\n                        } else {\n                            var $container = $('.course-content');\n                            $container.prepend($clipboard);\n                            $container.find(M.course.format.get_section_wrapper(null)).each(function(index, sectionDOM) {\n                                var $section = $(sectionDOM);\n                                var section = $section.attr('id').match(/(\\d+)$/)[1];\n                                $section.find('ul.section').first().append(create_target(id, section));\n                            }, this);\n                        }\n                    };\n                }();\n\n                // /////// INITIALIZATION /////////\n\n                /**\n                 *\n                 * @returns {string|*}\n                 */\n                $.get_plugin_name = function() {\n                    var $blockheader = $block.find(\"h2\");\n\n                    if (!$blockheader.length) {\n                        $blockheader = $block.find(\"h3\");\n\n                        if ($blockheader.length) {\n                            return $blockheader.html();\n                        }\n                    } else {\n                        return $blockheader.html();\n                    }\n\n                    return \"\";\n                };\n\n                /**\n                 *\n                 * @param e\n                 * @param activityName\n                 */\n                $.on_backup = function(e, activityName) {\n                    var cmid = (function($backup) {\n                        var $activity = $backup.closest('li.activity');\n                        if ($activity.length) {\n                            return $activity.attr('id').match(/(\\d+)$/)[1];\n                        }\n                        var $commands = $backup.closest('.commands');\n                        var dataowner = $commands.attr('data-owner');\n                        if (dataowner.length) {\n                            return dataowner.match(/(\\d+)$/)[1];\n                        }\n                        return $commands.find('a.editing_delete').attr('href').match(/delete=(\\d+)/)[1];\n                    })($(e.target));\n\n                    var data =\n                        {\n                            \"action\": \"is_userdata_copyable\",\n                            \"cmid\": cmid\n                        };\n\n                    on_backup_modal(data, activityName, str('confirm_backup'), false);\n                };\n\n                /**\n                 *  On movedir command clicked\n                 *\n                 *  @param {DOMEventFacade} e\n                 */\n                $.on_movedir = function(e) {\n                    var $commands = $(e.target).closest('.commands');\n\n                    var $current_dir = $commands.closest('li.directory');\n                    var current_path = $current_dir.length ? $current_dir.attr('directory-path') : '/';\n\n                    var item_id = $(e.target).closest('li.activity').attr('id').match(/(\\d+)$/)[1];\n\n                    var dirs = [];\n                    $block.find('li.directory').each(function() {\n                        dirs.push($(this).attr('directory-path'));\n                    });\n\n                    var $form = $('<form/>');\n                    // eslint-disable-next-line no-script-url\n                    $form.attr('action', 'javascript:void(0)');\n\n                    function submit() {\n                        var folder_to = $form.find('[name=\"to\"]').val();\n                        var $spinner = add_spinner();\n                        $.post(get_action_url('rest'),\n                            {\n                                \"action\": \"movedir\",\n                                \"item_id\": item_id,\n                                \"folder_to\": folder_to,\n                                \"sesskey\": M.cfg.sesskey\n                            },\n                            function() {\n                                reload_tree();\n                                directories.reset();\n                            })\n                            .fail(function(response) {\n                                show_error(response);\n                            })\n                            .always(function() {\n                                $spinner.hide();\n                            });\n                    }\n\n                    $form.submit(submit);\n\n                    if (dirs.length === 0) {\n                        var $input = $('<input class=\"form-control\" type=\"text\" name=\"to\"/>').val(current_path);\n                        setTimeout(function() {\n                            $input.focus();\n                        }, 1);\n                        $form.append($input);\n                    } else {\n                        dirs.unshift('/');\n\n                        var $select = $('<select class=\"custom-select\" name=\"to\"/>');\n                        for (var i = 0; i < dirs.length; i++) {\n                            $select.append($('<option/>').val(dirs[i]).append(dirs[i]));\n                        }\n                        $select.val(current_path);\n                        $select.change(submit);\n                        $form.append($select);\n\n                        var $edit = create_command('edit');\n\n                        $edit.on('click', function() {\n                            var $input = $('<input type=\"text\" name=\"to\"/>').val(current_path);\n                            $select.remove();\n                            $edit.replaceWith($input);\n                            $input.focus();\n                        });\n\n                        $form.append($edit);\n                    }\n\n                    var $cancel = create_command('cancel');\n                    $cancel.on('click', function() {\n                        $form.remove();\n                        $commands.find('a').show();\n                    });\n                    $form.append($cancel);\n\n                    $commands.find('a').each(function() {\n                        $(this).hide();\n                    });\n                    $commands.append($form);\n                };\n\n                /**\n                 *  On move command clicked\n                 *\n                 *  @param {DOMEventFacade} e\n                 */\n                $.on_move = function(e) {\n                    var $item = $(e.target).closest('li.activity');\n                    var id = $item.attr('id').match(/(\\d+)$/)[1];\n\n                    move_targets.show(id);\n                };\n\n                /**\n                 *  On delete command clicked\n                 *\n                 *  @param {DOMEventFacade} e\n                 */\n                $.on_delete = function(e) {\n                    var $item = $(e.target).closest('li');\n                    var liText = $item[0].innerText;\n\n                    var isDirectory = false;\n                    var modalBody;\n                    var item;\n                    var description_text = '';\n\n                    if ($item.hasClass(\"directory\")) {\n                        isDirectory = true;\n                        item = str('folder_string');\n                        description_text = str('delete_folder');\n                    } else {\n                        item = str('activity_string');\n                    }\n\n                    modalBody = '<p class=\"delete-item\">' + item + ' ' + liText + description_text + '</p>';\n\n                    confirm_modal({\n                        'title': str('confirm_delete'),\n                        'body': modalBody,\n                        'save_button': str('modal_confirm_delete'),\n                        'checkbox': false,\n                        'next': function() {\n\n                            var data = {};\n\n                            if (isDirectory === true) {\n                                data = {\n                                    \"action\": \"delete_directory\",\n                                    \"path\": $item.attr(\"directory-path\"),\n                                    \"sesskey\": M.cfg.sesskey\n                                };\n                            } else if ($item.hasClass(\"activity\")) {\n                                data = {\n                                    \"action\": \"delete\",\n                                    \"id\": $item.attr('id').match(/(\\d+)$/)[1],\n                                    \"sesskey\": M.cfg.sesskey\n                                };\n                            }\n\n                            var $spinner = add_spinner();\n\n                            $.post(get_action_url(\"rest\"), data,\n                                function() {\n                                    reload_tree();\n                                })\n                                .fail(function(response) {\n                                    show_error(response);\n                                })\n                                .always(function() {\n                                    $spinner.hide();\n                                });\n\n                            e.stopPropagation();\n                        }\n                    });\n                };\n\n                /**\n                 *  On restore command clicked\n                 *\n                 *  @param {DOMEventFacade} e\n                 */\n                $.on_restore = function(e) {\n                    var $item = $(e.target).closest('li');\n                    var id = null;\n\n                    if ($item.hasClass(\"directory\")) {\n                        id = $item.attr(\"directory-path\");\n                        restore_targets.is_directory = true;\n                    } else if ($item.hasClass(\"activity\")) {\n                        id = $item.attr('id').match(/(\\d+)$/)[1];\n                        restore_targets.is_directory = false;\n                    }\n\n                    restore_targets.show(id);\n                };\n\n                /**\n                 * On backup the whole section as a folder\n                 *\n                 * @param {int} sectionId\n                 * @param {int} sectionNumber\n                 * @param {int} courseId\n                 * @param {string} sectionName\n                 */\n                $.on_section_backup = function(sectionId, sectionNumber, courseId, sectionName) {\n                    var data =\n                        {\n                            \"action\": \"is_userdata_copyable_section\",\n                            \"sectionid\": sectionId,\n                            \"sectionnumber\": sectionNumber,\n                            \"courseid\": courseId,\n                        };\n\n                    var body_html = '<p class=\"alert alert-danger mt-3\">' + str('backup_heavy_load_warning_message') +\n                        '</p>' + str('confirm_backup_section');\n\n                    on_backup_modal(data, sectionName, body_html, true);\n                };\n\n                /**\n                 *  Initialize the delete bulk\n                 */\n                $.init_bulk_delete = function(isspeciallayout) {\n                    var bulkdelete = $block.find('.editing_bulkdelete');\n                    if (bulkdelete.length) {\n                        if (isspeciallayout) {\n                            bulkdelete.attr('role', 'menuitem').addClass('dropdown-item menu-action');\n                            bulkdelete.append($(\"<span class='menu-action-text'/>\").append(bulkdelete.attr('title')));\n\n                            $block.find('.menubar .dropdown .dropdown-menu').append(bulkdelete);\n                        } else {\n                            $block.find('.header .commands').append(bulkdelete);\n                        }\n                    }\n                };\n\n                /**\n                 *  Initialize the help icon\n                 */\n                $.init_help_icon = function(isspeciallayout) {\n                    var helpicon = $block.find('.header-commands > .help-icon');\n\n                    if (isspeciallayout) {\n                        $block.find('.header-commands').parent().css('display', 'block');\n                    } else {\n                        $block.find('.header .commands').append(helpicon);\n                    }\n                };\n\n                /**\n                 *  Initialize the Sharing Cart block header\n                 */\n                $.init_block_header = function() {\n                    var isspeciallayout = verify_layout();\n                    $.init_bulk_delete(isspeciallayout);\n                    $.init_help_icon(isspeciallayout);\n                };\n\n                /**\n                 *  Initialize the Sharing Cart item tree\n                 */\n                $.init_item_tree = function() {\n                    function add_actions(item, actions) {\n                        var $item = $(item);\n                        var $commands = $item.find('.commands').first();\n\n                        $.each(actions, function(index, action) {\n                            var $command = create_command(action);\n                            $command.on('click', function(e) {\n                                $['on_' + action](e);\n                            });\n                            $commands.append($command);\n                        }, this);\n                    }\n\n                    var activity_actions = ['movedir', 'move', 'delete'];\n                    if (course) {\n                        activity_actions.push('restore');\n                    }\n\n                    var directory_actions = ['delete', 'restore'];\n\n                    // Initialize items\n                    $block.find('li.activity').each(function(index, item) {\n                        if($(item).attr('data-disable-copy') == 1) {\n                            add_actions(item, ['movedir', 'move', 'delete']);\n                            return;\n                        }\n                        add_actions(item, activity_actions);\n                    });\n\n                    // Initialize directory items\n                    $block.find('li.directory').each(function(index, item) {\n                        add_actions(item, directory_actions);\n                    });\n\n                    // Initialize directories\n                    directories.init();\n                };\n\n                /**\n                 * Extract html object from area where moodle ajax was called.\n                 *\n                 * Call add_activity_backup_control to re append sharing cart icon.\n                 */\n                $.init_activity_commands = function() {\n                    $(document).ajaxComplete(function(event, xhr, settings) {\n\n                        var url = settings.url;\n                        var lastslashindex = url.lastIndexOf('=');\n                        var result = url.substring(lastslashindex + 1);\n\n                        if (result === 'core_course_edit_module' || result === 'core_course_get_module') {\n\n                            var data = JSON.parse(settings.data);\n                            var action = data[0].args.action;\n\n                            // Don't try to add icon if activity has been deleted.\n                            if (action === 'delete') {\n                                return;\n                            }\n\n                            setTimeout(function() {\n                                var activity_id = data[0].args.id;\n                                var activity = $('#module-' + activity_id);\n                                add_activity_backup_control(activity);\n\n                                if (action === 'duplicate') {\n                                    var duplicated = activity.next();\n                                    add_activity_backup_control(duplicated);\n                                }\n                            }, 1);\n                        }\n                    });\n\n                    /**\n                     * Create the backup icon\n                     *\n                     * @returns $backupIcon\n                     */\n                    function create_backup_icon() {\n\n                        var $backupIcon = $('<a href=\"javascript:void(0)\" class=\"add-to-sharing-cart\" />')\n                            .append($('<i class=\"fa fa-shopping-basket icon\"></i>'))\n                            .attr('title', str('backup'));\n\n                        return $backupIcon;\n                    }\n\n                    /**\n                     * Add backup control with a click event to an activity\n                     * Added fix for copying an activity without backup routine\n                     *\n                     * @param $activity\n                     */\n                    function add_activity_backup_control($activity) {\n\n                        var activityClass = $activity[0].className;\n\n                        // Selecting modtype without prefix.\n                        var modtype = activityClass.substr(activityClass.indexOf('modtype_') + 8);\n\n                        // Default activity name.\n                        var activityName = str('activity_string');\n\n                        // Label is using a different html / css layout, so it's needed to get the name by using another $find.\n                        if (modtype !== 'label') {\n                            activityName = $('.activity#' + $activity[0].id)\n                                .find('.mod-indent-outer .activityinstance span.instancename')\n                                .html();\n                        }\n\n                        var $backupIcon = create_backup_icon();\n\n                        $backupIcon.on('click', function(e) {\n                            $.on_backup(e, activityName);\n                        });\n\n                        var $actionMenuItem = $activity.find('.action-menu.section-cm-edit-actions').parent('.actions');\n\n                        if (!$actionMenuItem.find('.add-to-sharing-cart').length) {\n                            $actionMenuItem.append($backupIcon);\n                        }\n                    }\n\n                    /**\n                     * Add backup control with a click event to a section\n                     *\n                     * @param $section\n                     */\n                    function add_section_backup_control($section) {\n\n                        var sectionId = $section.find('.section_action_menu').data('sectionid');\n                        var sectionNumber = parseInt(String($section.attr('id')).match(/\\d+/)[0]);\n                        var sectionName = $section.attr('aria-label') || $section.find('.sectionname').text().trim();\n\n                        var isFlexibleCourseFormat = $('body[id$=flexsections]').length;\n\n                        // Extract the section ID from the section if this is a Flexible\n                        // course format (since this format doesn't have an action menu)\n                        if (isFlexibleCourseFormat && (typeof sectionId === 'undefined' || sectionId === null)) {\n                            sectionId = $section.data('section-id');\n                        }\n\n                        // A bit unsafe to extract the course ID from the body but it's the best option we got at the moment\n                        var courseId = parseInt(String($('body').attr('class')).match(/course-([0-9]*)( |$)/)[1]);\n\n                        var $backupIcon = create_backup_icon();\n\n                        $backupIcon.on('click', function() {\n                            var inPlaceEditSectionName = in_place_edit_section_name($section);\n                            sectionName = (inPlaceEditSectionName !== '') ? inPlaceEditSectionName : sectionName;\n                            $.on_section_backup(sectionId, sectionNumber, courseId, sectionName);\n                        });\n\n                        var $sectionTitle = $section.find('h3.sectionname').first().find('a').last();\n\n                        var $inPlaceEditable = $section.find('h3.sectionname .inplaceeditable').first();\n                        if ($inPlaceEditable.length) {\n                            $sectionTitle = $inPlaceEditable;\n                        }\n\n                        // Add the backup icon after the cog wheel if this is a Flexible course format\n                        if (isFlexibleCourseFormat && sectionNumber === 0) {\n                            $sectionTitle = $section.find('> .controls');\n                            $sectionTitle.prepend($backupIcon);\n                        } else {\n                            $backupIcon.insertAfter($sectionTitle);\n                        }\n\n                        var activitySelector = 'li.activity';\n\n                        var $activities = $section.find(activitySelector);\n\n                        $($activities).each(function() {\n                            add_activity_backup_control($(this));\n                        });\n                    }\n\n                    $(\"body.editing .course-content li.section\").each(function() {\n                        add_section_backup_control($(this));\n                    });\n                };\n\n                /**\n                 * Initialize the Sharing Cart block\n                 */\n                $.init = function() {\n                    M.str.block_sharing_cart.pluginname = this.get_plugin_name();\n\n                    // Arrange header icons (bulkdelete, help)\n                    $.init_block_header();\n                    $.init_item_tree();\n                    $.init_activity_commands();\n                };\n                var $spinner = $('<i/>').addClass('spinner fa fa-3x fa-circle-o-notch fa-spin');\n                $('div#sharing-cart-spinner-modal div.spinner-container').prepend($spinner);\n\n                $.init();\n            });\n\n            $('.copy_section').on('click', function() {\n\n                var $section_selected = ($('.section-dropdown option:selected'));\n                var sectionId = $section_selected.data('section-id');\n                var sectionNumber = $section_selected.data('section-number');\n                var courseId = $section_selected.data('course-id');\n                var sectionName = $section_selected.data('section-name');\n\n                $.on_section_backup(sectionId, sectionNumber, courseId, sectionName);\n            });\n        }\n    };\n});\n","file":"script.min.js"]}