{"version":3,"file":"tour.min.js","sources":["../src/tour.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A user tour.\n *\n * @module tool_usertours/tour\n * @copyright  2018 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * A list of steps.\n *\n * @typedef {Object[]} StepList\n * @property {Number} stepId The id of the step in the database\n * @property {Number} position The position of the step within the tour (zero-indexed)\n */\n\nimport $ from 'jquery';\nimport * as Aria from 'core/aria';\nimport Popper from 'core/popper';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport {eventTypes} from './events';\nimport {get_string as getString} from 'core/str';\nimport {prefetchStrings} from 'core/prefetch';\n\n/**\n * The minimum spacing for tour step to display.\n *\n * @private\n * @constant\n * @type {number}\n */\nconst MINSPACING = 50;\n\n/**\n * A user tour.\n *\n * @class tool_usertours/tour\n * @property {boolean} tourRunning Whether the tour is currently running.\n */\nconst Tour = class {\n    tourRunning = false;\n\n    /**\n     * @param   {object}    config  The configuration object.\n     */\n    constructor(config) {\n        this.init(config);\n    }\n\n    /**\n     * Initialise the tour.\n     *\n     * @method  init\n     * @param   {Object}    config  The configuration object.\n     * @chainable\n     * @return {Object} this.\n     */\n    init(config) {\n        // Unset all handlers.\n        this.eventHandlers = {};\n\n        // Reset the current tour states.\n        this.reset();\n\n        // Store the initial configuration.\n        this.originalConfiguration = config || {};\n\n        // Apply configuration.\n        this.configure.apply(this, arguments);\n\n        try {\n            this.storage = window.sessionStorage;\n            this.storageKey = 'tourstate_' + this.tourName;\n        } catch (e) {\n            this.storage = false;\n            this.storageKey = '';\n        }\n\n        prefetchStrings('tool_usertours', [\n            'nextstep_sequence',\n            'skip_tour'\n        ]);\n\n        return this;\n    }\n\n    /**\n     * Reset the current tour state.\n     *\n     * @method  reset\n     * @chainable\n     * @return {Object} this.\n     */\n    reset() {\n        // Hide the current step.\n        this.hide();\n\n        // Unset all handlers.\n        this.eventHandlers = [];\n\n        // Unset all listeners.\n        this.resetStepListeners();\n\n        // Unset the original configuration.\n        this.originalConfiguration = {};\n\n        // Reset the current step number and list of steps.\n        this.steps = [];\n\n        // Reset the current step number.\n        this.currentStepNumber = 0;\n\n        return this;\n    }\n\n    /**\n     * Prepare tour configuration.\n     *\n     * @method  configure\n     * @param {Object} config The configuration object.\n     * @chainable\n     * @return {Object} this.\n     */\n    configure(config) {\n        if (typeof config === 'object') {\n            // Tour name.\n            if (typeof config.tourName !== 'undefined') {\n                this.tourName = config.tourName;\n            }\n\n            // Set up eventHandlers.\n            if (config.eventHandlers) {\n                for (let eventName in config.eventHandlers) {\n                    config.eventHandlers[eventName].forEach(function(handler) {\n                        this.addEventHandler(eventName, handler);\n                    }, this);\n                }\n            }\n\n            // Reset the step configuration.\n            this.resetStepDefaults(true);\n\n            // Configure the steps.\n            if (typeof config.steps === 'object') {\n                this.steps = config.steps;\n            }\n\n            if (typeof config.template !== 'undefined') {\n                this.templateContent = config.template;\n            }\n        }\n\n        // Check that we have enough to start the tour.\n        this.checkMinimumRequirements();\n\n        return this;\n    }\n\n    /**\n     * Check that the configuration meets the minimum requirements.\n     *\n     * @method  checkMinimumRequirements\n     */\n    checkMinimumRequirements() {\n        // Need a tourName.\n        if (!this.tourName) {\n            throw new Error(\"Tour Name required\");\n        }\n\n        // Need a minimum of one step.\n        if (!this.steps || !this.steps.length) {\n            throw new Error(\"Steps must be specified\");\n        }\n    }\n\n    /**\n     * Reset step default configuration.\n     *\n     * @method  resetStepDefaults\n     * @param   {Boolean}   loadOriginalConfiguration   Whether to load the original configuration supplied with the Tour.\n     * @chainable\n     * @return {Object} this.\n     */\n    resetStepDefaults(loadOriginalConfiguration) {\n        if (typeof loadOriginalConfiguration === 'undefined') {\n            loadOriginalConfiguration = true;\n        }\n\n        this.stepDefaults = {};\n        if (!loadOriginalConfiguration || typeof this.originalConfiguration.stepDefaults === 'undefined') {\n            this.setStepDefaults({});\n        } else {\n            this.setStepDefaults(this.originalConfiguration.stepDefaults);\n        }\n\n        return this;\n    }\n\n    /**\n     * Set the step defaults.\n     *\n     * @method  setStepDefaults\n     * @param   {Object}    stepDefaults                The step defaults to apply to all steps\n     * @chainable\n     * @return {Object} this.\n     */\n    setStepDefaults(stepDefaults) {\n        if (!this.stepDefaults) {\n            this.stepDefaults = {};\n        }\n        $.extend(\n            this.stepDefaults,\n            {\n                element:        '',\n                placement:      'top',\n                delay:          0,\n                moveOnClick:    false,\n                moveAfterTime:  0,\n                orphan:         false,\n                direction:      1,\n            },\n            stepDefaults\n        );\n\n        return this;\n    }\n\n    /**\n     * Retrieve the current step number.\n     *\n     * @method  getCurrentStepNumber\n     * @return  {Number}                   The current step number\n     */\n    getCurrentStepNumber() {\n        return parseInt(this.currentStepNumber, 10);\n    }\n\n    /**\n     * Store the current step number.\n     *\n     * @method  setCurrentStepNumber\n     * @param   {Number}   stepNumber      The current step number\n     * @chainable\n     */\n    setCurrentStepNumber(stepNumber) {\n        this.currentStepNumber = stepNumber;\n        if (this.storage) {\n            try {\n                this.storage.setItem(this.storageKey, stepNumber);\n            } catch (e) {\n                if (e.code === DOMException.QUOTA_EXCEEDED_ERR) {\n                    this.storage.removeItem(this.storageKey);\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the next step number after the currently displayed step.\n     *\n     * @method  getNextStepNumber\n     * @param   {Number}   stepNumber      The current step number\n     * @return  {Number}    The next step number to display\n     */\n    getNextStepNumber(stepNumber) {\n        if (typeof stepNumber === 'undefined') {\n            stepNumber = this.getCurrentStepNumber();\n        }\n        let nextStepNumber = stepNumber + 1;\n\n        // Keep checking the remaining steps.\n        while (nextStepNumber <= this.steps.length) {\n            if (this.isStepPotentiallyVisible(this.getStepConfig(nextStepNumber))) {\n                return nextStepNumber;\n            }\n            nextStepNumber++;\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the previous step number before the currently displayed step.\n     *\n     * @method  getPreviousStepNumber\n     * @param   {Number}   stepNumber      The current step number\n     * @return  {Number}    The previous step number to display\n     */\n    getPreviousStepNumber(stepNumber) {\n        if (typeof stepNumber === 'undefined') {\n            stepNumber = this.getCurrentStepNumber();\n        }\n        let previousStepNumber = stepNumber - 1;\n\n        // Keep checking the remaining steps.\n        while (previousStepNumber >= 0) {\n            if (this.isStepPotentiallyVisible(this.getStepConfig(previousStepNumber))) {\n                return previousStepNumber;\n            }\n            previousStepNumber--;\n        }\n\n        return null;\n    }\n\n    /**\n     * Is the step the final step number?\n     *\n     * @method  isLastStep\n     * @param   {Number}   stepNumber  Step number to test\n     * @return  {Boolean}               Whether the step is the final step\n     */\n    isLastStep(stepNumber) {\n        let nextStepNumber = this.getNextStepNumber(stepNumber);\n\n        return nextStepNumber === null;\n    }\n\n    /**\n     * Is this step potentially visible?\n     *\n     * @method  isStepPotentiallyVisible\n     * @param   {Object}    stepConfig      The step configuration to normalise\n     * @return  {Boolean}               Whether the step is the potentially visible\n     */\n    isStepPotentiallyVisible(stepConfig) {\n        if (!stepConfig) {\n            // Without step config, there can be no step.\n            return false;\n        }\n\n        if (this.isStepActuallyVisible(stepConfig)) {\n            // If it is actually visible, it is already potentially visible.\n            return true;\n        }\n\n        if (typeof stepConfig.orphan !== 'undefined' && stepConfig.orphan) {\n            // Orphan steps have no target. They are always visible.\n            return true;\n        }\n\n        if (typeof stepConfig.delay !== 'undefined' && stepConfig.delay) {\n            // Only return true if the activated has not been used yet.\n            return true;\n        }\n\n        // Not theoretically, or actually visible.\n        return false;\n    }\n\n    /**\n     * Get potentially visible steps in a tour.\n     *\n     * @returns {StepList} A list of ordered steps\n     */\n    getPotentiallyVisibleSteps() {\n        let position = 1;\n        let result = [];\n        // Checking the total steps.\n        for (let stepNumber = 0; stepNumber < this.steps.length; stepNumber++) {\n            const stepConfig = this.getStepConfig(stepNumber);\n            if (this.isStepPotentiallyVisible(stepConfig)) {\n                result[stepNumber] = {stepId: stepConfig.stepid, position: position};\n                position++;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Is this step actually visible?\n     *\n     * @method  isStepActuallyVisible\n     * @param   {Object}    stepConfig      The step configuration to normalise\n     * @return  {Boolean}               Whether the step is actually visible\n     */\n    isStepActuallyVisible(stepConfig) {\n        if (!stepConfig) {\n            // Without step config, there can be no step.\n            return false;\n        }\n\n        let target = this.getStepTarget(stepConfig);\n        if (target && target.length && target.is(':visible')) {\n            // Without a target, there can be no step.\n            return !!target.length;\n        }\n\n        return false;\n    }\n\n    /**\n     * Go to the next step in the tour.\n     *\n     * @method  next\n     * @chainable\n     * @return {Object} this.\n     */\n    next() {\n        return this.gotoStep(this.getNextStepNumber());\n    }\n\n    /**\n     * Go to the previous step in the tour.\n     *\n     * @method  previous\n     * @chainable\n     * @return {Object} this.\n     */\n    previous() {\n        return this.gotoStep(this.getPreviousStepNumber(), -1);\n    }\n\n    /**\n     * Go to the specified step in the tour.\n     *\n     * @method  gotoStep\n     * @param   {Number}   stepNumber     The step number to display\n     * @param   {Number}   direction      Next or previous step\n     * @chainable\n     * @return {Object} this.\n     * @fires tool_usertours/stepRender\n     * @fires tool_usertours/stepRendered\n     * @fires tool_usertours/stepHide\n     * @fires tool_usertours/stepHidden\n     */\n    gotoStep(stepNumber, direction) {\n        if (stepNumber < 0) {\n            return this.endTour();\n        }\n\n        let stepConfig = this.getStepConfig(stepNumber);\n        if (stepConfig === null) {\n            return this.endTour();\n        }\n\n        return this._gotoStep(stepConfig, direction);\n    }\n\n    _gotoStep(stepConfig, direction) {\n        if (!stepConfig) {\n            return this.endTour();\n        }\n\n        if (typeof stepConfig.delay !== 'undefined' && stepConfig.delay && !stepConfig.delayed) {\n            stepConfig.delayed = true;\n            window.setTimeout(this._gotoStep.bind(this), stepConfig.delay, stepConfig, direction);\n\n            return this;\n        } else if (!stepConfig.orphan && !this.isStepActuallyVisible(stepConfig)) {\n            let fn = direction == -1 ? 'getPreviousStepNumber' : 'getNextStepNumber';\n            return this.gotoStep(this[fn](stepConfig.stepNumber), direction);\n        }\n\n        this.hide();\n\n        const stepRenderEvent = this.dispatchEvent(eventTypes.stepRender, {stepConfig}, true);\n        if (!stepRenderEvent.defaultPrevented) {\n            this.renderStep(stepConfig);\n            this.dispatchEvent(eventTypes.stepRendered, {stepConfig});\n        }\n\n        return this;\n    }\n\n    /**\n     * Fetch the normalised step configuration for the specified step number.\n     *\n     * @method  getStepConfig\n     * @param   {Number}   stepNumber      The step number to fetch configuration for\n     * @return  {Object}                    The step configuration\n     */\n    getStepConfig(stepNumber) {\n        if (stepNumber === null || stepNumber < 0 || stepNumber >= this.steps.length) {\n            return null;\n        }\n\n        // Normalise the step configuration.\n        let stepConfig = this.normalizeStepConfig(this.steps[stepNumber]);\n\n        // Add the stepNumber to the stepConfig.\n        stepConfig = $.extend(stepConfig, {stepNumber: stepNumber});\n\n        return stepConfig;\n    }\n\n    /**\n     * Normalise the supplied step configuration.\n     *\n     * @method  normalizeStepConfig\n     * @param   {Object}    stepConfig      The step configuration to normalise\n     * @return  {Object}                    The normalised step configuration\n     */\n    normalizeStepConfig(stepConfig) {\n\n        if (typeof stepConfig.reflex !== 'undefined' && typeof stepConfig.moveAfterClick === 'undefined') {\n            stepConfig.moveAfterClick = stepConfig.reflex;\n        }\n\n        if (typeof stepConfig.element !== 'undefined' && typeof stepConfig.target === 'undefined') {\n            stepConfig.target = stepConfig.element;\n        }\n\n        if (typeof stepConfig.content !== 'undefined' && typeof stepConfig.body === 'undefined') {\n            stepConfig.body = stepConfig.content;\n        }\n\n        stepConfig = $.extend({}, this.stepDefaults, stepConfig);\n\n        stepConfig = $.extend({}, {\n            attachTo: stepConfig.target,\n            attachPoint: 'after',\n        }, stepConfig);\n\n        if (stepConfig.attachTo) {\n            stepConfig.attachTo = $(stepConfig.attachTo).first();\n        }\n\n        return stepConfig;\n    }\n\n    /**\n     * Fetch the actual step target from the selector.\n     *\n     * This should not be called until after any delay has completed.\n     *\n     * @method  getStepTarget\n     * @param   {Object}    stepConfig      The step configuration\n     * @return  {$}\n     */\n    getStepTarget(stepConfig) {\n        if (stepConfig.target) {\n            return $(stepConfig.target);\n        }\n\n        return null;\n    }\n\n    /**\n     * Fire any event handlers for the specified event.\n     *\n     * @param {String} eventName The name of the event\n     * @param {Object} [detail={}] Any additional details to pass into the eveent\n     * @param {Boolean} [cancelable=false] Whether preventDefault() can be called\n     * @returns {CustomEvent}\n     */\n    dispatchEvent(\n        eventName,\n        detail = {},\n        cancelable = false\n    ) {\n        return dispatchEvent(eventName, {\n            // Add the tour to the detail.\n            tour: this,\n            ...detail,\n        }, document, {\n            cancelable,\n        });\n    }\n\n    /**\n     * @method addEventHandler\n     * @param  {string}      eventName       The name of the event to listen for\n     * @param  {function}    handler         The event handler to call\n     * @return {Object} this.\n     */\n    addEventHandler(eventName, handler) {\n        if (typeof this.eventHandlers[eventName] === 'undefined') {\n            this.eventHandlers[eventName] = [];\n        }\n\n        this.eventHandlers[eventName].push(handler);\n\n        return this;\n    }\n\n    /**\n     * Process listeners for the step being shown.\n     *\n     * @method  processStepListeners\n     * @param   {object}    stepConfig      The configuration for the step\n     * @chainable\n     * @return {Object} this.\n     */\n    processStepListeners(stepConfig) {\n        this.listeners.push(\n        // Next button.\n        {\n            node: this.currentStepNode,\n            args: ['click', '[data-role=\"next\"]', $.proxy(this.next, this)]\n        },\n\n        // Close and end tour buttons.\n        {\n            node: this.currentStepNode,\n            args: ['click', '[data-role=\"end\"]', $.proxy(this.endTour, this)]\n        },\n\n        // Click backdrop and hide tour.\n        {\n            node: $('[data-flexitour=\"backdrop\"]'),\n            args: ['click', $.proxy(this.hide, this)]\n        },\n\n        // Keypresses.\n        {\n            node: $('body'),\n            args: ['keydown', $.proxy(this.handleKeyDown, this)]\n        });\n\n        if (stepConfig.moveOnClick) {\n            var targetNode = this.getStepTarget(stepConfig);\n            this.listeners.push({\n                node: targetNode,\n                args: ['click', $.proxy(function(e) {\n                    if ($(e.target).parents('[data-flexitour=\"container\"]').length === 0) {\n                        // Ignore clicks when they are in the flexitour.\n                        window.setTimeout($.proxy(this.next, this), 500);\n                    }\n                }, this)]\n            });\n        }\n\n        this.listeners.forEach(function(listener) {\n            listener.node.on.apply(listener.node, listener.args);\n        });\n\n        return this;\n    }\n\n    /**\n     * Reset step listeners.\n     *\n     * @method  resetStepListeners\n     * @chainable\n     * @return {Object} this.\n     */\n    resetStepListeners() {\n        // Stop listening to all external handlers.\n        if (this.listeners) {\n            this.listeners.forEach(function(listener) {\n                listener.node.off.apply(listener.node, listener.args);\n            });\n        }\n        this.listeners = [];\n\n        return this;\n    }\n\n    /**\n     * The standard step renderer.\n     *\n     * @method  renderStep\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    renderStep(stepConfig) {\n        // Store the current step configuration for later.\n        this.currentStepConfig = stepConfig;\n        this.setCurrentStepNumber(stepConfig.stepNumber);\n\n        // Fetch the template and convert it to a $ object.\n        let template = $(this.getTemplateContent());\n\n        // Title.\n        template.find('[data-placeholder=\"title\"]')\n            .html(stepConfig.title);\n\n        // Body.\n        template.find('[data-placeholder=\"body\"]')\n            .html(stepConfig.body);\n\n        // Buttons.\n        const nextBtn = template.find('[data-role=\"next\"]');\n        const endBtn = template.find('[data-role=\"end\"]');\n\n        // Is this the final step?\n        if (this.isLastStep(stepConfig.stepNumber)) {\n            nextBtn.hide();\n            endBtn.removeClass(\"btn-secondary\").addClass(\"btn-primary\");\n        } else {\n            nextBtn.prop('disabled', false);\n            // Use Skip tour label for the End tour button.\n            getString('skip_tour', 'tool_usertours').then(value => {\n                endBtn.html(value);\n                return;\n            }).catch();\n        }\n\n        nextBtn.attr('role', 'button');\n        endBtn.attr('role', 'button');\n\n        if (this.originalConfiguration.displaystepnumbers) {\n            const stepsPotentiallyVisible = this.getPotentiallyVisibleSteps();\n            const totalStepsPotentiallyVisible = stepsPotentiallyVisible.length;\n            const position = stepsPotentiallyVisible[stepConfig.stepNumber].position;\n            if (totalStepsPotentiallyVisible > 1) {\n                // Change the label of the Next button to include the sequence.\n                getString('nextstep_sequence', 'tool_usertours',\n                    {position: position, total: totalStepsPotentiallyVisible}).then(value => {\n                    nextBtn.html(value);\n                    return;\n                }).catch();\n            }\n        }\n\n        // Replace the template with the updated version.\n        stepConfig.template = template;\n\n        // Add to the page.\n        this.addStepToPage(stepConfig);\n\n        // Process step listeners after adding to the page.\n        // This uses the currentNode.\n        this.processStepListeners(stepConfig);\n\n        return this;\n    }\n\n    /**\n     * Getter for the template content.\n     *\n     * @method  getTemplateContent\n     * @return  {$}\n     */\n    getTemplateContent() {\n        return $(this.templateContent).clone();\n    }\n\n    /**\n     * Helper to add a step to the page.\n     *\n     * @method  addStepToPage\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    addStepToPage(stepConfig) {\n        // Create the stepNode from the template data.\n        let currentStepNode = $('<span data-flexitour=\"container\"></span>')\n            .html(stepConfig.template)\n            .hide();\n\n        // The scroll animation occurs on the body or html.\n        let animationTarget = $('body, html')\n            .stop(true, true);\n\n        if (this.isStepActuallyVisible(stepConfig)) {\n            let targetNode = this.getStepTarget(stepConfig);\n\n            if (targetNode.parents('[data-usertour=\"scroller\"]').length) {\n                animationTarget = targetNode.parents('[data-usertour=\"scroller\"]');\n            }\n\n            targetNode.data('flexitour', 'target');\n\n            let zIndex = this.calculateZIndex(targetNode);\n            if (zIndex) {\n                stepConfig.zIndex = zIndex + 1;\n            }\n\n            if (stepConfig.zIndex) {\n                currentStepNode.css('zIndex', stepConfig.zIndex + 1);\n            }\n\n            // Add the backdrop.\n            this.positionBackdrop(stepConfig);\n\n            $(document.body).append(currentStepNode);\n            this.currentStepNode = currentStepNode;\n\n            // Ensure that the step node is positioned.\n            // Some situations mean that the value is not properly calculated without this step.\n            this.currentStepNode.css({\n                top: 0,\n                left: 0,\n            });\n\n            animationTarget\n                .animate({\n                    scrollTop: this.calculateScrollTop(stepConfig),\n                }).promise().then(function() {\n                        this.positionStep(stepConfig);\n                        this.revealStep(stepConfig);\n                        return;\n                    }.bind(this))\n                    .catch(function() {\n                        // Silently fail.\n                    });\n\n        } else if (stepConfig.orphan) {\n            stepConfig.isOrphan = true;\n\n            // This will be appended to the body instead.\n            stepConfig.attachTo = $('body').first();\n            stepConfig.attachPoint = 'append';\n\n            // Add the backdrop.\n            this.positionBackdrop(stepConfig);\n\n            // This is an orphaned step.\n            currentStepNode.addClass('orphan');\n\n            // It lives in the body.\n            $(document.body).append(currentStepNode);\n            this.currentStepNode = currentStepNode;\n\n            this.currentStepNode.css('position', 'fixed');\n\n            this.currentStepPopper = new Popper(\n                $('body'),\n                this.currentStepNode[0], {\n                    removeOnDestroy: true,\n                    placement: stepConfig.placement + '-start',\n                    arrowElement: '[data-role=\"arrow\"]',\n                    // Empty the modifiers. We've already placed the step and don't want it moved.\n                    modifiers: {\n                        hide: {\n                            enabled: false,\n                        },\n                        applyStyle: {\n                            onLoad: null,\n                            enabled: false,\n                        },\n                    },\n                    onCreate: () => {\n                        // First, we need to check if the step's content contains any images.\n                        const images = this.currentStepNode.find('img');\n                        if (images.length) {\n                            // Images found, need to calculate the position when the image is loaded.\n                            images.on('load', () => {\n                                this.calculateStepPositionInPage(currentStepNode);\n                            });\n                        }\n                        this.calculateStepPositionInPage(currentStepNode);\n                    }\n                }\n            );\n\n            this.revealStep(stepConfig);\n        }\n\n        return this;\n    }\n\n    /**\n     * Make the given step visible.\n     *\n     * @method revealStep\n     * @param {Object} stepConfig The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    revealStep(stepConfig) {\n        // Fade the step in.\n        this.currentStepNode.fadeIn('', $.proxy(function() {\n                // Announce via ARIA.\n                this.announceStep(stepConfig);\n\n                // Focus on the current step Node.\n                this.currentStepNode.focus();\n                window.setTimeout($.proxy(function() {\n                    // After a brief delay, focus again.\n                    // There seems to be an issue with Jaws where it only reads the dialogue title initially.\n                    // This second focus helps it to read the full dialogue.\n                    if (this.currentStepNode) {\n                        this.currentStepNode.focus();\n                    }\n                }, this), 100);\n\n            }, this));\n\n        return this;\n    }\n\n    /**\n     * Helper to announce the step on the page.\n     *\n     * @method  announceStep\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    announceStep(stepConfig) {\n        // Setup the step Dialogue as per:\n        // * https://www.w3.org/TR/wai-aria-practices/#dialog_nonmodal\n        // * https://www.w3.org/TR/wai-aria-practices/#dialog_modal\n\n        // Generate an ID for the current step node.\n        let stepId = 'tour-step-' + this.tourName + '-' + stepConfig.stepNumber;\n        this.currentStepNode.attr('id', stepId);\n\n        let bodyRegion = this.currentStepNode.find('[data-placeholder=\"body\"]').first();\n        bodyRegion.attr('id', stepId + '-body');\n        bodyRegion.attr('role', 'document');\n\n        let headerRegion = this.currentStepNode.find('[data-placeholder=\"title\"]').first();\n        headerRegion.attr('id', stepId + '-title');\n        headerRegion.attr('aria-labelledby', stepId + '-body');\n\n        // Generally, a modal dialog has a role of dialog.\n        this.currentStepNode.attr('role', 'dialog');\n        this.currentStepNode.attr('tabindex', 0);\n        this.currentStepNode.attr('aria-labelledby', stepId + '-title');\n        this.currentStepNode.attr('aria-describedby', stepId + '-body');\n\n        // Configure ARIA attributes on the target.\n        let target = this.getStepTarget(stepConfig);\n        if (target) {\n            if (!target.attr('tabindex')) {\n                target.attr('tabindex', 0);\n            }\n\n            target\n                .data('original-describedby', target.attr('aria-describedby'))\n                .attr('aria-describedby', stepId + '-body')\n                ;\n        }\n\n        this.accessibilityShow(stepConfig);\n\n        return this;\n    }\n\n    /**\n     * Handle key down events.\n     *\n     * @method  handleKeyDown\n     * @param   {EventFacade} e\n     */\n    handleKeyDown(e) {\n        let tabbableSelector = 'a[href], link[href], [draggable=true], [contenteditable=true], ';\n        tabbableSelector += ':input:enabled, [tabindex], button:enabled';\n        switch (e.keyCode) {\n            case 27:\n                this.endTour();\n                break;\n\n            // 9 == Tab - trap focus for items with a backdrop.\n            case 9:\n                // Tab must be handled on key up only in this instance.\n                (function() {\n                    if (!this.currentStepConfig.hasBackdrop) {\n                        // Trapping tab focus is only handled for those steps with a backdrop.\n                        return;\n                    }\n\n                    // Find all tabbable locations.\n                    let activeElement = $(document.activeElement);\n                    let stepTarget = this.getStepTarget(this.currentStepConfig);\n                    let tabbableNodes = $(tabbableSelector);\n                    let dialogContainer = $('span[data-flexitour=\"container\"]');\n                    let currentIndex;\n                    // Filter out element which is not belong to target section or dialogue.\n                    if (stepTarget) {\n                        tabbableNodes = tabbableNodes.filter(function(index, element) {\n                            return stepTarget !== null\n                                && (stepTarget.has(element).length\n                                    || dialogContainer.has(element).length\n                                    || stepTarget.is(element)\n                                    || dialogContainer.is(element));\n                        });\n                    }\n\n                    // Find index of focusing element.\n                    tabbableNodes.each(function(index, element) {\n                        if (activeElement.is(element)) {\n                            currentIndex = index;\n                            return false;\n                        }\n                        // Keep looping.\n                        return true;\n                    });\n\n                    let nextIndex;\n                    let nextNode;\n                    let focusRelevant;\n                    if (currentIndex != void 0) {\n                        let direction = 1;\n                        if (e.shiftKey) {\n                            direction = -1;\n                        }\n                        nextIndex = currentIndex;\n                        do {\n                            nextIndex += direction;\n                            nextNode = $(tabbableNodes[nextIndex]);\n                        } while (nextNode.length && nextNode.is(':disabled') || nextNode.is(':hidden'));\n                        if (nextNode.length) {\n                            // A new f\n                            focusRelevant = nextNode.closest(stepTarget).length;\n                            focusRelevant = focusRelevant || nextNode.closest(this.currentStepNode).length;\n                        } else {\n                            // Unable to find the target somehow.\n                            focusRelevant = false;\n                        }\n                    }\n\n                    if (focusRelevant) {\n                        nextNode.focus();\n                    } else {\n                        if (e.shiftKey) {\n                            // Focus on the last tabbable node in the step.\n                            this.currentStepNode.find(tabbableSelector).last().focus();\n                        } else {\n                            if (this.currentStepConfig.isOrphan) {\n                                // Focus on the step - there is no target.\n                                this.currentStepNode.focus();\n                            } else {\n                                // Focus on the step target.\n                                stepTarget.focus();\n                            }\n                        }\n                    }\n                    e.preventDefault();\n                }).call(this);\n                break;\n        }\n    }\n\n    /**\n     * Start the current tour.\n     *\n     * @method  startTour\n     * @param   {Number} startAt Which step number to start at. If not specified, starts at the last point.\n     * @chainable\n     * @return {Object} this.\n     * @fires tool_usertours/tourStart\n     * @fires tool_usertours/tourStarted\n     */\n    startTour(startAt) {\n        if (this.storage && typeof startAt === 'undefined') {\n            let storageStartValue = this.storage.getItem(this.storageKey);\n            if (storageStartValue) {\n                let storageStartAt = parseInt(storageStartValue, 10);\n                if (storageStartAt <= this.steps.length) {\n                    startAt = storageStartAt;\n                }\n            }\n        }\n\n        if (typeof startAt === 'undefined') {\n            startAt = this.getCurrentStepNumber();\n        }\n\n        const tourStartEvent = this.dispatchEvent(eventTypes.tourStart, {startAt}, true);\n        if (!tourStartEvent.defaultPrevented) {\n            this.gotoStep(startAt);\n            this.tourRunning = true;\n            this.dispatchEvent(eventTypes.tourStarted, {startAt});\n        }\n\n        return this;\n    }\n\n    /**\n     * Restart the tour from the beginning, resetting the completionlag.\n     *\n     * @method  restartTour\n     * @chainable\n     * @return {Object} this.\n     */\n    restartTour() {\n        return this.startTour(0);\n    }\n\n    /**\n     * End the current tour.\n     *\n     * @method  endTour\n     * @chainable\n     * @return {Object} this.\n     * @fires tool_usertours/tourEnd\n     * @fires tool_usertours/tourEnded\n     */\n    endTour() {\n        const tourEndEvent = this.dispatchEvent(eventTypes.tourEnd, {}, true);\n        if (tourEndEvent.defaultPrevented) {\n            return this;\n        }\n\n        if (this.currentStepConfig) {\n            let previousTarget = this.getStepTarget(this.currentStepConfig);\n            if (previousTarget) {\n                if (!previousTarget.attr('tabindex')) {\n                    previousTarget.attr('tabindex', '-1');\n                }\n                previousTarget.focus();\n            }\n        }\n\n        this.hide(true);\n\n        this.tourRunning = false;\n        this.dispatchEvent(eventTypes.tourEnded);\n\n        return this;\n    }\n\n    /**\n     * Hide any currently visible steps.\n     *\n     * @method hide\n     * @param {Bool} transition Animate the visibility change\n     * @chainable\n     * @return {Object} this.\n     * @fires tool_usertours/stepHide\n     * @fires tool_usertours/stepHidden\n     */\n    hide(transition) {\n        const stepHideEvent = this.dispatchEvent(eventTypes.stepHide, {}, true);\n        if (stepHideEvent.defaultPrevented) {\n            return this;\n        }\n\n        if (this.currentStepNode && this.currentStepNode.length) {\n            this.currentStepNode.hide();\n            if (this.currentStepPopper) {\n                this.currentStepPopper.destroy();\n            }\n        }\n\n        // Restore original target configuration.\n        if (this.currentStepConfig) {\n            let target = this.getStepTarget(this.currentStepConfig);\n            if (target) {\n                if (target.data('original-labelledby')) {\n                    target.attr('aria-labelledby', target.data('original-labelledby'));\n                }\n\n                if (target.data('original-describedby')) {\n                    target.attr('aria-describedby', target.data('original-describedby'));\n                }\n\n                if (target.data('original-tabindex')) {\n                    target.attr('tabindex', target.data('tabindex'));\n                }\n            }\n\n            // Clear the step configuration.\n            this.currentStepConfig = null;\n        }\n\n        let fadeTime = 0;\n        if (transition) {\n            fadeTime = 400;\n        }\n\n        // Remove the backdrop features.\n        $('[data-flexitour=\"step-background\"]').remove();\n        $('[data-flexitour=\"step-backdrop\"]').removeAttr('data-flexitour');\n        $('[data-flexitour=\"backdrop\"]').fadeOut(fadeTime, function() {\n            $(this).remove();\n        });\n\n        // Remove aria-describedby and tabindex attributes.\n        if (this.currentStepNode && this.currentStepNode.length) {\n            let stepId = this.currentStepNode.attr('id');\n            if (stepId) {\n                let currentStepElement = '[aria-describedby=\"' + stepId + '-body\"]';\n                $(currentStepElement).removeAttr('tabindex');\n                $(currentStepElement).removeAttr('aria-describedby');\n            }\n        }\n\n        // Reset the listeners.\n        this.resetStepListeners();\n\n        this.accessibilityHide();\n\n        this.dispatchEvent(eventTypes.stepHidden);\n\n        this.currentStepNode = null;\n        this.currentStepPopper = null;\n        return this;\n    }\n\n    /**\n     * Show the current steps.\n     *\n     * @method show\n     * @chainable\n     * @return {Object} this.\n     */\n    show() {\n        // Show the current step.\n        let startAt = this.getCurrentStepNumber();\n\n        return this.gotoStep(startAt);\n    }\n\n    /**\n     * Return the current step node.\n     *\n     * @method  getStepContainer\n     * @return  {jQuery}\n     */\n    getStepContainer() {\n        return $(this.currentStepNode);\n    }\n\n    /**\n     * Calculate scrollTop.\n     *\n     * @method  calculateScrollTop\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @return  {Number}\n     */\n    calculateScrollTop(stepConfig) {\n        let viewportHeight = $(window).height();\n        let targetNode = this.getStepTarget(stepConfig);\n\n        let scrollParent = $(window);\n        if (targetNode.parents('[data-usertour=\"scroller\"]').length) {\n            scrollParent = targetNode.parents('[data-usertour=\"scroller\"]');\n        }\n        let scrollTop = scrollParent.scrollTop();\n\n        if (stepConfig.placement === 'top') {\n            // If the placement is top, center scroll at the top of the target.\n            scrollTop = targetNode.offset().top - (viewportHeight / 2);\n        } else if (stepConfig.placement === 'bottom') {\n            // If the placement is bottom, center scroll at the bottom of the target.\n            scrollTop = targetNode.offset().top + targetNode.height() + scrollTop - (viewportHeight / 2);\n        } else if (targetNode.height() <= (viewportHeight * 0.8)) {\n            // If the placement is left/right, and the target fits in the viewport, centre screen on the target\n            scrollTop = targetNode.offset().top - ((viewportHeight - targetNode.height()) / 2);\n        } else {\n            // If the placement is left/right, and the target is bigger than the viewport, set scrollTop to target.top + buffer\n            // and change step attachmentTarget to top+.\n            scrollTop = targetNode.offset().top - (viewportHeight * 0.2);\n        }\n\n        // Never scroll over the top.\n        scrollTop = Math.max(0, scrollTop);\n\n        // Never scroll beyond the bottom.\n        scrollTop = Math.min($(document).height() - viewportHeight, scrollTop);\n\n        return Math.ceil(scrollTop);\n    }\n\n    /**\n     * Calculate dialogue position for page middle.\n     *\n     * @param {jQuery} currentStepNode Current step node\n     * @method  calculateScrollTop\n     */\n    calculateStepPositionInPage(currentStepNode) {\n        let top = MINSPACING;\n        const viewportHeight = $(window).height();\n        const stepHeight = currentStepNode.height();\n        const viewportWidth = $(window).width();\n        const stepWidth = currentStepNode.width();\n        if (viewportHeight >= (stepHeight + (MINSPACING * 2))) {\n            top = Math.ceil((viewportHeight - stepHeight) / 2);\n        } else {\n            const headerHeight = currentStepNode.find('.modal-header').first().outerHeight() ?? 0;\n            const footerHeight = currentStepNode.find('.modal-footer').first().outerHeight() ?? 0;\n            const currentStepBody = currentStepNode.find('[data-placeholder=\"body\"]').first();\n            const maxHeight = viewportHeight - (MINSPACING * 2) - headerHeight - footerHeight;\n            currentStepBody.css({\n                'max-height': maxHeight + 'px',\n                'overflow': 'auto',\n            });\n        }\n        currentStepNode.offset({\n            top: top,\n            left: Math.ceil((viewportWidth - stepWidth) / 2)\n        });\n    }\n\n    /**\n     * Position the step on the page.\n     *\n     * @method  positionStep\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    positionStep(stepConfig) {\n        let content = this.currentStepNode;\n        if (!content || !content.length) {\n            // Unable to find the step node.\n            return this;\n        }\n\n        stepConfig.placement = this.recalculatePlacement(stepConfig);\n        let flipBehavior;\n        switch (stepConfig.placement) {\n            case 'left':\n                flipBehavior = ['left', 'right', 'top', 'bottom'];\n                break;\n            case 'right':\n                flipBehavior = ['right', 'left', 'top', 'bottom'];\n                break;\n            case 'top':\n                flipBehavior = ['top', 'bottom', 'right', 'left'];\n                break;\n            case 'bottom':\n                flipBehavior = ['bottom', 'top', 'right', 'left'];\n                break;\n            default:\n                flipBehavior = 'flip';\n                break;\n        }\n\n        let target = this.getStepTarget(stepConfig);\n        var config = {\n            placement: stepConfig.placement + '-start',\n            removeOnDestroy: true,\n            modifiers: {\n                flip: {\n                    behaviour: flipBehavior,\n                },\n                arrow: {\n                    element: '[data-role=\"arrow\"]',\n                },\n            },\n            onCreate: function(data) {\n                recalculateArrowPosition(data);\n            },\n            onUpdate: function(data) {\n                recalculateArrowPosition(data);\n            },\n        };\n\n        let recalculateArrowPosition = function(data) {\n            let placement = data.placement.split('-')[0];\n            const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n            const arrowElement = data.instance.popper.querySelector('[data-role=\"arrow\"]');\n            const stepElement = $(data.instance.popper.querySelector('[data-role=\"flexitour-step\"]'));\n            if (isVertical) {\n                let arrowHeight = parseFloat(window.getComputedStyle(arrowElement).height);\n                let arrowOffset = parseFloat(window.getComputedStyle(arrowElement).top);\n                let popperHeight = parseFloat(window.getComputedStyle(data.instance.popper).height);\n                let popperOffset = parseFloat(window.getComputedStyle(data.instance.popper).top);\n                let popperBorderWidth = parseFloat(stepElement.css('borderTopWidth'));\n                let popperBorderRadiusWidth = parseFloat(stepElement.css('borderTopLeftRadius')) * 2;\n                let arrowPos = arrowOffset + (arrowHeight / 2);\n                let maxPos = popperHeight + popperOffset - popperBorderWidth - popperBorderRadiusWidth;\n                let minPos = popperOffset + popperBorderWidth + popperBorderRadiusWidth;\n                if (arrowPos >= maxPos || arrowPos <= minPos) {\n                    let newArrowPos = 0;\n                    if (arrowPos > (popperHeight / 2)) {\n                        newArrowPos = maxPos - arrowHeight;\n                    } else {\n                        newArrowPos = minPos + arrowHeight;\n                    }\n                    $(arrowElement).css('top', newArrowPos);\n                }\n            } else {\n                let arrowWidth = parseFloat(window.getComputedStyle(arrowElement).width);\n                let arrowOffset = parseFloat(window.getComputedStyle(arrowElement).left);\n                let popperWidth = parseFloat(window.getComputedStyle(data.instance.popper).width);\n                let popperOffset = parseFloat(window.getComputedStyle(data.instance.popper).left);\n                let popperBorderWidth = parseFloat(stepElement.css('borderTopWidth'));\n                let popperBorderRadiusWidth = parseFloat(stepElement.css('borderTopLeftRadius')) * 2;\n                let arrowPos = arrowOffset + (arrowWidth / 2);\n                let maxPos = popperWidth + popperOffset - popperBorderWidth - popperBorderRadiusWidth;\n                let minPos = popperOffset + popperBorderWidth + popperBorderRadiusWidth;\n                if (arrowPos >= maxPos || arrowPos <= minPos) {\n                    let newArrowPos = 0;\n                    if (arrowPos > (popperWidth / 2)) {\n                        newArrowPos = maxPos - arrowWidth;\n                    } else {\n                        newArrowPos = minPos + arrowWidth;\n                    }\n                    $(arrowElement).css('left', newArrowPos);\n                }\n            }\n        };\n\n        let background = $('[data-flexitour=\"step-background\"]');\n        if (background.length) {\n            target = background;\n        }\n        this.currentStepPopper = new Popper(target, content[0], config);\n\n        return this;\n    }\n\n    /**\n     * For left/right placement, checks that there is room for the step at current window size.\n     *\n     * If there is not enough room, changes placement to 'top'.\n     *\n     * @method  recalculatePlacement\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @return  {String}                    The placement after recalculate\n     */\n    recalculatePlacement(stepConfig) {\n        const buffer = 10;\n        const arrowWidth = 16;\n        let target = this.getStepTarget(stepConfig);\n        let widthContent = this.currentStepNode.width() + arrowWidth;\n        let targetOffsetLeft = target.offset().left - buffer;\n        let targetOffsetRight = target.offset().left + target.width() + buffer;\n        let placement = stepConfig.placement;\n\n        if (['left', 'right'].indexOf(placement) !== -1) {\n            if ((targetOffsetLeft < (widthContent + buffer)) &&\n                ((targetOffsetRight + widthContent + buffer) > document.documentElement.clientWidth)) {\n                placement = 'top';\n            }\n        }\n        return placement;\n    }\n\n    /**\n     * Add the backdrop.\n     *\n     * @method  positionBackdrop\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    positionBackdrop(stepConfig) {\n        if (stepConfig.backdrop) {\n            this.currentStepConfig.hasBackdrop = true;\n            let backdrop = $('<div data-flexitour=\"backdrop\"></div>');\n\n            if (stepConfig.zIndex) {\n                if (stepConfig.attachPoint === 'append') {\n                    stepConfig.attachTo.append(backdrop);\n                } else {\n                    backdrop.insertAfter(stepConfig.attachTo);\n                }\n            } else {\n                $('body').append(backdrop);\n            }\n\n            if (this.isStepActuallyVisible(stepConfig)) {\n                // The step has a visible target.\n                // Punch a hole through the backdrop.\n                let background = $('[data-flexitour=\"step-background\"]');\n                if (!background.length) {\n                    background = $('<div data-flexitour=\"step-background\"></div>');\n                }\n\n                let targetNode = this.getStepTarget(stepConfig);\n\n                let buffer = 10;\n\n                let colorNode = targetNode;\n                if (buffer) {\n                    colorNode = $('body');\n                }\n\n                let drawertop = 0;\n                if (targetNode.parents('[data-usertour=\"scroller\"]').length) {\n                    const scrollerElement = targetNode.parents('[data-usertour=\"scroller\"]');\n                    const navigationBuffer = scrollerElement.offset().top;\n                    if (scrollerElement.scrollTop() >= navigationBuffer) {\n                        drawertop = scrollerElement.scrollTop() - navigationBuffer;\n                        background.css({\n                            position: 'fixed'\n                        });\n                    }\n                }\n\n                background.css({\n                    width: targetNode.outerWidth() + buffer + buffer,\n                    height: targetNode.outerHeight() + buffer + buffer,\n                    left: targetNode.offset().left - buffer,\n                    top: targetNode.offset().top + drawertop - buffer,\n                    backgroundColor: this.calculateInherittedBackgroundColor(colorNode),\n                });\n\n                if (targetNode.offset().left < buffer) {\n                    background.css({\n                        width: targetNode.outerWidth() + targetNode.offset().left + buffer,\n                        left: targetNode.offset().left,\n                    });\n                }\n\n                if ((targetNode.offset().top + drawertop) < buffer) {\n                    background.css({\n                        height: targetNode.outerHeight() + targetNode.offset().top + buffer,\n                        top: targetNode.offset().top,\n                    });\n                }\n\n                let targetRadius = targetNode.css('borderRadius');\n                if (targetRadius && targetRadius !== $('body').css('borderRadius')) {\n                    background.css('borderRadius', targetRadius);\n                }\n\n                let targetPosition = this.calculatePosition(targetNode);\n                if (targetPosition === 'fixed') {\n                    background.css('top', 0);\n                } else if (targetPosition === 'absolute') {\n                    background.css('position', 'fixed');\n                }\n\n                let fader = background.clone();\n                fader.css({\n                    backgroundColor: backdrop.css('backgroundColor'),\n                    opacity: backdrop.css('opacity'),\n                });\n                fader.attr('data-flexitour', 'step-background-fader');\n\n                if (targetNode.parents('[data-region=\"fixed-drawer\"]').length) {\n                    let targetClone = targetNode.clone();\n                    background.append(targetClone);\n                }\n\n                if (stepConfig.zIndex) {\n                    if (stepConfig.attachPoint === 'append') {\n                        stepConfig.attachTo.append(background);\n                    } else {\n                        fader.insertAfter(stepConfig.attachTo);\n                        background.insertAfter(stepConfig.attachTo);\n                    }\n                } else {\n                    $('body').append(fader);\n                    $('body').append(background);\n                }\n\n                // Add the backdrop data to the actual target.\n                // This is the part which actually does the work.\n                targetNode.attr('data-flexitour', 'step-backdrop');\n\n                if (stepConfig.zIndex) {\n                    backdrop.css('zIndex', stepConfig.zIndex);\n                    background.css('zIndex', stepConfig.zIndex + 1);\n                    targetNode.css('zIndex', stepConfig.zIndex + 2);\n                }\n\n                fader.fadeOut('2000', function() {\n                    $(this).remove();\n                });\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Calculate the inheritted z-index.\n     *\n     * @method  calculateZIndex\n     * @param   {jQuery}    elem                        The element to calculate z-index for\n     * @return  {Number}                                Calculated z-index\n     */\n    calculateZIndex(elem) {\n        elem = $(elem);\n        while (elem.length && elem[0] !== document) {\n            // Ignore z-index if position is set to a value where z-index is ignored by the browser\n            // This makes behavior of this function consistent across browsers\n            // WebKit always returns auto if the element is positioned.\n            let position = elem.css(\"position\");\n            if (position === \"absolute\" || position === \"relative\" || position === \"fixed\") {\n                // IE returns 0 when zIndex is not specified\n                // other browsers return a string\n                // we ignore the case of nested elements with an explicit value of 0\n                // <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\n                let value = parseInt(elem.css(\"zIndex\"), 10);\n                if (!isNaN(value) && value !== 0) {\n                    return value;\n                }\n            }\n            elem = elem.parent();\n        }\n\n        return 0;\n    }\n\n    /**\n     * Calculate the inheritted background colour.\n     *\n     * @method  calculateInherittedBackgroundColor\n     * @param   {jQuery}    elem                        The element to calculate colour for\n     * @return  {String}                                Calculated background colour\n     */\n    calculateInherittedBackgroundColor(elem) {\n        // Use a fake node to compare each element against.\n        let fakeNode = $('<div>').hide();\n        $('body').append(fakeNode);\n        let fakeElemColor = fakeNode.css('backgroundColor');\n        fakeNode.remove();\n\n        elem = $(elem);\n        while (elem.length && elem[0] !== document) {\n            let color = elem.css('backgroundColor');\n            if (color !== fakeElemColor) {\n                return color;\n            }\n            elem = elem.parent();\n        }\n\n        return null;\n    }\n\n    /**\n     * Calculate the inheritted position.\n     *\n     * @method  calculatePosition\n     * @param   {jQuery}    elem                        The element to calculate position for\n     * @return  {String}                                Calculated position\n     */\n    calculatePosition(elem) {\n        elem = $(elem);\n        while (elem.length && elem[0] !== document) {\n            let position = elem.css('position');\n            if (position !== 'static') {\n                return position;\n            }\n            elem = elem.parent();\n        }\n\n        return null;\n    }\n\n    /**\n     * Perform accessibility changes for step shown.\n     *\n     * This will add aria-hidden=\"true\" to all siblings and parent siblings.\n     *\n     * @method  accessibilityShow\n     */\n    accessibilityShow() {\n        let stateHolder = 'data-has-hidden';\n        let attrName = 'aria-hidden';\n        let hideFunction = function(child) {\n            let flexitourRole = child.data('flexitour');\n            if (flexitourRole) {\n                switch (flexitourRole) {\n                    case 'container':\n                    case 'target':\n                        return;\n                }\n            }\n\n            let hidden = child.attr(attrName);\n            if (!hidden) {\n                child.attr(stateHolder, true);\n                Aria.hide(child);\n            }\n        };\n\n        this.currentStepNode.siblings().each(function(index, node) {\n            hideFunction($(node));\n        });\n        this.currentStepNode.parentsUntil('body').siblings().each(function(index, node) {\n            hideFunction($(node));\n        });\n    }\n\n    /**\n     * Perform accessibility changes for step hidden.\n     *\n     * This will remove any newly added aria-hidden=\"true\".\n     *\n     * @method  accessibilityHide\n     */\n    accessibilityHide() {\n        let stateHolder = 'data-has-hidden';\n        let showFunction = function(child) {\n            let hidden = child.attr(stateHolder);\n            if (typeof hidden !== 'undefined') {\n                child.removeAttr(stateHolder);\n                Aria.unhide(child);\n            }\n        };\n\n        $('[' + stateHolder + ']').each(function(index, node) {\n            showFunction($(node));\n        });\n    }\n};\n\nexport default Tour;\n"],"names":["constructor","config","init","eventHandlers","reset","originalConfiguration","configure","apply","this","arguments","storage","window","sessionStorage","storageKey","tourName","e","hide","resetStepListeners","steps","currentStepNumber","eventName","forEach","handler","addEventHandler","resetStepDefaults","template","templateContent","checkMinimumRequirements","Error","length","loadOriginalConfiguration","stepDefaults","setStepDefaults","extend","element","placement","delay","moveOnClick","moveAfterTime","orphan","direction","getCurrentStepNumber","parseInt","setCurrentStepNumber","stepNumber","setItem","code","DOMException","QUOTA_EXCEEDED_ERR","removeItem","getNextStepNumber","nextStepNumber","isStepPotentiallyVisible","getStepConfig","getPreviousStepNumber","previousStepNumber","isLastStep","stepConfig","isStepActuallyVisible","getPotentiallyVisibleSteps","position","result","stepId","stepid","target","getStepTarget","is","next","gotoStep","previous","endTour","_gotoStep","delayed","setTimeout","bind","fn","dispatchEvent","eventTypes","stepRender","defaultPrevented","renderStep","stepRendered","normalizeStepConfig","$","reflex","moveAfterClick","content","body","attachTo","attachPoint","first","detail","cancelable","tour","document","push","processStepListeners","listeners","node","currentStepNode","args","proxy","handleKeyDown","targetNode","parents","listener","on","off","currentStepConfig","getTemplateContent","find","html","title","nextBtn","endBtn","removeClass","addClass","prop","then","value","catch","attr","displaystepnumbers","stepsPotentiallyVisible","totalStepsPotentiallyVisible","total","addStepToPage","clone","animationTarget","stop","data","zIndex","calculateZIndex","css","positionBackdrop","append","top","left","animate","scrollTop","calculateScrollTop","promise","positionStep","revealStep","isOrphan","currentStepPopper","Popper","removeOnDestroy","arrowElement","modifiers","enabled","applyStyle","onLoad","onCreate","images","calculateStepPositionInPage","fadeIn","announceStep","focus","bodyRegion","headerRegion","accessibilityShow","tabbableSelector","keyCode","hasBackdrop","currentIndex","nextIndex","nextNode","focusRelevant","activeElement","stepTarget","tabbableNodes","dialogContainer","filter","index","has","each","shiftKey","closest","last","preventDefault","call","startTour","startAt","storageStartValue","getItem","storageStartAt","tourStart","tourRunning","tourStarted","restartTour","tourEnd","previousTarget","tourEnded","transition","stepHide","destroy","fadeTime","remove","removeAttr","fadeOut","currentStepElement","accessibilityHide","stepHidden","show","getStepContainer","viewportHeight","height","scrollParent","offset","Math","max","min","ceil","stepHeight","viewportWidth","width","stepWidth","MINSPACING","maxHeight","outerHeight","flipBehavior","recalculatePlacement","flip","behaviour","arrow","recalculateArrowPosition","onUpdate","split","isVertical","indexOf","instance","popper","querySelector","stepElement","arrowHeight","parseFloat","getComputedStyle","arrowOffset","popperHeight","popperOffset","popperBorderWidth","popperBorderRadiusWidth","arrowPos","maxPos","minPos","newArrowPos","arrowWidth","popperWidth","background","widthContent","targetOffsetLeft","targetOffsetRight","documentElement","clientWidth","backdrop","insertAfter","buffer","colorNode","drawertop","scrollerElement","navigationBuffer","outerWidth","backgroundColor","calculateInherittedBackgroundColor","targetRadius","targetPosition","calculatePosition","fader","opacity","targetClone","elem","isNaN","parent","fakeNode","fakeElemColor","color","hideFunction","child","flexitourRole","Aria","siblings","parentsUntil","unhide"],"mappings":"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"}