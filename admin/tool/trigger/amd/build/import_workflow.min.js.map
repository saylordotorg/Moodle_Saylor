{"version":3,"sources":["../src/import_workflow.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Templates","ajax","Fragment","Notification","ImportWorkflow","contextid","modalObj","spinner","updateModalBody","params","jsonformdata","JSON","stringify","setBody","loadFragment","processModalForm","e","preventDefault","fileform","getRoot","find","serialize","call","methodname","args","done","responsejson","responseobj","parse","errorcode","location","reload","Object","keys","message","forEach","key","addNotification","type","hide","fail","get_string","init","context","then","title","create","types","SAVE_CANCEL","body","large","modal","on","save","hidden"],"mappings":"AA0BAA,OAAM,gCACJ,CAAC,QAAD,CAAW,UAAX,CAAuB,oBAAvB,CAA6C,mBAA7C,CAAiE,gBAAjE,CAAmF,WAAnF,CAAgG,eAAhG,CACI,mBADJ,CADI,CAGE,SAAUC,CAAV,CAAaC,CAAb,CAAkBC,CAAlB,CAAgCC,CAAhC,CAA6CC,CAA7C,CAAwDC,CAAxD,CAA8DC,CAA9D,CAAwEC,CAAxE,CAAsF,IAK9EC,CAAAA,CAAc,CAAG,EAL6D,CAM9EC,CAN8E,CAO9EC,CAP8E,CAQ9EC,CAAO,6HARuE,CAiBlF,QAASC,CAAAA,CAAT,EAA2B,IAEnBC,CAAAA,CAAM,CAAG,CAACC,YAAY,CAAEC,IAAI,CAACC,SAAL,CADb,EACa,CAAf,CAFU,CAGvBN,CAAQ,CAACO,OAAT,CAAiBN,CAAjB,EACAD,CAAQ,CAACO,OAAT,CAAiBX,CAAQ,CAACY,YAAT,CAAsB,cAAtB,CAAsC,iBAAtC,CAAyDT,CAAzD,CAAoEI,CAApE,CAAjB,CACH,CAMD,QAASM,CAAAA,CAAT,CAA0BC,CAA1B,CAA6B,CACzBA,CAAC,CAACC,cAAF,GAGA,GAAIC,CAAAA,CAAQ,CAAGZ,CAAQ,CAACa,OAAT,GAAmBC,IAAnB,CAAwB,MAAxB,EAAgCC,SAAhC,EAAf,CACAf,CAAQ,CAACO,OAAT,CAAiBN,CAAjB,EAGAN,CAAI,CAACqB,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,kCADL,CAEPC,IAAI,CAAE,CACFd,YAAY,CAAEC,IAAI,CAACC,SAAL,CAAeM,CAAf,CADZ,CAFC,CAAD,CAAV,EAKI,CALJ,EAKOO,IALP,CAKY,SAASC,CAAT,CAAuB,CAC/B,GAAIC,CAAAA,CAAW,CAAGhB,IAAI,CAACiB,KAAL,CAAWF,CAAX,CAAlB,CAEA,GAA6B,SAAzB,EAAAC,CAAW,CAACE,SAAhB,CAAwC,CAEpCC,QAAQ,CAACC,MAAT,IACH,CAHD,IAGO,CACHC,MAAM,CAACC,IAAP,CAAYN,CAAW,CAACO,OAAxB,EAAiCC,OAAjC,CAAyC,SAASC,CAAT,CAAc,CACnDjC,CAAY,CAACkC,eAAb,CAA6B,CACzBH,OAAO,CAAEP,CAAW,CAACO,OAAZ,CAAoBE,CAApB,CADgB,CAEzBE,IAAI,CAAE,OAFmB,CAA7B,CAIH,CALD,CAMH,CAEDhC,CAAQ,CAACiC,IAAT,EAEH,CAtBD,EAsBGC,IAtBH,CAsBQ,UAAW,CAEfrC,CAAY,CAACkC,eAAb,CAA6B,CACzBH,OAAO,CAAErC,CAAG,CAAC4C,UAAJ,CAAe,qBAAf,CAAsC,cAAtC,CADgB,CAEzBH,IAAI,CAAE,OAFmB,CAA7B,EAKAhC,CAAQ,CAACiC,IAAT,EACH,CA9BD,CA+BH,CAODnC,CAAc,CAACsC,IAAf,CAAsB,SAASC,CAAT,CAAkB,CAEpCtC,CAAS,CAAGsC,CAAZ,CAGA9C,CAAG,CAAC4C,UAAJ,CAAe,kBAAf,CAAmC,cAAnC,EAAmDG,IAAnD,CAAwD,SAASC,CAAT,CAAgB,CAEpE/C,CAAY,CAACgD,MAAb,CAAoB,CAChBR,IAAI,CAAExC,CAAY,CAACiD,KAAb,CAAmBC,WADT,CAEhBH,KAAK,CAAEA,CAFS,CAGhBI,IAAI,CAAE1C,CAHU,CAIhB2C,KAAK,GAJW,CAApB,CAKGtD,CAAC,CAAC,kBAAD,CALJ,EAMC6B,IAND,CAMM,SAAS0B,CAAT,CAAgB,CAClB7C,CAAQ,CAAG6C,CAAX,CACA7C,CAAQ,CAACa,OAAT,GAAmBiC,EAAnB,CAAsBrD,CAAW,CAACsD,IAAlC,CAAwCtC,CAAxC,EACAT,CAAQ,CAACa,OAAT,GAAmBiC,EAAnB,CAAsBrD,CAAW,CAACuD,MAAlC,CAA0C9C,CAA1C,EACAA,CAAe,EAClB,CAXD,CAYH,CAdD,CAgBH,CArBD,CAuBA,MAAOJ,CAAAA,CACV,CArGH,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Workflow step select javascript.\n *\n * @module     tool_trigger/workflow\n * @package    tool_trigger\n * @class      Workflow\n * @copyright  2018 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.4\n */\n\ndefine(\n  ['jquery', 'core/str', 'core/modal_factory', 'core/modal_events','core/templates', 'core/ajax', 'core/fragment',\n      'core/notification'],\n        function ($, Str, ModalFactory, ModalEvents, Templates, ajax, Fragment, Notification) {\n\n            /**\n             * Module level variables.\n             */\n            var ImportWorkflow = {};\n            var contextid;\n            var modalObj;\n            var spinner = '<p class=\"text-center\">'\n                + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i><span class=\"sr-only\">Loading...</span>'\n                + '</p>';\n\n            /**\n             * Updates the body of the modal window.\n             *\n             * @private\n             */\n            function updateModalBody() {\n                var formdata = {};\n                var params = {jsonformdata: JSON.stringify(formdata)};\n                modalObj.setBody(spinner);\n                modalObj.setBody(Fragment.loadFragment('tool_trigger', 'new_import_form', contextid, params));\n            }\n\n            /**\n             * Updates Moodle form with selected information.\n             * @private\n             */\n            function processModalForm(e) {\n                e.preventDefault(); // Stop modal from closing.\n\n                // Form data.\n                var fileform = modalObj.getRoot().find('form').serialize();\n                modalObj.setBody(spinner);\n\n                // Submit form via ajax to do server side validation.\n                ajax.call([{\n                    methodname: 'tool_trigger_process_import_form',\n                    args: {\n                        jsonformdata: JSON.stringify(fileform)\n                    },\n                }])[0].done(function(responsejson) {\n                    var responseobj = JSON.parse(responsejson);\n\n                    if (responseobj.errorcode == 'success') {\n                        // Validation succeeded! Update the list of workflows.\n                        location.reload(true);  // We're lazy so we'll just reload the page.\n                    } else {\n                        Object.keys(responseobj.message).forEach(function(key) {\n                            Notification.addNotification({\n                                message: responseobj.message[key],\n                                type: 'error'\n                            });\n                        });\n                    }\n\n                    modalObj.hide(); // Hide the modal.\n\n                }).fail(function() {\n                    // Validation failed!\n                    Notification.addNotification({\n                        message: Str.get_string('errorimportworkflow', 'tool_trigger'),\n                        type: 'error'\n                    });\n\n                    modalObj.hide(); // Hide the modal.\n                });\n            }\n\n            /**\n             * Initialise the class.\n             *\n             * @public\n             */\n            ImportWorkflow.init = function(context) {\n                // Save the context ID in a closure variable.\n                contextid = context;\n\n                // Get the Title String.\n                Str.get_string('importmodaltitle', 'tool_trigger').then(function(title) {\n                    // Create the Modal.\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: title,\n                        body: spinner,\n                        large: true\n                    }, $('[name=importbtn]'))\n                    .done(function(modal) {\n                        modalObj = modal;\n                        modalObj.getRoot().on(ModalEvents.save, processModalForm);\n                        modalObj.getRoot().on(ModalEvents.hidden, updateModalBody);\n                        updateModalBody();\n                    });\n                });\n\n            };\n\n            return ImportWorkflow;\n        });\n"],"file":"import_workflow.min.js"}