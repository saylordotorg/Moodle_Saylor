{"version":3,"sources":["../src/modal_form.js"],"names":["define","$","ModalFactory","ModalEvents","Ajax","Notification","Y","Event","Str","ModalForm","config","modalConfig","type","types","SAVE_CANCEL","args","init","prototype","modal","M","util","js_pending","get_strings","key","component","then","create","bind","setBody","getBody","param","setLarge","getRoot","on","hidden","notifyFormSubmitAjax","find","destroy","resetDirtyFormState","triggerElement","focus","getModal","addClass","noSubmitButtonPressed","submitFormAjax","saveButtonText","setSaveButtonText","onInit","show","js_complete","fail","exception","save","submitForm","formDataString","promise","Deferred","params","formdata","form","formClass","call","methodname","response","resolve","html","processCollectedJavascript","javascript","ex","reject","onSubmitSuccess","onValidationError","onSubmitError","use","core_formchangechecker","reset_form_dirty_state","e","preventDefault","formData","serialize","el","currentTarget","encodeURIComponent","attr","validateElements","invalid","merge","length","first","disableButtons","getFooter","enableButtons","removeAttr","submitted","data","JSON","parse","hide","submit","js","jsNodes","allScript","each","index","scriptNode","tagName","prop","toLowerCase","exists","s","encodeURI","text"],"mappings":"AAsBAA,OAAM,+BAAC,CACH,QADG,CAEH,oBAFG,CAGH,mBAHG,CAIH,WAJG,CAKH,mBALG,CAMH,UANG,CAOH,YAPG,CAQH,UARG,CAAD,CASH,SAASC,CAAT,CAAYC,CAAZ,CAA0BC,CAA1B,CAAuCC,CAAvC,CAA6CC,CAA7C,CAA2DC,CAA3D,CAA8DC,CAA9D,CAAqEC,CAArE,CAA0E,CAazE,GAAIC,CAAAA,CAAS,CAAG,SAASC,CAAT,CAAiB,CAC7B,KAAKA,MAAL,CAAcA,CAAd,CACA,KAAKA,MAAL,CAAYC,WAAZ,CAA0B,KAAKD,MAAL,CAAYC,WAAZ,EAA2B,EAArD,CACA,KAAKD,MAAL,CAAYC,WAAZ,CAAwBC,IAAxB,CAA+B,KAAKF,MAAL,CAAYC,WAAZ,CAAwBC,IAAxB,EAAgCV,CAAY,CAACW,KAAb,CAAmBC,WAAlF,CACA,KAAKJ,MAAL,CAAYK,IAAZ,CAAmB,KAAKL,MAAL,CAAYK,IAAZ,EAAoB,EAAvC,CACA,KAAKC,IAAL,EACH,CAND,CAWAP,CAAS,CAACQ,SAAV,CAAoBP,MAApB,CAA6B,EAA7B,CAKAD,CAAS,CAACQ,SAAV,CAAoBC,KAApB,CAA4B,IAA5B,CAOAT,CAAS,CAACQ,SAAV,CAAoBD,IAApB,CAA2B,UAAW,CAOlCG,CAAC,CAACC,IAAF,CAAOC,UAAP,CAAkB,kCAAlB,EACAb,CAAG,CAACc,WAAJ,CAPsB,CAClB,CAACC,GAAG,CAAE,aAAN,CAAqBC,SAAS,CAAE,QAAhC,CADkB,CAElB,CAACD,GAAG,CAAE,WAAN,CAAmBC,SAAS,CAAE,QAA9B,CAFkB,CAOtB,EACKC,IADL,CACU,UAAW,CAIb,MAAOvB,CAAAA,CAAY,CAACwB,MAAb,CAAoB,KAAKhB,MAAL,CAAYC,WAAhC,CACV,CALK,CAKJgB,IALI,CAKC,IALD,CADV,EAOKF,IAPL,CAOU,SAASP,CAAT,CAAgB,CAElB,KAAKA,KAAL,CAAaA,CAAb,CAIA,KAAKA,KAAL,CAAWU,OAAX,CAAmB,KAAKC,OAAL,CAAa5B,CAAC,CAAC6B,KAAF,CAAQ,KAAKpB,MAAL,CAAYK,IAApB,CAAb,CAAnB,EAGA,KAAKG,KAAL,CAAWa,QAAX,GAGA,KAAKb,KAAL,CAAWc,OAAX,GAAqBC,EAArB,CAAwB9B,CAAW,CAAC+B,MAApC,CAA4C,UAAW,CAEnD3B,CAAK,CAAC4B,oBAAN,CAA2B,KAAKjB,KAAL,CAAWc,OAAX,GAAqBI,IAArB,CAA0B,MAA1B,EAAkC,CAAlC,CAA3B,KAGA,KAAKlB,KAAL,CAAWmB,OAAX,GAGA,KAAKC,mBAAL,GAGA,GAAmC,IAA/B,QAAK5B,MAAL,CAAY6B,cAAhB,CAAyC,CACrC,KAAK7B,MAAL,CAAY6B,cAAZ,CAA2BC,KAA3B,EACH,CACJ,CAd2C,CAc1Cb,IAd0C,CAcrC,IAdqC,CAA5C,EAiBA,KAAKT,KAAL,CAAWuB,QAAX,GAAsBC,QAAtB,CAA+B,6BAA/B,EAGA,KAAKxB,KAAL,CAAWc,OAAX,GAAqBC,EAArB,CAAwB,OAAxB,CAAiC,yCAAjC,CAA4E,KAAKU,qBAAL,CAA2BhB,IAA3B,CAAgC,IAAhC,CAA5E,EAGA,KAAKT,KAAL,CAAWc,OAAX,GAAqBC,EAArB,CAAwB,QAAxB,CAAkC,MAAlC,CAA0C,KAAKW,cAAL,CAAoBjB,IAApB,CAAyB,IAAzB,CAA1C,EAGA,GAA0C,WAAtC,QAAO,MAAKjB,MAAL,CAAYmC,cAAnB,EACwC,WAAxC,QAAO,MAAK3B,KAAL,CAAW4B,iBADtB,CACyD,CACrD,KAAK5B,KAAL,CAAW4B,iBAAX,CAA6B,KAAKpC,MAAL,CAAYmC,cAAzC,CACH,CAED,KAAKE,MAAL,GAEA,KAAK7B,KAAL,CAAW8B,IAAX,GACA7B,CAAC,CAACC,IAAF,CAAO6B,WAAP,CAAmB,kCAAnB,EACA,MAAO,MAAK/B,KACf,CAhDK,CAgDJS,IAhDI,CAgDC,IAhDD,CAPV,EAwDKuB,IAxDL,CAwDU7C,CAAY,CAAC8C,SAxDvB,CAyDH,CAjED,CAsEA1C,CAAS,CAACQ,SAAV,CAAoB8B,MAApB,CAA6B,UAAW,CAGpC,KAAK7B,KAAL,CAAWc,OAAX,GAAqBC,EAArB,CAAwB9B,CAAW,CAACiD,IAApC,CAA0C,KAAKC,UAAL,CAAgB1B,IAAhB,CAAqB,IAArB,CAA1C,CACH,CAJD,CAYAlB,CAAS,CAACQ,SAAV,CAAoBY,OAApB,CAA8B,SAASyB,CAAT,CAAyB,IAC/CC,CAAAA,CAAO,CAAGtD,CAAC,CAACuD,QAAF,EADqC,CAE/CC,CAAM,CAAG,CACTC,QAAQ,CAAEJ,CADD,CAETK,IAAI,CAAE,KAAKjD,MAAL,CAAYkD,SAFT,CAFsC,CAMnDzC,CAAC,CAACC,IAAF,CAAOC,UAAP,CAAkB,kCAAlB,EACAjB,CAAI,CAACyD,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,6BADL,CAEP/C,IAAI,CAAE0C,CAFC,CAAD,CAAV,EAGI,CAHJ,EAIKhC,IAJL,CAIU,SAASsC,CAAT,CAAmB,CACrBR,CAAO,CAACS,OAAR,CAAgBD,CAAQ,CAACE,IAAzB,CAA+BC,CAA0B,CAACH,CAAQ,CAACI,UAAV,CAAzD,EACAhD,CAAC,CAACC,IAAF,CAAO6B,WAAP,CAAmB,kCAAnB,EACA,MAAO,KACV,CARL,EASKC,IATL,CASU,SAASkB,CAAT,CAAa,CACfb,CAAO,CAACc,MAAR,CAAeD,CAAf,CACH,CAXL,EAYA,MAAOb,CAAAA,CAAO,CAACA,OAAR,EACV,CApBD,CA4BA9C,CAAS,CAACQ,SAAV,CAAoBqD,eAApB,CAAsC,SAASP,CAAT,CAAmB,CAErD,MAAOA,CAAAA,CACV,CAHD,CAUAtD,CAAS,CAACQ,SAAV,CAAoBsD,iBAApB,CAAwC,UAAW,CAGlD,CAHD,CAUA9D,CAAS,CAACQ,SAAV,CAAoBuD,aAApB,CAAoC,SAASrB,CAAT,CAAoB,CACpD9C,CAAY,CAAC8C,SAAb,CAAuBA,CAAvB,CACH,CAFD,CAOA1C,CAAS,CAACQ,SAAV,CAAoBqB,mBAApB,CAA0C,UAAW,CACjDhC,CAAC,CAACmE,GAAF,CAAM,+BAAN,CAAuC,UAAW,CAC9CtD,CAAC,CAACuD,sBAAF,CAAyBC,sBAAzB,EACH,CAFD,CAGH,CAJD,CAaAlE,CAAS,CAACQ,SAAV,CAAoB0B,qBAApB,CAA4C,SAASiC,CAAT,CAAY,CACpDA,CAAC,CAACC,cAAF,GAEAtE,CAAK,CAAC4B,oBAAN,CAA2B,KAAKjB,KAAL,CAAWc,OAAX,GAAqBI,IAArB,CAA0B,MAA1B,EAAkC,CAAlC,CAA3B,KAGA,GAAI0C,CAAAA,CAAQ,CAAG,KAAK5D,KAAL,CAAWc,OAAX,GAAqBI,IAArB,CAA0B,MAA1B,EAAkC2C,SAAlC,EAAf,CACIC,CAAE,CAAG/E,CAAC,CAAC2E,CAAC,CAACK,aAAH,CADV,CAEAH,CAAQ,CAAGA,CAAQ,CAAG,GAAX,CAAiBI,kBAAkB,CAACF,CAAE,CAACG,IAAH,CAAQ,MAAR,CAAD,CAAnC,CAAuD,GAAvD,CAA6DD,kBAAkB,CAACF,CAAE,CAACG,IAAH,CAAQ,OAAR,CAAD,CAA1F,CACA,KAAKjE,KAAL,CAAWU,OAAX,CAAmB,KAAKC,OAAL,CAAaiD,CAAb,CAAnB,CACH,CAVD,CAgBArE,CAAS,CAACQ,SAAV,CAAoBmE,gBAApB,CAAuC,UAAW,CAC9C7E,CAAK,CAAC4B,oBAAN,CAA2B,KAAKjB,KAAL,CAAWc,OAAX,GAAqBI,IAArB,CAA0B,MAA1B,EAAkC,CAAlC,CAA3B,EAGA,GAAIiD,CAAAA,CAAO,CAAGpF,CAAC,CAACqF,KAAF,CACV,KAAKpE,KAAL,CAAWc,OAAX,GAAqBI,IAArB,CAA0B,yBAA1B,CADU,CAEV,KAAKlB,KAAL,CAAWc,OAAX,GAAqBI,IAArB,CAA0B,QAA1B,CAFU,CAAd,CAMA,GAAIiD,CAAO,CAACE,MAAZ,CAAoB,CAChBF,CAAO,CAACG,KAAR,GAAgBhD,KAAhB,GACA,QACH,CAED,QACH,CAhBD,CAqBA/B,CAAS,CAACQ,SAAV,CAAoBwE,cAApB,CAAqC,UAAW,CAC5C,KAAKvE,KAAL,CAAWwE,SAAX,GAAuBtD,IAAvB,CAA4B,eAA5B,EAA6C+C,IAA7C,CAAkD,UAAlD,IACH,CAFD,CAOA1E,CAAS,CAACQ,SAAV,CAAoB0E,aAApB,CAAoC,UAAW,CAC3C,KAAKzE,KAAL,CAAWwE,SAAX,GAAuBtD,IAAvB,CAA4B,eAA5B,EAA6CwD,UAA7C,CAAwD,UAAxD,CACH,CAFD,CAWAnF,CAAS,CAACQ,SAAV,CAAoB2B,cAApB,CAAqC,SAASgC,CAAT,CAAY,CAE7CA,CAAC,CAACC,cAAF,GAGA,GAAI,CAAC,KAAKO,gBAAL,EAAL,CAA8B,CAC1B,MACH,CACD,KAAKK,cAAL,GAGA,GAAIX,CAAAA,CAAQ,CAAG,KAAK5D,KAAL,CAAWc,OAAX,GAAqBI,IAArB,CAA0B,MAA1B,EAAkC2C,SAAlC,EAAf,CAGA3E,CAAI,CAACyD,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,6BADL,CAEP/C,IAAI,CAAE,CACF2C,QAAQ,CAAEoB,CADR,CAEFnB,IAAI,CAAE,KAAKjD,MAAL,CAAYkD,SAFhB,CAFC,CAAD,CAAV,EAMI,CANJ,EAOKnC,IAPL,CAOU,SAASsC,CAAT,CAAmB,CACrB,GAAI,CAACA,CAAQ,CAAC8B,SAAd,CAAyB,CAErB,GAAItC,CAAAA,CAAO,CAAGtD,CAAC,CAACuD,QAAF,EAAd,CACAD,CAAO,CAACS,OAAR,CAAgBD,CAAQ,CAACE,IAAzB,CAA+BC,CAA0B,CAACH,CAAQ,CAACI,UAAV,CAAzD,EACA,KAAKjD,KAAL,CAAWU,OAAX,CAAmB2B,CAAO,CAACA,OAAR,EAAnB,EACA,KAAKoC,aAAL,GACA,KAAKpB,iBAAL,EACH,CAPD,IAOO,CAEH,GAAIuB,CAAAA,CAAI,CAAGC,IAAI,CAACC,KAAL,CAAWjC,CAAQ,CAAC+B,IAApB,CAAX,CACA,KAAK5E,KAAL,CAAW+E,IAAX,GACA,KAAK3B,eAAL,CAAqBwB,CAArB,CACH,CACD,MAAO,KACV,CAfK,CAeJnE,IAfI,CAeC,IAfD,CAPV,EAuBKuB,IAvBL,CAuBU,KAAKsB,aAAL,CAAmB7C,IAAnB,CAAwB,IAAxB,CAvBV,CAwBH,CAtCD,CAgDAlB,CAAS,CAACQ,SAAV,CAAoBoC,UAApB,CAAiC,SAASuB,CAAT,CAAY,CACzCA,CAAC,CAACC,cAAF,GACA,KAAK3D,KAAL,CAAWc,OAAX,GAAqBI,IAArB,CAA0B,MAA1B,EAAkC8D,MAAlC,EACH,CAHD,CAaA,GAAMhC,CAAAA,CAA0B,CAAG,SAASiC,CAAT,CAAa,IACxCC,CAAAA,CAAO,CAAGnG,CAAC,CAACkG,CAAD,CAD6B,CAExCE,CAAS,CAAG,EAF4B,CAG5CD,CAAO,CAACE,IAAR,CAAa,SAASC,CAAT,CAAgBC,CAAhB,CAA4B,CACrCA,CAAU,CAAGvG,CAAC,CAACuG,CAAD,CAAd,CACA,GAAIC,CAAAA,CAAO,CAAGD,CAAU,CAACE,IAAX,CAAgB,SAAhB,CAAd,CACA,GAAID,CAAO,EAA+B,QAA1B,GAAAA,CAAO,CAACE,WAAR,EAAhB,CAAqD,CACjD,GAAIH,CAAU,CAACrB,IAAX,CAAgB,KAAhB,CAAJ,CAA4B,CAExB,GAAIyB,CAAAA,CAAM,GAAV,CACA3G,CAAC,CAAC,QAAD,CAAD,CAAYqG,IAAZ,CAAiB,SAASC,CAAT,CAAgBM,CAAhB,CAAmB,CAChC,GAAI5G,CAAC,CAAC4G,CAAD,CAAD,CAAK1B,IAAL,CAAU,KAAV,IAAqBqB,CAAU,CAACrB,IAAX,CAAgB,KAAhB,CAAzB,CAAiD,CAC7CyB,CAAM,GACT,CACD,MAAO,CAACA,CACX,CALD,EAMA,GAAI,CAACA,CAAL,CAAa,CACTP,CAAS,EAAI,KAAb,CACAA,CAAS,EAAI,8CAAb,CACAA,CAAS,EAAI,oCAAb,CACAA,CAAS,EAAI,2BAA4BS,SAAS,CAACN,CAAU,CAACrB,IAAX,CAAgB,KAAhB,CAAD,CAArC,CAAgE,OAA7E,CACAkB,CAAS,EAAI,iEAAb,CACAA,CAAS,EAAI,KAChB,CACJ,CAjBD,IAiBO,CACHA,CAAS,EAAI,IAAMG,CAAU,CAACO,IAAX,EACtB,CACJ,CACJ,CAzBD,EA0BA,MAAOV,CAAAA,CACV,CA9BD,CAgCA,MAAO5F,CAAAA,CACV,CAxVK,CAAN","sourcesContent":["// This file is part of the tool_certificate plugin for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Display a form in a modal dialogue\n *\n * @module     tool_certificate/modal_form\n * @copyright  2018 Mitxel Moriana\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/ajax',\n    'core/notification',\n    'core/yui',\n    'core/event',\n    'core/str'\n], function($, ModalFactory, ModalEvents, Ajax, Notification, Y, Event, Str) {\n    /**\n     * Constructor\n     *\n     * Shows the required form inside a modal dialogue\n     *\n     * @param {Object} config Parameters for the list. See defaultParameters above for examples.\n     * @param {String} config.formClass PHP class name that handles the form (should extend \\tool_certificate\\modal_form )\n     * @param {Object} config.modalConfig modal config - title, type, etc. By default type is set\n     *              to ModalFactory.types.SAVE_CANCEL\n     * @param {Object} config.args Arguments for the initial form rendering\n     * @param {$} config.triggerElement trigger element for a modal form\n     */\n    var ModalForm = function(config) {\n        this.config = config;\n        this.config.modalConfig = this.config.modalConfig || {};\n        this.config.modalConfig.type = this.config.modalConfig.type || ModalFactory.types.SAVE_CANCEL;\n        this.config.args = this.config.args || {};\n        this.init();\n    };\n\n    /**\n     * @var {Object} config\n     */\n    ModalForm.prototype.config = {};\n\n    /**\n     * @var {Modal} modal\n     */\n    ModalForm.prototype.modal = null;\n\n    /**\n     * Initialise the class.\n     *\n     * @private\n     */\n    ModalForm.prototype.init = function() {\n        var requiredStrings = [\n            {key: 'collapseall', component: 'moodle'},\n            {key: 'expandall', component: 'moodle'}\n        ];\n\n        // Ensure strings required for shortforms are always available.\n        M.util.js_pending('tool_certificate_modal_form_init');\n        Str.get_strings(requiredStrings)\n            .then(function() {\n                // We don't attach trigger element to modal here to avoid MDL-70395.\n                // We normally initialise ModalForm as result of some event\n                // on trigger element, so new listener is not required.\n                return ModalFactory.create(this.config.modalConfig);\n            }.bind(this))\n            .then(function(modal) {\n                // Keep a reference to the modal.\n                this.modal = modal;\n\n                // We need to make sure that the modal already exists when we render the form. Some form elements\n                // such as date_selector inspect the existing elements on the page to find the highest z-index.\n                this.modal.setBody(this.getBody($.param(this.config.args)));\n\n                // Forms are big, we want a big modal.\n                this.modal.setLarge();\n\n                // After successfull submit, when we press \"Cancel\" or close the dialogue by clicking on X in the top right corner.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    // Notify listeners that the form is about to be submitted (this will reset atto autosave).\n                    Event.notifyFormSubmitAjax(this.modal.getRoot().find('form')[0], true);\n\n                    // Destroy the modal.\n                    this.modal.destroy();\n\n                    // Reset form-change-checker.\n                    this.resetDirtyFormState();\n\n                    // Focus on the trigger element that actually launched the modal.\n                    if (this.config.triggerElement !== null) {\n                        this.config.triggerElement.focus();\n                    }\n                }.bind(this));\n\n                // Add the class to the modal dialogue.\n                this.modal.getModal().addClass('tool-wp-modal-form-dialogue');\n\n                // We catch the press on submit buttons in the forms.\n                this.modal.getRoot().on('click', 'form input[type=submit][data-no-submit]', this.noSubmitButtonPressed.bind(this));\n\n                // We catch the form submit event and use it to submit the form with ajax.\n                this.modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n\n                // Change the text for the save button.\n                if (typeof this.config.saveButtonText !== 'undefined' &&\n                    typeof this.modal.setSaveButtonText !== 'undefined') {\n                    this.modal.setSaveButtonText(this.config.saveButtonText);\n                }\n\n                this.onInit();\n\n                this.modal.show();\n                M.util.js_complete('tool_certificate_modal_form_init');\n                return this.modal;\n            }.bind(this))\n            .fail(Notification.exception);\n    };\n\n    /**\n     * On initialisation of a modal dialogue. Caller may override.\n     */\n    ModalForm.prototype.onInit = function() {\n        // We catch the modal save event, and use it to submit the form inside the modal.\n        // Triggering a form submission will give JS validation scripts a chance to check for errors.\n        this.modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n    };\n\n    /**\n     * @param {String} formDataString form data in format of a query string\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    ModalForm.prototype.getBody = function(formDataString) {\n        var promise = $.Deferred();\n        var params = {\n            formdata: formDataString,\n            form: this.config.formClass\n        };\n        M.util.js_pending('tool_certificate_modal_form_body');\n        Ajax.call([{\n            methodname: 'tool_certificate_modal_form',\n            args: params\n        }])[0]\n            .then(function(response) {\n                promise.resolve(response.html, processCollectedJavascript(response.javascript));\n                M.util.js_complete('tool_certificate_modal_form_body');\n                return null;\n            })\n            .fail(function(ex) {\n                promise.reject(ex);\n            });\n        return promise.promise();\n    };\n\n    /**\n     * On form submit. Caller may override\n     *\n     * @param {Object} response Response received from the form's \"process\" method\n     * @return {Object}\n     */\n    ModalForm.prototype.onSubmitSuccess = function(response) {\n        // By default this function does nothing. Return here is irrelevant, it is only present to make eslint happy.\n        return response;\n    };\n\n    /**\n     * On form validation error. Caller may override\n     *\n     * @return {mixed}\n     */\n    ModalForm.prototype.onValidationError = function() {\n        // By default this function does nothing. Return here is irrelevant, it is only present to make eslint happy.\n        return undefined;\n    };\n\n    /**\n     * On exception during form processing. Caller may override\n     *\n     * @param {Object} exception\n     */\n    ModalForm.prototype.onSubmitError = function(exception) {\n        Notification.exception(exception);\n    };\n\n    /**\n     * Reset \"dirty\" form state (warning if there are changes)\n     */\n    ModalForm.prototype.resetDirtyFormState = function() {\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n    };\n\n    /**\n     * Click on a \"submit\" button that is marked in the form as registerNoSubmitButton()\n     *\n     * @method submitButtonPressed\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    ModalForm.prototype.noSubmitButtonPressed = function(e) {\n        e.preventDefault();\n\n        Event.notifyFormSubmitAjax(this.modal.getRoot().find('form')[0], true);\n\n        // Add the button name to the form data and submit it.\n        var formData = this.modal.getRoot().find('form').serialize(),\n            el = $(e.currentTarget);\n        formData = formData + '&' + encodeURIComponent(el.attr('name')) + '=' + encodeURIComponent(el.attr('value'));\n        this.modal.setBody(this.getBody(formData));\n    };\n\n    /**\n     * Validate form elements\n     * @return {boolean} true if client-side validation has passed, false if there are errors\n     */\n    ModalForm.prototype.validateElements = function() {\n        Event.notifyFormSubmitAjax(this.modal.getRoot().find('form')[0]);\n\n        // Now the change events have run, see if there are any \"invalid\" form fields.\n        var invalid = $.merge(\n            this.modal.getRoot().find('[aria-invalid=\"true\"]'),\n            this.modal.getRoot().find('.error')\n        );\n\n        // If we found invalid fields, focus on the first one and do not submit via ajax.\n        if (invalid.length) {\n            invalid.first().focus();\n            return false;\n        }\n\n        return true;\n    };\n\n    /**\n     * Disable buttons during form submission\n     */\n    ModalForm.prototype.disableButtons = function() {\n        this.modal.getFooter().find('[data-action]').attr('disabled', true);\n    };\n\n    /**\n     * Enable buttons after form submission (on validation error)\n     */\n    ModalForm.prototype.enableButtons = function() {\n        this.modal.getFooter().find('[data-action]').removeAttr('disabled');\n    };\n\n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    ModalForm.prototype.submitFormAjax = function(e) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n\n        // If we found invalid fields, focus on the first one and do not submit via ajax.\n        if (!this.validateElements()) {\n            return;\n        }\n        this.disableButtons();\n\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n\n        // Now we can continue...\n        Ajax.call([{\n            methodname: 'tool_certificate_modal_form',\n            args: {\n                formdata: formData,\n                form: this.config.formClass\n            }\n        }])[0]\n            .then(function(response) {\n                if (!response.submitted) {\n                    // Form was not submitted, it could be either because validation failed or because no-submit button was pressed.\n                    var promise = $.Deferred();\n                    promise.resolve(response.html, processCollectedJavascript(response.javascript));\n                    this.modal.setBody(promise.promise());\n                    this.enableButtons();\n                    this.onValidationError();\n                } else {\n                    // Form was submitted properly. Hide the modal and execute callback.\n                    var data = JSON.parse(response.data);\n                    this.modal.hide();\n                    this.onSubmitSuccess(data);\n                }\n                return null;\n            }.bind(this))\n            .fail(this.onSubmitError.bind(this));\n    };\n\n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks\n     * before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    ModalForm.prototype.submitForm = function(e) {\n        e.preventDefault();\n        this.modal.getRoot().find('form').submit();\n    };\n\n    /**\n     * Converts the JS that was received from collecting JS requirements on the $PAGE so it can be added to the existing page.\n     *\n     * Copied from core/fragment\n     *\n     * @param {string} js\n     * @return {string}\n     */\n    const processCollectedJavascript = function(js) {\n        var jsNodes = $(js);\n        var allScript = '';\n        jsNodes.each(function(index, scriptNode) {\n            scriptNode = $(scriptNode);\n            var tagName = scriptNode.prop('tagName');\n            if (tagName && (tagName.toLowerCase() === 'script')) {\n                if (scriptNode.attr('src')) {\n                    // We only reload the script if it was not loaded already.\n                    var exists = false;\n                    $('script').each(function(index, s) {\n                        if ($(s).attr('src') === scriptNode.attr('src')) {\n                            exists = true;\n                        }\n                        return !exists;\n                    });\n                    if (!exists) {\n                        allScript += ' { ';\n                        allScript += ' node = document.createElement(\"script\"); ';\n                        allScript += ' node.type = \"text/javascript\"; ';\n                        allScript += ' node.src = decodeURI(\"' + encodeURI(scriptNode.attr('src')) + '\"); ';\n                        allScript += ' document.getElementsByTagName(\"head\")[0].appendChild(node); ';\n                        allScript += ' } ';\n                    }\n                } else {\n                    allScript += ' ' + scriptNode.text();\n                }\n            }\n        });\n        return allScript;\n    };\n\n    return ModalForm;\n});\n"],"file":"modal_form.min.js"}