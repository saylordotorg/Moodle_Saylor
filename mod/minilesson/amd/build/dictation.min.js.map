{"version":3,"sources":["../src/dictation.js"],"names":["define","$","log","def","polly","debug","playing","clone","extend","init","index","itemdata","quizhelper","prepare_audio","register_events","prepare_html","each","sentences","sentence","fetch_polly_url","prompt","voiceoption","usevoice","then","audiourl","uniqueid","attr","self","theplayer","on","data","correct","trim","toLowerCase","typed","val","html","length","ignorepunctuation","cleanText","removeClass","addClass","css","show","el","play","onended","find","stepdata","total","grade","Math","round","hasgrade","totalitems","correctitems","do_next"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions', 'mod_minilesson/pollyhelper'], function($, log, def, polly) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the quiz stage\n   */\n\n  log.debug('MiniLesson dictation: initialising');\n\n  return {\n\n    playing: false,\n\n      //for making multiple instances\n      clone: function () {\n          return $.extend(true, {}, this);\n      },\n\n\n      init: function(index, itemdata, quizhelper, polly) {\n\n      this.prepare_audio(itemdata, polly);\n      this.register_events(index, itemdata, quizhelper);\n\n    },\n\n    prepare_html: function(itemdata) {\n      //do something\n    },\n\n    prepare_audio: function(itemdata) {\n      $.each(itemdata.sentences, function(index, sentence) {\n        polly.fetch_polly_url(sentence.prompt, itemdata.voiceoption, itemdata.usevoice).then(function(audiourl) {\n          $(\"#\" + itemdata.uniqueid + \"_container .dictationplayer_\" + index + \" .dictationtrigger\").attr(\"data-src\", audiourl);\n        });\n      });\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n\n      var self = this;\n\n      var theplayer = $(\"#\" + itemdata.uniqueid + \"_player\");\n\n      //key events in text box\n      $(\"#\" + itemdata.uniqueid + \"_container .poodlldictationinput input\").on(\"input\", function(e) {\n\n        var index = $(this).data(\"index\");\n        var correct = itemdata.sentences[index].sentence.trim().toLowerCase();\n        var typed = $(this).val().trim().toLowerCase();\n\n        //update char count\n        $(\"#\"+itemdata.uniqueid+\"_container .dictationplayer_\"+index+\"_chars\").html(typed.length);\n        //trim punctuation before comparing, if ignore punctuation is set\n        if(itemdata.ignorepunctuation){\n            correct = quizhelper.cleanText(correct);\n            typed = quizhelper.cleanText(typed);\n        }\n\n        if (correct == typed) {\n          $(\"#\"+itemdata.uniqueid+\"_container .dictate-feedback[data-index='\" + index + \"']\").removeClass(\"fa-times\").addClass(\"fa-check\").css(\"color\",\"green\").show();\n        } else {\n          $(\"#\"+itemdata.uniqueid+\"_container .dictate-feedback[data-index='\" + index + \"']\").removeClass(\"fa-check\").addClass(\"fa-times\").css(\"color\",\"red\").show();\n        }\n\n      });\n\n      //audio play requests\n      $(\"#\" + itemdata.uniqueid + \"_container .dictationtrigger\").on('click', function(e) {\n        if (!self.playing) {\n          var el = this;\n          self.playing = true;\n          theplayer.attr('src', $(this).attr('data-src'));\n          theplayer[0].play();\n          theplayer[0].onended = function() {\n            $(el).find(\".fa\").removeClass(\"fa-spin fa-spinner\").addClass(\"fa-play\");\n            self.playing = false;\n          }\n          $(el).find(\".fa\").removeClass(\"fa-play\").addClass(\"fa-spin fa-spinner\");\n        }\n      });\n\n      //When click next button , report and leave it up to parent to eal with it.\n      $(\"#\" + itemdata.uniqueid + \"_container .minilesson_nextbutton\").on('click', function(e) {\n        var stepdata = {};\n        var correct = $('#' + itemdata.uniqueid + '_container .dictate-feedback.fa-check').length;\n        var total = $('#' + itemdata.uniqueid + '_container .dictate-feedback').length;\n        var grade = Math.round(correct / total, 2) * 100;\n        stepdata.index = index;\n        stepdata.hasgrade = true;\n        stepdata.grade = grade;\n        stepdata.totalitems=total;\n        stepdata.correctitems=correct;\n        stepdata.grade = grade;\n        quizhelper.do_next(stepdata);\n      });\n    }\n  }; //end of return value\n});"],"file":"dictation.min.js"}