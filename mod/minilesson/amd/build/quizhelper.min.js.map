{"version":3,"file":"quizhelper.min.js","sources":["../src/quizhelper.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_minilesson/definitions', 'core/templates', 'core/ajax',\n    'mod_minilesson/dictation', 'mod_minilesson/dictationchat', 'mod_minilesson/multichoice','mod_minilesson/multiaudio',\n        'mod_minilesson/speechcards', 'mod_minilesson/listenrepeat',\n        'mod_minilesson/page','mod_minilesson/smartframe','mod_minilesson/shortanswer'],\n  function($, log, def, templates, Ajax, dictation, dictationchat, multichoice, multiaudio, speechcards, listenrepeat, page, smartframe, shortanswer) {\n    \"use strict\"; // jshint ;_;\n\n    /*\n    This file is to manage the quiz stage\n     */\n\n    log.debug('MiniLesson Quiz helper: initialising');\n\n    return {\n\n      //original spliton_regexp: new RegExp(/([,.!?:;\" ])/, 'g'),\n      spliton_regexp: new RegExp(/([!\"# ¡¿$%&'()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~])/, 'g'),\n      //nopunc is diff to split on because it does not match on spaces\n      nopunc_regexp: new RegExp(/[!\"#¡¿$%&'()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~]/,'g'),\n      nonspaces_regexp: new RegExp(/[^ ]/,'g'),\n      autoplaydelay: 800,\n\n      controls: {},\n      submitbuttonclass: 'mod_minilesson_quizsubmitbutton',\n      stepresults: [],\n\n      init: function(quizcontainer, activitydata, cmid, attemptid,polly) {\n        this.quizdata = activitydata.quizdata;\n        this.region = activitydata.region;\n        this.ttslanguage = activitydata.ttslanguage;\n        this.controls.quizcontainer = quizcontainer;\n        this.attemptid = attemptid;\n        this.courseurl = activitydata.courseurl;\n        this.cmid = cmid;\n        this.reattempturl = activitydata.reattempturl;\n        this.activityurl = activitydata.activityurl;\n        this.backtocourse = activitydata.backtocourse;\n        this.stt_guided = activitydata.stt_guided;\n        this.wwwroot = activitydata.wwwroot;\n        this.useanimatecss  = activitydata.useanimatecss;\n\n        this.prepare_html();\n        this.init_questions(this.quizdata,polly);\n        this.register_events();\n        this.start_quiz();\n      },\n\n      prepare_html: function() {\n\n        // this.controls.quizcontainer.append(submitbutton);\n        this.controls.quizfinished=$(\"#mod_minilesson_quiz_finished\");\n\n      },\n\n      init_questions: function(quizdata, polly) {\n        var dd = this;\n        $.each(quizdata, function(index, item) {\n          switch (item.type) {\n            case def.qtype_dictation:\n              dictation.clone().init(index, item, dd, polly);\n              break;\n            case def.qtype_dictationchat:\n              dictationchat.clone().init(index, item, dd, polly);\n              break;\n            case def.qtype_multichoice:\n              multichoice.clone().init(index, item, dd);\n              break;\n            case def.qtype_multiaudio:\n                multiaudio.clone().init(index, item, dd);\n                break;\n            case def.qtype_speechcards:\n              //speechcards init needs to occur when it is visible. lame.\n              // so we do that in do_next function, down below\n              speechcards.clone().init(index, item, dd);\n              break;\n            case def.qtype_listenrepeat:\n              listenrepeat.clone().init(index, item, dd);\n              break;\n\n             case def.qtype_page:\n                  page.clone().init(index, item, dd);\n                  break;\n\n              case def.qtype_smartframe:\n                  smartframe.clone().init(index, item, dd);\n                  break;\n\n              case def.qtype_shortanswer:\n                  shortanswer.clone().init(index, item, dd);\n                  break;\n          }\n\n        });\n\n        //TTS in question headers\n          $(\"audio.mod_minilesson_itemttsaudio\").each(function(){\n              var that=this;\n              polly.fetch_polly_url($(this).data('text'), $(this).data('ttsoption'), $(this).data('voice')).then(function(audiourl) {\n                  $(that).attr(\"src\", audiourl);\n              });\n          });\n\n      },\n\n      register_events: function() {\n        $('.' + this.submitbuttonclass).on('click', function() {\n          //do something\n        });\n      },\n      render_quiz_progress:function(current,total){\n        var array = [];\n        for(var i=0;i<total;i++){\n          array.push(i);\n        }\n\n        if(total<6) {\n            var slice = array.slice(0, 5);\n            var linestyles = \"width: \" + (100 - 100 / slice.length) + \"%; margin-left: auto; margin-right: auto\";\n            var html = \"<div class='minilesson_quiz_progress_line' style='\" + linestyles + \"'></div>\";\n\n            slice.forEach(function (i) {\n                html += \"<div class='minilesson_quiz_progress_item \" + (i === current ? 'minilesson_quiz_progress_item_current' : '') + \" \" + (i < current ? 'minilesson_quiz_progress_item_completed' : '') + \"'>\" + (i + 1) + \"</div>\";\n            });\n        }else {\n             if(current > total-6){\n                 var slice = array.slice(total-5, total-1);\n             }else{\n                 var slice = array.slice(current, current + 4);\n             }\n\n              //if first item is visible then no line trailing left of item 1\n              if(current==0){\n                  var linestyles = \"width: 80%; margin-left: auto; margin-right: auto\";\n              }else {\n                  var linestyles = \"width: \" + (100 - 100 / (2 *slice.length)) + \"%; margin-left: 0\";\n              }\n            var html = \"<div class='minilesson_quiz_progress_line' style='\" + linestyles + \"'></div>\";\n              slice.forEach(function (i) {\n                  html += \"<div class='minilesson_quiz_progress_item \" + (i === current ? 'minilesson_quiz_progress_item_current' : '') + \" \" + (i < current ? 'minilesson_quiz_progress_item_completed' : '') + \"'>\" + (i + 1) + \"</div>\";\n              });\n              //end marker\n            html += \"<div class='minilesson_quiz_progress_finalitem'>\" + (total) + \"</div>\";\n          }\n\n        html+=\"\";\n        $(\".minilesson_quiz_progress\").html(html);\n\n      },\n\n      do_next: function(stepdata){\n        var dd = this;\n        //get current question\n        var currentquizdataindex =   stepdata.index;\n        var currentitem = this.quizdata[currentquizdataindex];\n\n        //in preview mode do no do_next\n        if(currentitem.preview===true){return;}\n\n        //post grade\n         // log.debug(\"reporting step grade\");\n        dd.report_step_grade(stepdata);\n         // log.debug(\"reported step grade\");\n        //hide current question\n        var theoldquestion = $(\"#\" + currentitem.uniqueid + \"_container\");\n        theoldquestion.hide();\n        //show next question or End Screen\n        if (dd.quizdata.length > currentquizdataindex+1) {\n          var nextindex = currentquizdataindex+ 1;\n          var nextitem = this.quizdata[nextindex];\n            //show the question\n            $(\"#\" + nextitem.uniqueid + \"_container\").show();\n          //any per question type init that needs to occur can go here\n          switch (nextitem.type) {\n              case def.qtype_speechcards:\n                  //speechcards.init(nextindex, nextitem, dd);\n                  break;\n              case def.qtype_dictation:\n              case def.qtype_dictationchat:\n              case def.qtype_multichoice:\n              case def.qtype_multiaudio:\n              case def.qtype_listenrepeat:\n              case def.qtype_smartframe:\n              case def.qtype_shortanswer:\n              default:\n          }//end of nextitem switch\n\n            //autoplay audio if we need to\n            var ttsquestionplayer = $(\"#\" + nextitem.uniqueid + \"_container audio.mod_minilesson_itemttsaudio\");\n            if(ttsquestionplayer.data('autoplay')==\"1\"){\n                var that=this;\n                setTimeout(function() {ttsquestionplayer[0].play();}, that.autoplaydelay);\n            }\n\n        } else {\n          //just reload and re-fetch all the data to display\n            $(\".minilesson_nextbutton\").prop(\"disabled\", true);\n            setTimeout(function () {\n               // log.debug(\"forwarding to finished page\");\n                window.location.href=dd.activityurl;\n            }, 1000);\n\n          return;\n\n          //no longer do this\n            /*\n          var results = dd.stepresults.filter(function(e){return e.hasgrade;});\n          var correctitems = 0;\n          var totalitems = 0;\n          results.forEach(function(result,i){\n            result.index=i+1;\n            result.title=dd.quizdata[i].title;\n            correctitems += result.correctitems;\n            totalitems += result.totalitems;\n          });\n          var totalpercent = Math.round((correctitems/totalitems)*100);\n          console.log(results,correctitems,totalitems,totalpercent);\n          var finishedparams ={results:results,total:totalpercent, courseurl: this.courseurl};\n          if(this.reattempturl!=''){finishedparams.reattempturl = this.reattempturl;}\n          if(this.backtocourse!=''){finishedparams.backtocourse = true;}\n          templates.render('mod_minilesson/quizfinished',finishedparams).then(\n              function(html,js){\n                  dd.controls.quizfinished.html(html);\n                  dd.controls.quizfinished.show();\n                  templates.runTemplateJS(js);\n              }\n          );\n          */\n\n        }//end of if has more questions\n\n        this.render_quiz_progress(stepdata.index+1,this.quizdata.length);\n\n          //we want to destroy the old question in the DOM also because iframe/media content might be playing\n          theoldquestion.remove();\n        \n      },\n\n      report_step_grade: function(stepdata) {\n        var dd = this;\n\n        //store results locally\n        this.stepresults.push(stepdata);\n\n        //push results to server\n        var ret = Ajax.call([{\n          methodname: 'mod_minilesson_report_step_grade',\n          args: {\n            cmid: dd.cmid,\n            step: JSON.stringify(stepdata),\n          },\n          async: false\n        }])[0];\n        log.debug(\"report_step_grade success: \" + ret);\n\n      },\n\n\n\n      start_quiz: function() {\n        $(\"#\" + this.quizdata[0].uniqueid + \"_container\").show();\n          //autoplay audio if we need to\n          var ttsquestionplayer = $(\"#\" + this.quizdata[0].uniqueid + \"_container audio.mod_minilesson_itemttsaudio\");\n          if(ttsquestionplayer.data('autoplay')==\"1\"){\n              var that=this;\n              setTimeout(function() {ttsquestionplayer[0].play();}, that.autoplaydelay);\n          }\n        this.render_quiz_progress(0,this.quizdata.length);\n      },\n\n      //this function is overridden by the calling class\n      onSubmit: function() {\n        alert('quiz submitted. Override this');\n      },\n\n        mobile_user: function() {\n\n            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n\n        chrome_user: function(){\n            if(/Chrome/i.test(navigator.userAgent)) {\n                return true;\n            }else{\n                return false;\n            }\n        },\n\n        //this will always be true these days\n        use_ttrecorder: function(){\n            return true;\n        },\n        is_stt_guided: function(){\n          return this.stt_guided;\n        },\n\n        //text comparison functions follow===============\n\n        similarity: function(s1, s2) {\n            //we remove spaces because JP transcript and passage might be different. And who cares about spaces anyway?\n            s1 = s1.replace(/\\s+/g, '');\n            s2 = s2.replace(/\\s+/g, '');\n\n            var longer = s1;\n            var shorter = s2;\n            if (s1.length < s2.length) {\n                longer = s2;\n                shorter = s1;\n            }\n            var longerLength = longer.length;\n            if (longerLength === 0) {\n                return 100;\n            }\n            return 100 * ((longerLength - this.editDistance(longer, shorter)) / parseFloat(longerLength));\n        },\n        editDistance: function(s1, s2) {\n            s1 = s1.toLowerCase();\n            s2 = s2.toLowerCase();\n\n            var costs = [];\n            for (var i = 0; i <= s1.length; i++) {\n                var lastValue = i;\n                for (var j = 0; j <= s2.length; j++) {\n                    if (i === 0)\n                        costs[j] = j;\n                    else {\n                        if (j > 0) {\n                            var newValue = costs[j - 1];\n                            if (s1.charAt(i - 1) !== s2.charAt(j - 1))\n                                newValue = Math.min(Math.min(newValue, lastValue),\n                                    costs[j]) + 1;\n                            costs[j - 1] = lastValue;\n                            lastValue = newValue;\n                        }\n                    }\n                }\n                if (i > 0)\n                    costs[s2.length] = lastValue;\n            }\n            return costs[s2.length];\n        },\n\n        cleanText: function(text) {\n            var lowertext = text.toLowerCase();\n            var punctuationless = lowertext.replace(this.nopunc_regexp,\"\");\n            var ret = punctuationless.replace(/\\s+/g, \" \").trim();\n            return ret;\n        },\n\n        //this will return the promise, the result of which is an integer 100 being perfect match, 0 being no match\n        checkByPhonetic: function(passage, transcript, passagephonetic, language) {\n            return Ajax.call([{\n                methodname: 'mod_minilesson_check_by_phonetic',\n                args: {\n                    'spoken': transcript,\n                    'correct': passage,\n                    'language': language,\n                    'phonetic': passagephonetic,\n                    'region': this.region,\n                    'cmid': this.cmid\n                },\n                async: false\n            }])[0];\n\n        },\n\n       comparePassageToTranscript: function (passage,transcript,passagephonetic, language){\n          return Ajax.call([{\n               methodname: 'mod_minilesson_compare_passage_to_transcript',\n               args: {\n                   passage: passage,\n                   transcript: transcript,\n                   alternatives: '',\n                   phonetic: passagephonetic,\n                   language: language,\n                   region: this.region,\n                   cmid: this.cmid\n               },\n              async: false\n           }])[0];\n       }\n    }; //end of return value\n  });\n"],"names":["define","$","log","def","templates","Ajax","dictation","dictationchat","multichoice","multiaudio","speechcards","listenrepeat","page","smartframe","shortanswer","debug","spliton_regexp","RegExp","nopunc_regexp","nonspaces_regexp","autoplaydelay","controls","submitbuttonclass","stepresults","init","quizcontainer","activitydata","cmid","attemptid","polly","quizdata","region","ttslanguage","courseurl","reattempturl","activityurl","backtocourse","stt_guided","wwwroot","useanimatecss","prepare_html","init_questions","this","register_events","start_quiz","quizfinished","dd","each","index","item","type","qtype_dictation","clone","qtype_dictationchat","qtype_multichoice","qtype_multiaudio","qtype_speechcards","qtype_listenrepeat","qtype_page","qtype_smartframe","qtype_shortanswer","that","fetch_polly_url","data","then","audiourl","attr","on","render_quiz_progress","current","total","array","i","push","html","linestyles","slice","length","forEach","do_next","stepdata","currentquizdataindex","currentitem","preview","report_step_grade","theoldquestion","uniqueid","hide","prop","setTimeout","window","location","href","nextindex","nextitem","show","ttsquestionplayer","play","remove","ret","call","methodname","args","step","JSON","stringify","async","onSubmit","alert","mobile_user","test","navigator","userAgent","chrome_user","use_ttrecorder","is_stt_guided","similarity","s1","s2","longer","replace","shorter","longerLength","editDistance","parseFloat","toLowerCase","costs","lastValue","j","newValue","charAt","Math","min","cleanText","text","trim","checkByPhonetic","passage","transcript","passagephonetic","language","comparePassageToTranscript","alternatives","phonetic"],"mappings":"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"}