{"version":3,"sources":["../src/ttrecorder.js"],"names":["define","$","log","notification","audioHelper","browserRec","debug","waveHeight","audio","stream","blob","dataURI","start","end","isRecording","isRecognizing","transcript","submitting","owner","controls","uniqueid","audio_updated","maxTime","passagehash","region","asrurl","lang","browserrec","usebrowserrec","currentTime","stt_guided","clone","extend","init","opts","that","callback","prepare_html","recordercontainer","show","register_events","on_error","error","name","alert","on_stopped","clearInterval","interval","newaudio","URL","createObjectURL","Date","length","Math","round","update_audio","deepSpeech2","response","data","result","gotRecognition","trim","on_gotstream","setInterval","audiohelper","stop","will_work_ok","onerror","onend","onstart","onfinalspeechcapture","speechtext","onError","onStop","onStream","recorderbutton","newprops","val","theprop","click","toggleRecording","show_recorder_pointer","css","html","recordBtnContent","type","capturedspeech","cleanWord","word","replace","toLowerCase","bodyFormData","FormData","blobname","floor","random","append","M","cfg","wwwroot","oReq","XMLHttpRequest","open","onUploadProgress","onload","status","JSON","parse","console","send","err"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log','core/notification', 'mod_minilesson/ttaudiohelper','mod_minilesson/ttbrowserrec' ],\n    function ($, log, notification, audioHelper, browserRec) {\n    \"use strict\"; // jshint ;_;\n    /*\n    *  The TT recorder\n     */\n\n    log.debug('TT Recorder: initialising');\n\n    return {\n        waveHeight: 75,\n        audio: {\n            stream: null,\n            blob: null,\n            dataURI: null,\n            start: null,\n            end: null,\n            isRecording: false,\n            isRecognizing: false,\n            transcript: null\n        },\n        submitting: false,\n        owner: '',\n        controls: {},\n        uniqueid: null,\n        audio_updated: null,\n        maxTime: 15000,\n        passagehash: null,\n        region: null,\n        asrurl: null,\n        lang: null,\n        browserrec: null,\n        usebrowserrec: false,\n        currentTime: 0,\n        stt_guided: false,\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(opts){\n\n            var that = this;\n\n            this.uniqueid=opts['uniqueid'];\n            this.callback=opts['callback'];\n            this.stt_guided = opts['stt_guided'] ? opts['stt_guided'] : false;\n            this.prepare_html();\n            this.controls.recordercontainer.show();\n            this.register_events();\n\n\n            //callbacks\n            var on_error = function(error) {\n                switch (error.name) {\n                    case 'PermissionDeniedError':\n                    case 'NotAllowedError':\n                        notification.alert(\"Error\",'Please allow access to your microphone!', \"OK\");\n                        break;\n                    case 'DevicesNotFoundError':\n                    case 'NotFoundError':\n                        notification.alert(\"Error\",'No microphone detected!', \"OK\");\n                        break;\n                    default:\n                        //other errors, like from Edge can fire repeatedly so a notification is not a good idea\n                        //notification.alert(\"Error\", error.name, \"OK\");\n                        log.debug(\"Error\", error.name);\n                }\n            };\n\n            var on_stopped = function(blob) {\n                clearInterval(that.interval);\n\n                //if ds recc\n                var newaudio = {\n                    blob: blob,\n                    dataURI: URL.createObjectURL(blob),\n                    end: new Date(),\n                    isRecording: false,\n                    length: Math.round((that.audio.end - that.audio.start) / 1000),\n                };\n                that.update_audio(newaudio);\n\n                that.deepSpeech2(that.audio.blob, function(response){\n                    log.debug(response);\n                    that.update_audio('isRecognizing',false);\n                    if(response.data.result===\"success\" && response.data.transcript){\n                        that.gotRecognition(response.data.transcript.trim());\n                    } else {\n                        notification.alert(\"Information\",\"We could not recognize your speech.\", \"OK\");\n                    }\n                });\n\n            };\n\n            //set up events\n            var on_gotstream=  function(stream) {\n\n                var newaudio={stream: stream, isRecording: true};\n                that.update_audio(newaudio);\n                that.currentTime = 0;\n\n                that.interval = setInterval(function() {\n                    if (that.currentTime < that.maxTime) {\n                        that.currentTime += 10;\n                    } else {\n                        that.update_audio('isRecognizing',true);\n                        // vm.isRecognizing = true;\n                        that.audiohelper.stop();\n                    }\n                }, 10);\n\n            };\n\n\n\n            //If browser rec (Chrome Speech Rec) (and ds is optiona)\n            if(browserRec.will_work_ok() && ! this.stt_guided){\n                //Init browserrec\n                log.debug(\"using browser rec\");\n                this.browserrec = browserRec.clone();\n                this.browserrec.init(this.lang,this.waveHeight,this.uniqueid);\n                this.usebrowserrec=true;\n\n                //set up events\n                that.browserrec.onerror = on_error;\n                that.browserrec.onend = function(){\n                        //do something here\n                };\n                that.browserrec.onstart = function(){\n                    //do something here\n                };\n                that.browserrec.onfinalspeechcapture=function(speechtext){\n                    that.gotRecognition(speechtext);\n                    that.update_audio('isRecording',false);\n                    that.update_audio('isRecognizing',false);\n                };\n\n            //If DS rec\n            }else {\n                //set up wav for ds rec\n                log.debug(\"using ds rec\");\n                this.audiohelper =  audioHelper.clone();\n                this.audiohelper.init(this.waveHeight,this.uniqueid,this);\n\n                that.audiohelper.onError = on_error;\n                that.audiohelper.onStop = on_stopped;\n                that.audiohelper.onStream = on_gotstream;\n\n            }//end of setting up recorders\n        },\n\n        prepare_html: function(){\n            this.controls.recordercontainer =$('#ttrec_container_' + this.uniqueid);\n            this.controls.recorderbutton = $('#' + this.uniqueid + '_recorderdiv');\n            this.passagehash = this.controls.recorderbutton.data('passagehash');\n            this.region=this.controls.recorderbutton.data('region');\n            this.lang=this.controls.recorderbutton.data('lang');\n            this.asrurl=this.controls.recorderbutton.data('asrurl');\n            this.maxTime=this.controls.recorderbutton.data('maxtime');\n            this.waveHeight=this.controls.recorderbutton.data('waveheight');\n        },\n\n        update_audio: function(newprops,val){\n            if (typeof newprops === 'string') {\n                log.debug('update_audio:' + newprops + ':' + val);\n                if (this.audio[newprops] !== val) {\n                    this.audio[newprops] = val;\n                    this.audio_updated();\n                }\n            }else{\n                for (var theprop in newprops) {\n                    this.audio[theprop] = newprops[theprop];\n                    log.debug('update_audio:' + theprop + ':' + newprops[theprop]);\n                }\n                this.audio_updated();\n            }\n        },\n\n        register_events: function(){\n            var that = this;\n            this.controls.recordercontainer.click(function(){\n                that.toggleRecording();\n            });\n\n            this.audio_updated=function() {\n                //pointer\n                if (that.audio.isRecognizing) {\n                    that.show_recorder_pointer('none');\n                } else {\n                    that.show_recorder_pointer('auto');\n                }\n\n                if(that.audio.isRecognizing || that.audio.isRecording ) {\n                    this.controls.recorderbutton.css('background', '#e52');\n                }else{\n                    this.controls.recorderbutton.css('background', 'green');\n                }\n\n                //div content WHEN?\n                that.controls.recorderbutton.html(that.recordBtnContent());\n            }\n\n        },\n\n        show_recorder_pointer: function(show){\n            if(show) {\n                this.controls.recorderbutton.css('pointer-events', 'none');\n            }else{\n                this.controls.recorderbutton.css('pointer-events', 'auto');\n            }\n\n        },\n\n\n        gotRecognition:function(transcript){\n            log.debug('transcript:' + transcript);\n            var message={};\n            message.type='speech';\n            message.capturedspeech = transcript;\n           //POINT\n            this.callback(message);\n        },\n\n        cleanWord: function(word) {\n            return word.replace(/['!\"#$%&\\\\'()\\*+,\\-\\.\\/:;<=>?@\\[\\\\\\]\\^_`{|}~']/g,\"\").toLowerCase();\n        },\n\n        recordBtnContent: function() {\n\n            if(!this.audio.isRecognizing){\n\n                if (this.audio.isRecording) {\n                    return '<i class=\"fa fa-stop\">';\n                } else {\n                    return '<i class=\"fa fa-microphone\">';\n                }\n\n            } else {\n                return '<i class=\"fa fa-spinner fa-spin\">';\n            }\n        },\n        toggleRecording: function() {\n            var that =this;\n\n            //If we are current recording\n            if (this.audio.isRecording) {\n                //If using Browser Rec (chrome speech)\n                if(this.usebrowserrec){\n                    clearInterval(that.interval);\n                    that.update_audio('isRecording',false);\n                    that.update_audio('isRecognizing',true);\n                    this.browserrec.stop();\n\n                //If using DS rec\n                }else{\n                    this.update_audio('isRecognizing',true);\n                    this.audiohelper.stop();\n                }\n\n             //If we are NOT currently recording\n            } else {\n\n                //If using Browser Rec (chrome speech)\n                if(this.usebrowserrec){\n                    this.update_audio('isRecording',true);\n                    this.browserrec.start();\n                    that.currentTime = 0;\n                    this.interval = setInterval(function() {\n                        if (that.currentTime < that.maxTime) {\n                            that.currentTime += 10;\n                        } else {\n                            that.update_audio('isRecording',false);\n                            that.update_audio('isRecognizing',true);\n                            clearInterval(that.interval);\n                            that.browserrec.stop();\n                        }\n                    }, 10);\n\n                //If using DS Rec\n                }else {\n                    var newaudio = {\n                        stream: null,\n                        blob: null,\n                        dataURI: null,\n                        start: new Date(),\n                        end: null,\n                        isRecording: false,\n                        isRecognizing:false,\n                        transcript: null\n                    };\n                    this.update_audio(newaudio);\n                    this.audiohelper.start();\n                }\n            }\n        },\n\n\n        deepSpeech2: function(blob, callback) {\n            var bodyFormData = new FormData();\n            var blobname = this.uniqueid + Math.floor(Math.random() * 100) +  '.wav';\n            bodyFormData.append('audioFile', blob, blobname);\n            bodyFormData.append('scorer', this.passagehash);\n            if(this.stt_guided) {\n                bodyFormData.append('strictmode', 'false');\n            }else{\n                bodyFormData.append('strictmode', 'true');\n            }\n            bodyFormData.append('lang', this.lang);\n            bodyFormData.append('wwwroot', M.cfg.wwwroot);\n\n            var oReq = new XMLHttpRequest();\n            oReq.open(\"POST\", this.asrurl, true);\n            oReq.onUploadProgress= function(progressEvent) {};\n            oReq.onload = function(oEvent) {\n                if (oReq.status === 200) {\n                    callback(JSON.parse(oReq.response));\n                } else {\n                    callback({data: {result: \"error\"}});\n                    console.error(oReq.error);\n                }\n            };\n            try {\n                oReq.send(bodyFormData);\n            }catch(err){\n                callback({data: {result: \"error\"}});\n                console.error(err);\n            }\n        },\n\n    };//end of return value\n\n});"],"file":"ttrecorder.min.js"}