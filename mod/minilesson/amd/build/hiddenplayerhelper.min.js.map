{"version":3,"file":"hiddenplayerhelper.min.js","sources":["../src/hiddenplayerhelper.js"],"sourcesContent":["define(['jquery','core/log','mod_minilesson/definitions'], function($,log,def) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('MiniLesson hidden player helper: initialising');\n\n    return {\n\n        controls: {},\n        hiddenplayer: def.hiddenplayer,\n        hiddenplayerbutton: def.hiddenplayerbutton,\n        hiddenplayerbuttonactive: def.hiddenplayerbuttonactive,\n        hiddenplayerbuttonpaused: def.hiddenplayerbuttonpaused,\n        hiddenplayerbuttonplaying: def.hiddenplayerbuttonpaused,\n\n        init: function (opts) {\n            this.register_controls();\n            this.register_events();\n        },\n\n        register_controls: function(){\n            this.controls.hiddenplayer = $('.' + this.hiddenplayer);\n            this.controls.hiddenplayerbutton = $('.' + this.hiddenplayerbutton);\n        },\n\n        register_events: function(){\n            var that = this;\n            var audioplayer = this.controls.hiddenplayer;\n            //handle the button click\n            this.controls.hiddenplayerbutton.click(function(e){\n                var audiosrc = $(this).attr('data-audiosource');\n                if (audiosrc == audioplayer.attr('src') && !(audioplayer.prop('paused'))) {\n                    that.dohiddenstop();\n                } else {\n                    that.dohiddenplay(audiosrc);\n                }\n            });\n\n        },\n\n\n        dohiddenplay: function (audiosrc) {\n            var m = this;\n            var audioplayer = m.controls.hiddenplayer;\n            audioplayer.attr('src', audiosrc);\n            audioplayer[0].pause();\n            audioplayer[0].load();\n            var pp = audioplayer[0].play();\n            if (pp !== undefined) {\n                pp.then(function() {\n                    // Yay we are playing\n                }).catch(function(error) {\n                    // somethings up ... but we can ignore it\n                });\n            }\n            m.dobuttonicons();\n        },\n        dohiddenstop: function () {\n            var m = this;\n            var audioplayer =  m.controls.hiddenplayer;\n            audioplayer[0].pause();\n            m.dobuttonicons();\n        },\n\n        dobuttonicons: function (theaudiosrc) {\n            var m = this;\n            var audioplayer = m.controls.hiddenplayer;\n            if (!theaudiosrc) {\n                theaudiosrc = audioplayer.attr('src');\n            }\n            m.controls.hiddenplayerbutton.each(function (index) {\n                var audiosrc = $(this).attr('data-audiosource');\n                if (audiosrc == theaudiosrc) {\n                    $(this).addClass(m.activebutton);\n                    if (audioplayer.prop('paused')) {\n                        $(this).removeClass(m.hiddenplayerbuttonplaying);\n                        $(this).addClass(m.hiddenplayerbuttonpaused);\n                        //for now we make it look like no button is selected\n                        //later we can implement better controls\n                        $(this).removeClass(m.hiddenplayerbuttonactive);\n                    } else {\n                        $(this).removeClass(m.hiddenplayerbuttonpaused);\n                        $(this).addClass(m.hiddenplayerbuttonplaying);\n                    }\n                } else {\n                    $(this).removeClass(m.hiddenplayerbuttonactive);\n                    $(this).removeClass(m.hiddenplayerbuttonplaying);\n                    $(this).removeClass(m.hiddenplayerbuttonpaused);\n                }\n            });\n        }\n    };//end of return object\n\n});"],"names":["define","$","log","def","debug","controls","hiddenplayer","hiddenplayerbutton","hiddenplayerbuttonactive","hiddenplayerbuttonpaused","hiddenplayerbuttonplaying","init","opts","register_controls","register_events","this","that","audioplayer","click","e","audiosrc","attr","prop","dohiddenplay","dohiddenstop","pause","load","pp","play","undefined","then","catch","error","dobuttonicons","theaudiosrc","m","each","index","addClass","activebutton","removeClass"],"mappings":"AAAAA,2CAAO,CAAC,SAAS,WAAW,+BAA+B,SAASC,EAAEC,IAAIC,YAGtED,IAAIE,MAAM,iDAEH,CAEHC,SAAU,GACVC,aAAcH,IAAIG,aAClBC,mBAAoBJ,IAAII,mBACxBC,yBAA0BL,IAAIK,yBAC9BC,yBAA0BN,IAAIM,yBAC9BC,0BAA2BP,IAAIM,yBAE/BE,KAAM,SAAUC,WACPC,yBACAC,mBAGTD,kBAAmB,gBACVR,SAASC,aAAeL,EAAE,IAAMc,KAAKT,mBACrCD,SAASE,mBAAqBN,EAAE,IAAMc,KAAKR,qBAGpDO,gBAAiB,eACTE,KAAOD,KACPE,YAAcF,KAAKV,SAASC,kBAE3BD,SAASE,mBAAmBW,OAAM,SAASC,OACxCC,SAAWnB,EAAEc,MAAMM,KAAK,oBACxBD,UAAYH,YAAYI,KAAK,QAAYJ,YAAYK,KAAK,UAG1DN,KAAKO,aAAaH,UAFlBJ,KAAKQ,mBASjBD,aAAc,SAAUH,cAEhBH,YADIF,KACYV,SAASC,aAC7BW,YAAYI,KAAK,MAAOD,UACxBH,YAAY,GAAGQ,QACfR,YAAY,GAAGS,WACXC,GAAKV,YAAY,GAAGW,YACbC,IAAPF,IACAA,GAAGG,MAAK,eAELC,OAAM,SAASC,WATdjB,KAaNkB,iBAENT,aAAc,WACFT,KACaV,SAASC,aAClB,GAAGmB,QAFPV,KAGNkB,iBAGNA,cAAe,SAAUC,iBACjBC,EAAIpB,KACJE,YAAckB,EAAE9B,SAASC,aACxB4B,cACDA,YAAcjB,YAAYI,KAAK,QAEnCc,EAAE9B,SAASE,mBAAmB6B,MAAK,SAAUC,OAC1BpC,EAAEc,MAAMM,KAAK,qBACZa,aACZjC,EAAEc,MAAMuB,SAASH,EAAEI,cACftB,YAAYK,KAAK,WACjBrB,EAAEc,MAAMyB,YAAYL,EAAEzB,2BACtBT,EAAEc,MAAMuB,SAASH,EAAE1B,0BAGnBR,EAAEc,MAAMyB,YAAYL,EAAE3B,4BAEtBP,EAAEc,MAAMyB,YAAYL,EAAE1B,0BACtBR,EAAEc,MAAMuB,SAASH,EAAEzB,8BAGvBT,EAAEc,MAAMyB,YAAYL,EAAE3B,0BACtBP,EAAEc,MAAMyB,YAAYL,EAAEzB,2BACtBT,EAAEc,MAAMyB,YAAYL,EAAE1B"}