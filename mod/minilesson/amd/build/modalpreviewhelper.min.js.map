{"version":3,"file":"modalpreviewhelper.min.js","sources":["../src/modalpreviewhelper.js"],"sourcesContent":["/**\n * Add a modal to manage question adding and editing to the page.\n *\n * @module     mod_minilesson/modalpreviewhelper\n * @class      modalpreviewhelper\n * @package    mod_minilesson\n * @copyright  2020 Justin Hunt <poodllsupport@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/log','core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n    function($, log,Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n        /**\n         * Constructor\n         *\n         * @param {String} selector used to find triggers for the new group modal.\n         * @param {int} contextid\n         * @param {String} formname The key/name of the form for this instance\n         * @param {Object} callback The function to call after successful deletion (for UI updates)\n         *\n         * Each call to init gets it's own instance of this class.\n         */\n        var TheForm = function(selector, contextid, callback) {\n            this.contextid = contextid;\n            this.callback = callback;\n\n            //this will init on page load (good if just one or two items)\n            //this.init(selector);\n\n            //this will init on item click (better for lots of items)\n            this.preinit(selector);\n        };\n\n        /**\n         * @var {Modal} modal\n         * @private\n         */\n        TheForm.prototype.modal = null;\n\n        /**\n         * @var {int} contextid\n         * @private\n         */\n        TheForm.prototype.contextid = -1;\n\n        /**\n         * @var {int} itemid\n         * @private\n         */\n        TheForm.prototype.itemid = -1;\n\n\n\n        /**\n         * Initialise the class.\n         *\n         * @param {String} selector used to find triggers for the new group modal.\n         * @private\n         * @return {Promise}\n         */\n        TheForm.prototype.preinit = function(selector) {\n            var triggers = $(selector);\n            var dd=this;\n\n            $('body').on('click',selector,function(e) {\n                //prevent it doing a real click (which will do the non ajax version of a click)\n                e.preventDefault();\n\n                dd.itemid=$(this).data('id');\n\n                ModalFactory.create({\n                    type: ModalFactory.types.CANCEL,\n                 //   title: dd.questiontitle,\n                    body: dd.getBody({})\n                }).then(function (modal) {\n                    // Keep a reference to the modal.\n                    dd.modal = modal;\n                    //Str.get_string(dd.formname , 'mod_minilesson').then(function(title){dd.formtitle=title;dd.modal.setTitle(dd.formtitle);});\n\n\n                    //questions are big, we want a big modal.\n                    dd.modal.setLarge();\n\n\n                    // We want to call our callback to do any housekeeping after the form is closed\n                    dd.modal.getRoot().on(ModalEvents.hidden, function() {\n                        dd.callback();\n                    }.bind(dd));\n\n                    // We want to hide the next button every time it is opened.\n                    dd.modal.getRoot().on(ModalEvents.shown, function () {\n                        //hide next button and progress bar\n                        dd.modal.getRoot().append('<style>.minilesson_nextbutton { display: none ! important; }</style>');\n                        dd.modal.getRoot().append('<style>.minilesson_quiz_progress { display: none ! important; }</style>');\n                    });\n\n\n                    dd.modal.show();\n                    return dd.modal;\n                });\n\n            });//end of on click\n\n        };\n\n\n        /**\n         * @method getBody\n         * @private\n         * @return {Promise}\n         */\n        TheForm.prototype.getBody = function() {\n\n            // Get the content of the modal.\n            var params = {itemid: this.itemid};\n            return Fragment.loadFragment('mod_minilesson', 'preview', this.contextid, params);\n\n        };\n\n\n\n\n\n        return /** @alias module:mod_minilesson/modalpreviewhelper */ {\n            // Public variables and functions.\n            /**\n             * Attach event listeners to initialise this module.\n             *\n             * @method init\n             * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n             * @param {int} contextid The contextid for the course.\n             * @param {function} callback The callback.\n             * @return {Promise}\n             */\n            init: function(selector, contextid, callback) {\n                return new TheForm(selector, contextid, callback);\n            }\n        };\n    });"],"names":["define","$","log","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","TheForm","selector","contextid","callback","preinit","prototype","modal","itemid","dd","this","on","e","preventDefault","data","create","type","types","CANCEL","body","getBody","then","setLarge","getRoot","hidden","bind","shown","append","show","params","loadFragment","init"],"mappings":";;;;;;;;;AASAA,2CAAO,CAAC,SAAU,WAAW,WAAY,qBAAsB,oBAAqB,gBAAiB,YAAa,aAC9G,SAASC,EAAGC,IAAIC,IAAKC,aAAcC,YAAaC,SAAUC,KAAMC,OAYxDC,QAAU,SAASC,SAAUC,UAAWC,eACnCD,UAAYA,eACZC,SAAWA,cAMXC,QAAQH,kBAOjBD,QAAQK,UAAUC,MAAQ,KAM1BN,QAAQK,UAAUH,WAAa,EAM/BF,QAAQK,UAAUE,QAAU,EAW5BP,QAAQK,UAAUD,QAAU,SAASH,UAClBT,EAAES,cACbO,GAAGC,KAEPjB,EAAE,QAAQkB,GAAG,QAAQT,UAAS,SAASU,GAEnCA,EAAEC,iBAEFJ,GAAGD,OAAOf,EAAEiB,MAAMI,KAAK,MAEvBlB,aAAamB,OAAO,CAChBC,KAAMpB,aAAaqB,MAAMC,OAEzBC,KAAMV,GAAGW,QAAQ,MAClBC,MAAK,SAAUd,cAEdE,GAAGF,MAAQA,MAKXE,GAAGF,MAAMe,WAITb,GAAGF,MAAMgB,UAAUZ,GAAGd,YAAY2B,OAAQ,WACtCf,GAAGL,YACLqB,KAAKhB,KAGPA,GAAGF,MAAMgB,UAAUZ,GAAGd,YAAY6B,OAAO,WAErCjB,GAAGF,MAAMgB,UAAUI,OAAO,wEAC1BlB,GAAGF,MAAMgB,UAAUI,OAAO,8EAI9BlB,GAAGF,MAAMqB,OACFnB,GAAGF,aAatBN,QAAQK,UAAUc,QAAU,eAGpBS,OAAS,CAACrB,OAAQE,KAAKF,eACpBV,SAASgC,aAAa,iBAAkB,UAAWpB,KAAKP,UAAW0B,SAQhB,CAW1DE,KAAM,SAAS7B,SAAUC,UAAWC,iBACzB,IAAIH,QAAQC,SAAUC,UAAWC"}