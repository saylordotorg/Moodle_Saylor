{"version":3,"file":"moveitemhelper.min.js","sources":["../src/moveitemhelper.js"],"sourcesContent":["/**\n * Add a modal to manage question adding and editing to the page.\n *\n * @module     mod_minilesson/moveitemhelper\n * @class      moveitemhelper\n * @package    mod_minilesson\n * @copyright  2020 Justin Hunt <poodllsupport@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/log','core/str', 'core/ajax'],\n    function($, log,Str, Ajax) {\n\n        /**\n         * Constructor\n         *\n         * @param {String} selector used to find triggers for the new group modal.\n         * @param {int} contextid\n         * @param {String} formname The key/name of the form for this instance\n         * @param {Object} callback The function to call after successful deletion (for UI updates)\n         *\n         * Each call to init gets it's own instance of this class.\n         */\n        var TheForm = function(selector, contextid, callback) {\n            this.contextid = contextid;\n            this.callback = callback;\n\n            //this will init on item click (better for lots of items)\n            this.init(selector);\n        };\n\n        /**\n         * @var {int} contextid\n         * @private\n         */\n        TheForm.prototype.contextid = -1;\n\n        /**\n         * @var {int} itemid\n         * @private\n         */\n        TheForm.prototype.itemid = -1;\n\n        TheForm.prototype.direction = 'none';\n\n\n\n        /**\n         * Initialise the class.\n         *\n         * @param {String} selector used to find triggers for the new group modal.\n         * @private\n         * @return {Promise}\n         */\n        TheForm.prototype.init = function(selector) {\n\n            var dd=this;\n\n            $('body').on('click',selector,function(e) {\n                //prevent it doing a real click (which will do the non ajax version of a click)\n                e.preventDefault();\n                dd.direction=dd.direction=$(this).data('direction');\n                dd.itemid=$(this).data('id');\n\n                // Now we can continue...\n                Ajax.call([{\n                    methodname: 'mod_minilesson_move_item',\n                    args: {contextid: dd.contextid, itemid: dd.itemid, direction: dd.direction},\n                    done: dd.callback(dd.itemid,dd.direction)\n                }]);\n\n\n            });//end of on click\n\n        };\n\n        return /** @alias module:mod_minilesson/modalformhelper */ {\n            // Public variables and functions.\n            /**\n             * Attach event listeners to initialise this module.\n             *\n             * @method init\n             * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n             * @param {int} contextid The contextid for the course.\n             * @param {function} callback The callback.\n             * @return {Promise}\n             */\n            init: function(selector, contextid, callback) {\n                return new TheForm(selector, contextid, callback);\n            }\n        };\n    });"],"names":["define","$","log","Str","Ajax","TheForm","selector","contextid","callback","init","prototype","itemid","direction","dd","this","on","e","preventDefault","data","call","methodname","args","done"],"mappings":";;;;;;;;;AASAA,uCAAO,CAAC,SAAU,WAAW,WAAY,cACrC,SAASC,EAAGC,IAAIC,IAAKC,UAYbC,QAAU,SAASC,SAAUC,UAAWC,eACnCD,UAAYA,eACZC,SAAWA,cAGXC,KAAKH,kBAOdD,QAAQK,UAAUH,WAAa,EAM/BF,QAAQK,UAAUC,QAAU,EAE5BN,QAAQK,UAAUE,UAAY,OAW9BP,QAAQK,UAAUD,KAAO,SAASH,cAE1BO,GAAGC,KAEPb,EAAE,QAAQc,GAAG,QAAQT,UAAS,SAASU,GAEnCA,EAAEC,iBACFJ,GAAGD,UAAUC,GAAGD,UAAUX,EAAEa,MAAMI,KAAK,aACvCL,GAAGF,OAAOV,EAAEa,MAAMI,KAAK,MAGvBd,KAAKe,KAAK,CAAC,CACPC,WAAY,2BACZC,KAAM,CAACd,UAAWM,GAAGN,UAAWI,OAAQE,GAAGF,OAAQC,UAAWC,GAAGD,WACjEU,KAAMT,GAAGL,SAASK,GAAGF,OAAOE,GAAGD,kBAQgB,CAWvDH,KAAM,SAASH,SAAUC,UAAWC,iBACzB,IAAIH,QAAQC,SAAUC,UAAWC"}