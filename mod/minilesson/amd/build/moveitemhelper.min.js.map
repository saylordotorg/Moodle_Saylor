{"version":3,"sources":["../src/moveitemhelper.js"],"names":["define","$","log","Str","Ajax","TheForm","selector","contextid","callback","init","prototype","itemid","direction","dd","on","e","preventDefault","data","call","methodname","args","done"],"mappings":"AASAA,OAAM,iCAAC,CAAC,QAAD,CAAW,UAAX,CAAsB,UAAtB,CAAkC,WAAlC,CAAD,CACF,SAASC,CAAT,CAAYC,CAAZ,CAAgBC,CAAhB,CAAqBC,CAArB,CAA2B,CAYvB,GAAIC,CAAAA,CAAO,CAAG,SAASC,CAAT,CAAmBC,CAAnB,CAA8BC,CAA9B,CAAwC,CAClD,KAAKD,SAAL,CAAiBA,CAAjB,CACA,KAAKC,QAAL,CAAgBA,CAAhB,CAGA,KAAKC,IAAL,CAAUH,CAAV,CACH,CAND,CAYAD,CAAO,CAACK,SAAR,CAAkBH,SAAlB,CAA8B,CAAC,CAA/B,CAMAF,CAAO,CAACK,SAAR,CAAkBC,MAAlB,CAA2B,CAAC,CAA5B,CAEAN,CAAO,CAACK,SAAR,CAAkBE,SAAlB,CAA8B,MAA9B,CAWAP,CAAO,CAACK,SAAR,CAAkBD,IAAlB,CAAyB,SAASH,CAAT,CAAmB,CAExC,GAAIO,CAAAA,CAAE,CAAC,IAAP,CAEAZ,CAAC,CAAC,MAAD,CAAD,CAAUa,EAAV,CAAa,OAAb,CAAqBR,CAArB,CAA8B,SAASS,CAAT,CAAY,CAEtCA,CAAC,CAACC,cAAF,GACAH,CAAE,CAACD,SAAH,CAAaC,CAAE,CAACD,SAAH,CAAaX,CAAC,CAAC,IAAD,CAAD,CAAQgB,IAAR,CAAa,WAAb,CAA1B,CACAJ,CAAE,CAACF,MAAH,CAAUV,CAAC,CAAC,IAAD,CAAD,CAAQgB,IAAR,CAAa,IAAb,CAAV,CAGAb,CAAI,CAACc,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,0BADL,CAEPC,IAAI,CAAE,CAACb,SAAS,CAAEM,CAAE,CAACN,SAAf,CAA0BI,MAAM,CAAEE,CAAE,CAACF,MAArC,CAA6CC,SAAS,CAAEC,CAAE,CAACD,SAA3D,CAFC,CAGPS,IAAI,CAAER,CAAE,CAACL,QAAH,CAAYK,CAAE,CAACF,MAAf,CAAsBE,CAAE,CAACD,SAAzB,CAHC,CAAD,CAAV,CAOH,CAdD,CAgBH,CApBD,CAsBA,MAA2D,CAWvDH,IAAI,CAAE,cAASH,CAAT,CAAmBC,CAAnB,CAA8BC,CAA9B,CAAwC,CAC1C,MAAO,IAAIH,CAAAA,CAAJ,CAAYC,CAAZ,CAAsBC,CAAtB,CAAiCC,CAAjC,CACV,CAbsD,CAe9D,CAjFC,CAAN","sourcesContent":["/**\n * Add a modal to manage question adding and editing to the page.\n *\n * @module     mod_minilesson/modalformhelper\n * @class      modalformhelper\n * @package    mod_minilesson\n * @copyright  2020 Justin Hunt <poodllsupport@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/log','core/str', 'core/ajax'],\n    function($, log,Str, Ajax) {\n\n        /**\n         * Constructor\n         *\n         * @param {String} selector used to find triggers for the new group modal.\n         * @param {int} contextid\n         * @param {String} formname The key/name of the form for this instance\n         * @param {Object} callback The function to call after successful deletion (for UI updates)\n         *\n         * Each call to init gets it's own instance of this class.\n         */\n        var TheForm = function(selector, contextid, callback) {\n            this.contextid = contextid;\n            this.callback = callback;\n\n            //this will init on item click (better for lots of items)\n            this.init(selector);\n        };\n\n        /**\n         * @var {int} contextid\n         * @private\n         */\n        TheForm.prototype.contextid = -1;\n\n        /**\n         * @var {int} itemid\n         * @private\n         */\n        TheForm.prototype.itemid = -1;\n\n        TheForm.prototype.direction = 'none';\n\n\n\n        /**\n         * Initialise the class.\n         *\n         * @param {String} selector used to find triggers for the new group modal.\n         * @private\n         * @return {Promise}\n         */\n        TheForm.prototype.init = function(selector) {\n\n            var dd=this;\n\n            $('body').on('click',selector,function(e) {\n                //prevent it doing a real click (which will do the non ajax version of a click)\n                e.preventDefault();\n                dd.direction=dd.direction=$(this).data('direction');\n                dd.itemid=$(this).data('id');\n\n                // Now we can continue...\n                Ajax.call([{\n                    methodname: 'mod_minilesson_move_item',\n                    args: {contextid: dd.contextid, itemid: dd.itemid, direction: dd.direction},\n                    done: dd.callback(dd.itemid,dd.direction)\n                }]);\n\n\n            });//end of on click\n\n        };\n\n        return /** @alias module:mod_minilesson/modalformhelper */ {\n            // Public variables and functions.\n            /**\n             * Attach event listeners to initialise this module.\n             *\n             * @method init\n             * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n             * @param {int} contextid The contextid for the course.\n             * @param {function} callback The callback.\n             * @return {Promise}\n             */\n            init: function(selector, contextid, callback) {\n                return new TheForm(selector, contextid, callback);\n            }\n        };\n    });"],"file":"moveitemhelper.min.js"}