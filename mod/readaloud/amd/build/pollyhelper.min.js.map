{"version":3,"sources":["../src/pollyhelper.js"],"names":["define","$","log","debug","token","region","owner","init","fetch_polly_url","speaktext","texttype","voice","xhr","XMLHttpRequest","that","onreadystatechange","readyState","status","payload","responseText","payloadobject","JSON","parse","returnCode","returnMessage","pollyurl","onnewpollyurl","xhrparams","encodeURIComponent","open","setRequestHeader","send"],"mappings":"AAAAA,OAAM,6BAAC,CAAC,QAAD,CAAW,UAAX,CAAD,CAAyB,SAAUC,CAAV,CAAaC,CAAb,CAAkB,CAC7C,aAKAA,CAAG,CAACC,KAAJ,CAAU,4BAAV,EAEA,MAAO,CACHC,KAAK,CAAG,EADL,CAEHC,MAAM,CAAE,EAFL,CAGHC,KAAK,CAAE,EAHJ,CAKHC,IAAI,CAAE,cAASH,CAAT,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA8B,CAChC,KAAKF,KAAL,CAAYA,CAAZ,CACA,KAAKC,MAAL,CAAYA,CAAZ,CACA,KAAKC,KAAL,CAAWA,CACd,CATE,CAWHE,eAAe,CAAE,yBAASC,CAAT,CAAmBC,CAAnB,CAA6BC,CAA7B,CAAoC,IAOzCC,CAAAA,CAAG,CAAG,GAAIC,CAAAA,cAP+B,CAQzCC,CAAI,CAAG,IARkC,CAW7CF,CAAG,CAACG,kBAAJ,CAAyB,UAAa,CAClC,GAAwB,CAApB,QAAKC,UAAT,CAA2B,CACvB,GAAkB,GAAd,EAAAJ,CAAG,CAACK,MAAR,CAAuB,IAGfC,CAAAA,CAAO,CAAGN,CAAG,CAACO,YAHC,CAIfC,CAAa,CAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAX,CAJD,CAKnB,GAAIE,CAAJ,CAAmB,CAEf,GAA+B,CAA3B,CAAAA,CAAa,CAACG,UAAlB,CAAkC,CAC9BrB,CAAG,CAACC,KAAJ,CAAUiB,CAAa,CAACI,aAAxB,EACA,QAEH,CAJD,IAIO,IAAiC,CAA7B,GAAAJ,CAAa,CAACG,UAAlB,CAAmC,CACtC,GAAIE,CAAAA,CAAQ,CAAGL,CAAa,CAACI,aAA7B,CACAV,CAAI,CAACY,aAAL,CAAmBD,CAAnB,CACH,CAHM,IAGA,CACHvB,CAAG,CAACC,KAAJ,CAAU,kCAAV,EACAD,CAAG,CAACC,KAAJ,CAAUiB,CAAV,CACH,CACJ,CAbD,IAaO,CACHlB,CAAG,CAACC,KAAJ,CAAU,iDAAV,CACH,CACJ,CArBD,IAqBO,CACHD,CAAG,CAACC,KAAJ,CAAU,6CAA+CS,CAAG,CAACK,MAA7D,CACH,CACJ,CACJ,CA3BD,CAX6C,GAyCzCU,CAAAA,CAAS,CAAG,WAAa,KAAKvB,KAAlB,CACd,cADc,gEAGHwB,kBAAkB,CAACnB,CAAD,CAHf,CAId,YAJc,CAICC,CAJD,CAKd,SALc,CAKFC,CALE,+BAOF,KAAKL,KAPH,CAQd,UARc,CAQD,KAAKD,MAjDyB,CAoD7CO,CAAG,CAACiB,IAAJ,CAAS,MAAT,2DACAjB,CAAG,CAACkB,gBAAJ,CAAqB,eAArB,CAAsC,UAAtC,EACAlB,CAAG,CAACkB,gBAAJ,CAAqB,cAArB,CAAqC,mCAArC,EACAlB,CAAG,CAACmB,IAAJ,CAASJ,CAAT,CACP,CAnEE,CAqEHD,aAAa,CAAE,uBAAUD,CAAV,CAAoB,CAE/BvB,CAAG,CAACC,KAAJ,CAAUsB,CAAV,CACH,CAxEE,CA2EV,CAnFK,CAAN","sourcesContent":["define(['jquery', 'core/log'], function ($, log) {\n    \"use strict\"; // jshint ;_;\n    /*\n    This file helps you get Polly URLs at runtime\n     */\n\n    log.debug('Polly helper: initialising');\n\n    return {\n        token:  '',\n        region: '',\n        owner: '',\n\n        init: function(token, region, owner){\n            this.token =token;\n            this.region=region;\n            this.owner=owner;\n        },\n\n        fetch_polly_url: function(speaktext,texttype, voice) {\n\n                //The REST API we are calling\n                var functionname = 'local_cpapi_fetch_polly_url';\n\n                //fetch the Posturl. We need this.\n                //set up our ajax request\n                var xhr = new XMLHttpRequest();\n                var that = this;\n\n                //set up our handler for the response\n                xhr.onreadystatechange = function (e) {\n                    if (this.readyState === 4) {\n                        if (xhr.status == 200) {\n\n                            //get a yes or forgetit or tryagain\n                            var payload = xhr.responseText;\n                            var payloadobject = JSON.parse(payload);\n                            if (payloadobject) {\n                                //returnCode > 0  indicates an error\n                                if (payloadobject.returnCode > 0) {\n                                    log.debug(payloadobject.returnMessage);\n                                    return false;\n                                    //if all good, then lets do the embed\n                                } else if (payloadobject.returnCode === 0){\n                                    var pollyurl = payloadobject.returnMessage;\n                                    that.onnewpollyurl(pollyurl);\n                                } else {\n                                    log.debug('Polly Signed URL Request failed:');\n                                    log.debug(payloadobject);\n                                }\n                            } else {\n                                log.debug('Polly Signed URL Request something bad happened');\n                            }\n                        } else {\n                            log.debug('Polly Signed URL Request Not 200 response:' + xhr.status);\n                        }\n                    }\n                };\n\n                //log.debug(params);\n                var xhrparams = \"wstoken=\" + this.token\n                + \"&wsfunction=\" + functionname\n                + \"&moodlewsrestformat=\" + 'json'\n                + \"&text=\" + encodeURIComponent(speaktext)\n                + '&texttype=' + texttype\n                + '&voice=' + voice\n                + '&appid=' + 'mod_readaloud'\n                + '&owner=' + this.owner\n                + '&region=' + this.region;\n\n                var serverurl = 'https://cloud.poodll.com' + \"/webservice/rest/server.php\";\n                xhr.open(\"POST\", serverurl, true);\n                xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                xhr.send(xhrparams);\n        },\n\n        onnewpollyurl: function (pollyurl) {\n            //do something\n            log.debug(pollyurl);\n        },\n\n    };//end of return value\n});"],"file":"pollyhelper.min.js"}