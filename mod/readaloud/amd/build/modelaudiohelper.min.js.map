{"version":3,"sources":["../src/modelaudiohelper.js"],"names":["define","$","log","def","recorderhelper","karaoke","debug","controls","currentmode","breaks","matches","goturl","cd","audioplayerclass","modelaudioplayerclass","wordclass","spaceclass","endspaceclass","passagecontainer","breaksfield","modelaudiobreaksfield","urlfield","modelaudiourlfield","modeltranscriptbutton","modeltranscript","init","props","theid","widgetid","configcontrol","get","opts","JSON","parse","value","remove","modelaudiobreaks","modelaudiomatches","register_controls","register_events","markup_passage","init_recorder","init_karaoke","audiourl","audioplayer","attr","includes","karaoke_opts","modeling","set_breaks","that","on_recording_start","on_recording_end","on_audio_processing","eventdata","val","mediaurl","eachword","eachspace","clickhandler","wordnumber","parseInt","nextspace","hasClass","remove_break","removeClass","addClass","theplayer","audiotime","fetch_break_audiotime","register_break","click","hide","show","i","length","splice","stringify","push","sort","compare","a","b","space","player_get_time","currentTime","is","audiostart","check_modelaudio_transcript_ready","waitms","ajax","url","method","cache","error","setTimeout","success","data","textStatus","xhr","status","load","do_transcription_complete"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log','mod_readaloud/definitions','mod_readaloud/recorderhelper','mod_readaloud/modelaudiokaraoke'], function ($, log, def, recorderhelper, karaoke) {\n    \"use strict\"; // jshint ;_;\n    /*\n    This file helps you get Polly URLs at runtime\n     */\n\n    log.debug('Model Audio helper: initialising');\n\n    return {\n        controls: {},\n        currentmode: 'modeling', //previewing //stopped\n        breaks: [],\n        matches: false,\n        goturl: false,\n\n        //class definitions\n        cd: {\n            audioplayerclass: def.modelaudioplayerclass,\n            wordclass: def.wordclass,\n            spaceclass: def.spaceclass,\n            endspaceclass: def.endspaceclass,\n            passagecontainer: def.passagecontainer,\n            breaksfield: def.modelaudiobreaksfield,\n            urlfield: def.modelaudiourlfield,\n            modeltranscriptbutton: def.modeltranscriptbutton,\n            modeltranscript: def.modeltranscript\n        },\n\n        //init the module\n        init: function(props){\n\n            //pick up opts from html\n            var theid = '#amdopts_' + props.widgetid;\n            var configcontrol = $(theid).get(0);\n            if (configcontrol) {\n                var opts = JSON.parse(configcontrol.value);\n                $(theid).remove();\n            } else {\n                //if there is no config we might as well give up\n                log.debug('Read Aloud model audio Controller: No config found on page. Giving up.');\n                return;\n            }\n\n            if(opts.modelaudiobreaks) {\n                this.breaks=JSON.parse(opts.modelaudiobreaks);\n            }\n            if(opts.modelaudiomatches) {\n                this.matches=JSON.parse(opts.modelaudiomatches);\n            }\n\n            //register the controls\n            this.register_controls();\n            //register the events\n            this.register_events();\n            //markup passage\n            this.markup_passage();\n            //load recorder\n            this.init_recorder(opts);\n\n            //init karaoke\n            this.init_karaoke();\n\n            //if it looks like we have a human audio, do a transcript check\n            var audiourl = this.controls.audioplayer.attr('src');\n            if(audiourl != null && !audiourl.includes('poodllfile.poodll.net')) {\n                //this transcript check needs work. for now lets ignore it\n                //this.check_modelaudio_transcript_ready(audiourl, 5000)\n            }\n        },\n\n        init_karaoke: function(){\n          var karaoke_opts={audioplayerclass: this.cd.audioplayerclass, modeling: true};\n          karaoke.init(karaoke_opts);\n          karaoke.set_breaks(this.breaks);\n        },\n\n        init_recorder: function(opts){\n            var that =this;\n            var on_recording_start=function(eventdata){\n                that.goturl=false;\n            };\n            var on_recording_end=function(eventdata){};\n            var on_audio_processing=function(eventdata){\n                if(!that.goturl) {\n                    that.controls.urlfield.val(eventdata.mediaurl);\n                    that.goturl = true;\n                }\n            };\n\n            //init the recorder\n            recorderhelper.init(opts,\n                on_recording_start,\n                on_recording_end,\n                on_audio_processing);\n        },\n\n        //load all the controls so we do not have to do it later\n        register_controls: function(){\n            this.controls.audioplayer = $('#' + this.cd.audioplayerclass);\n            this.controls.eachword = $('.' + this.cd.wordclass);\n            this.controls.eachspace = $('.' + this.cd.spaceclass);\n            this.controls.passagecontainer = $(\".\" + this.cd.passagecontainer);\n            this.controls.breaksfield = $(\"#\" + this.cd.breaksfield);\n            this.controls.urlfield = $(\"#\" + this.cd.urlfield);\n            this.controls.modeltranscript = $(\"#\" + this.cd.modeltranscript);\n            this.controls.modeltranscriptbutton = $(\"#\" + this.cd.modeltranscriptbutton);\n        },\n\n        //attach the various event handlers we need\n        register_events: function(){\n            var that = this;\n\n            var clickhandler = function () {\n\n                if (that.currentmode === 'modeling') {\n                    var wordnumber = parseInt($(this).attr('data-wordnumber'));\n                    var nextspace = $('#' + that.cd.spaceclass + '_' + wordnumber);\n                    if(nextspace.hasClass(that.cd.endspaceclass)){\n                        that.remove_break(wordnumber);\n                        nextspace.removeClass(that.cd.endspaceclass);\n                    }else {\n                        nextspace.addClass(that.cd.endspaceclass);\n                        var theplayer = that.controls.audioplayer[0];\n                        var audiotime = that.fetch_break_audiotime(wordnumber, theplayer, that.matches);\n                        that.register_break(wordnumber, audiotime);\n                    }\n                }\n            };\n\n            //set break points\n            this.controls.eachword.click(clickhandler);\n            this.controls.eachspace.click(clickhandler);\n\n            this.controls.modeltranscriptbutton.click(function(){\n                $(this).hide();\n                that.controls.modeltranscript.show();\n            });\n        },\n        remove_break: function(wordnumber)\n        {\n            for(var i=0; i<this.breaks.length; i++) {\n                if(this.breaks[i].wordnumber==wordnumber){\n                    this.breaks.splice(i,1);\n                    break;\n                }\n            }\n            this.controls.breaksfield.val(JSON.stringify(this.breaks));\n            karaoke.set_breaks(this.breaks);\n            log.debug(this.breaks);\n        },\n\n        register_break: function(wordnumber, audiotime){\n            this.breaks.push({'wordnumber': wordnumber, 'audiotime': audiotime});\n\n            var compare = function( a, b ) {\n                if ( a.wordnumber < b.wordnumber ){\n                    return -1;\n                }\n                if (  a.wordnumber >  b.wordnumber ){\n                    return 1;\n                }\n                return 0;\n            };\n            this.breaks.sort( compare );\n\n            this.controls.breaksfield.val(JSON.stringify(this.breaks));\n            karaoke.set_breaks(this.breaks);\n            log.debug(this.breaks);\n        },\n\n        markup_passage: function(){\n            for(var i=0; i<this.breaks.length; i++) {\n                var wordnumber =this.breaks[i].wordnumber;\n                var space =$('#' + this.cd.spaceclass + '_' + wordnumber);\n                space.addClass(this.cd.endspaceclass);\n            }\n\n        },\n\n        player_get_time: function(){\n            var theplayer = this.controls.audioplayer[0];\n            return theplayer.currentTime;\n        },\n\n        //the break occurs after the current word.  matches array  is 0 based and words array is 1 based\n        //So if break 1: word tapped is wordnumber 3, we want the start position of wordnumber 4 as audiotime. That is matches[3].audiostart\n        fetch_break_audiotime: function(wordnumber,theplayer, matches){\n            if(matches!==false && !$('.mod_readaloud_manualbreaktiming').is(\":checked\")){\n                if(matches[wordnumber]){\n                    return matches[wordnumber].audiostart;\n\n                }else{\n                    //try five more words, just in case\n                    for(var i =1;i<6;i++){\n                        if(matches[wordnumber+i]){\n                            return matches[wordnumber+i].audiostart;\n                        }\n                    }\n                }\n            }else {\n                return theplayer.currentTime;\n            }\n        },\n\n        check_modelaudio_transcript_ready: function(audiourl,waitms){\n            //we commence a series of ping and retries until the recorded file is available\n            var that = this;\n            $.ajax({\n                url: audiourl + '.txt',\n                method: 'HEAD',\n                cache: false,\n                error: function () {\n                    //We get here if its a 404 or 403. So settimout here and wait for file to arrive\n                    //we increment the timeout period each time to prevent bottlenecks\n                    log.debug('403 errors are normal here, till the file arrives back from transcriptoin');\n                    setTimeout(function () {\n                        that.check_modelaudio_transcript_ready(audiourl, waitms + 5000);\n                    }, waitms);\n                },\n                success: function (data, textStatus, xhr) {\n                    switch (xhr.status) {\n                        case 200:\n                            that.controls.modeltranscript.load(audiourl + '.txt');\n                            that.controls.modeltranscriptbutton.show();\n                            break;\n                        default:\n                            setTimeout(function () {\n                                that.check_modelaudio_transcript_ready(audiourl, waitms + 5000);\n                            }, waitms);\n                    }\n\n                }\n            });\n        },\n\n        do_transcription_complete: function(){\n\n        }\n\n    };//end of return value\n});"],"file":"modelaudiohelper.min.js"}