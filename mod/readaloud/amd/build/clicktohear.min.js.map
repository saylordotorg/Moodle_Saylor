{"version":3,"file":"clicktohear.min.js","sources":["../src/clicktohear.js"],"sourcesContent":["define(['jquery', 'core/log','mod_readaloud/definitions', 'mod_readaloud/pollyhelper'], function ($, log, def,pollyhelper) {\n    \"use strict\"; // jshint ;_;\n    /*\n    This file helps you get Polly URLs at runtime\n     */\n\n    log.debug('Click to hear: initialising');\n\n    return {\n        //controls\n        controls: {},\n        ttsvoice: 'Amy',\n\n        //class definitions\n        cd: {\n            hiddenplayerclass: def.hiddenplayer,\n            wordclass: def.wordclass,\n            passagecontainer: def.passagecontainer,\n        },\n\n        //init the module\n        init: function(opts){\n            pollyhelper.init(opts.token,opts.region,opts.owner);\n            this.ttsvoice=opts.ttsvoice;\n            this.register_controls();\n            this.register_events();\n        },\n\n        //load all the controls so we do not have to do it later\n        register_controls: function(){\n            this.controls.audioplayer = $('#' + this.cd.hiddenplayerclass);\n            this.controls.eachword = $('.' + this.cd.wordclass);\n            this.controls.eachspace = $('.' + this.cd.spaceclass);\n            this.controls.passagecontainer = $(\".\" + this.cd.passagecontainer);\n        },\n\n        //attach the various event handlers we need\n        register_events: function() {\n            var that = this;\n\n            // Get the audio element\n            var aplayer = this.controls.audioplayer;\n            pollyhelper.onnewpollyurl=function(theurl){\n                aplayer.attr('src',theurl);\n                aplayer[0].play();\n            };\n\n            //register click listener\n            this.controls.eachword.click(function () {\n                var wordnumber = parseInt($(this).attr('data-wordnumber'));\n                var word = $('#' + that.cd.wordclass + '_' + wordnumber);\n                var text = word.text();\n                pollyhelper.fetch_polly_url(text,\"text\",that.ttsvoice);\n            });\n        }//end of register events\n\n    };//end of return value\n});"],"names":["define","$","log","def","pollyhelper","debug","controls","ttsvoice","cd","hiddenplayerclass","hiddenplayer","wordclass","passagecontainer","init","opts","token","region","owner","register_controls","register_events","audioplayer","this","eachword","eachspace","spaceclass","that","aplayer","onnewpollyurl","theurl","attr","play","click","wordnumber","parseInt","text","fetch_polly_url"],"mappings":"AAAAA,mCAAO,CAAC,SAAU,WAAW,4BAA6B,8BAA8B,SAAUC,EAAGC,IAAKC,IAAIC,oBAM1GF,IAAIG,MAAM,+BAEH,CAEHC,SAAU,GACVC,SAAU,MAGVC,GAAI,CACAC,kBAAmBN,IAAIO,aACvBC,UAAWR,IAAIQ,UACfC,iBAAkBT,IAAIS,kBAI1BC,KAAM,SAASC,MACXV,YAAYS,KAAKC,KAAKC,MAAMD,KAAKE,OAAOF,KAAKG,YACxCV,SAASO,KAAKP,cACdW,yBACAC,mBAITD,kBAAmB,gBACVZ,SAASc,YAAcnB,EAAE,IAAMoB,KAAKb,GAAGC,wBACvCH,SAASgB,SAAWrB,EAAE,IAAMoB,KAAKb,GAAGG,gBACpCL,SAASiB,UAAYtB,EAAE,IAAMoB,KAAKb,GAAGgB,iBACrClB,SAASM,iBAAmBX,EAAE,IAAMoB,KAAKb,GAAGI,mBAIrDO,gBAAiB,eACTM,KAAOJ,KAGPK,QAAUL,KAAKf,SAASc,YAC5BhB,YAAYuB,cAAc,SAASC,QAC/BF,QAAQG,KAAK,MAAMD,QACnBF,QAAQ,GAAGI,aAIVxB,SAASgB,SAASS,OAAM,eACrBC,WAAaC,SAAShC,EAAEoB,MAAMQ,KAAK,oBAEnCK,KADOjC,EAAE,IAAMwB,KAAKjB,GAAGG,UAAY,IAAMqB,YAC7BE,OAChB9B,YAAY+B,gBAAgBD,KAAK,OAAOT,KAAKlB"}