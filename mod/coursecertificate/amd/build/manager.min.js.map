{"version":3,"file":"manager.min.js","sources":["../src/manager.js"],"sourcesContent":["// This file is part of the mod_coursecertificate plugin for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module instantiates the functionality for actions on course certificates.\n *\n * @module      mod_coursecertificate/manager\n * @copyright   2020 Mikel Mart√≠n <mikel@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'core/str'\n], function(\n    Ajax,\n    Notification,\n    Templates,\n    Str\n) {\n\n    /** @type {Object} The list of selectors for the coursecertificate module. */\n    const SELECTORS = {\n        AUTOMATICSENDREGION: \"[data-region='automaticsend-alert']\",\n        HIDDENWARNING: \".hidden-warning\",\n        NOAUTOSENDINFO: \".noautosend-info\",\n        REPORTREGION: \"[data-region='issues-report']\",\n        TOGGLEAUTOMATICSEND: \"[data-action='toggle-automaticsend']\",\n        REVOKEISSUE: \"[data-action='revoke-issue']\",\n        LOADING: \".loading-overlay\"\n    },\n    /** @type {Object} The list of templates for the coursecertificate module. */\n    TEMPLATES = {\n        AUTOMATICSENDALERT: 'mod_coursecertificate/automaticsend_alert',\n        ISSUESREPORT: 'mod_coursecertificate/issues_report'\n    },\n    /** @type {Object} The list of services for the coursecertificate module. */\n    SERVICES = {\n        UPDATEAUTOMATICSEND: 'mod_coursecertificate_update_automaticsend',\n        REVOKEISSUE: 'tool_certificate_revoke_issue',\n    };\n\n    /**\n     * Show/Hide selector.\n     *\n     * @param {string} selector\n     * @param {boolean} visibile\n     */\n    function setVisibility(selector, visibile) {\n        if (visibile) {\n            document.querySelector(selector).classList.remove('d-none');\n            document.querySelector(selector).classList.remove('invisible');\n        } else {\n            document.querySelector(selector).classList.add('d-none');\n            document.querySelector(selector).classList.add('invisible');\n        }\n    }\n\n    /**\n     * Toggle the automaticsend setting on/off for coursecertificate.\n     *\n     * @param {Element} automaticsendregion\n     */\n    function toggleAutomaticSend(automaticsendregion) {\n        const {certificateid, automaticsend} =\n            automaticsendregion.querySelector(SELECTORS.TOGGLEAUTOMATICSEND).dataset;\n        const newstatus = automaticsend === '0';\n        const strings = newstatus\n        // Load strings depending on newstatus.\n        ? [{'key': 'confirmation', component: 'admin'},\n            {'key': 'enableautomaticsendpopup', component: 'coursecertificate'},\n            {'key': 'confirm'},\n            {'key': 'cancel'}]\n        : [{'key': 'confirmation', component: 'admin'},\n            {'key': 'disableautomaticsend', component: 'coursecertificate'},\n            {'key': 'confirm'},\n            {'key': 'cancel'}];\n        Str.get_strings(strings).then((s) => {\n            // Show confirm notification.\n            Notification.confirm(s[0], s[1], s[2], s[3], () => {\n                M.util.js_pending('mod_coursecertificate_toggle_automaticsend');\n                // Show loading template.\n                setVisibility(SELECTORS.LOADING, true);\n                // Call to webservice.\n                Ajax.call([{methodname: SERVICES.UPDATEAUTOMATICSEND,\n                    args: {id: certificateid, automaticsend: newstatus}}])[0]\n                // Reload automatic send alert template.\n                .then((result) => {\n                    let {showhiddenwarning, shownoautosendinfo} = result;\n                    Templates.render(TEMPLATES.AUTOMATICSENDALERT,\n                        {certificateid: certificateid, automaticsend: newstatus}, '')\n                        .then((html) => {\n                            automaticsendregion.innerHTML = html;\n                            setVisibility(SELECTORS.HIDDENWARNING, showhiddenwarning);\n                            setVisibility(SELECTORS.NOAUTOSENDINFO, shownoautosendinfo);\n                            M.util.js_complete('mod_coursecertificate_toggle_automaticsend');\n                            return null;\n                        })\n                        .fail(Notification.exception);\n                    return null;\n                })\n                .fail(Notification.exception);\n            });\n            return null;\n        }).fail(Notification.exception);\n    }\n\n    /**\n     * Revoke the issue.\n     *\n     * @param {int} issueid\n     */\n    function revokeIssue(issueid) {\n        const strings = [{'key': 'confirmation', component: 'admin'},\n            {'key': 'revokeissue', component: 'coursecertificate'},\n            {'key': 'confirm'},\n            {'key': 'cancel'}];\n        Str.get_strings(strings).then((s) => {\n            // Show confirm notification.\n            Notification.confirm(s[0], s[1], s[2], s[3], () => {\n                M.util.js_pending('mod_coursecertificate_revoke_issue');\n                // Call to webservice to revoke issue.\n                Ajax.call([{methodname: SERVICES.REVOKEISSUE, args: {id: issueid}}])[0]\n                // Call to webservice to get updated table.\n                .then(() => {\n                    M.util.js_complete('mod_coursecertificate_revoke_issue');\n                    window.location.reload();\n                    return null;\n                })\n                .fail(Notification.exception);\n            });\n            return null;\n        }).fail(Notification.exception);\n    }\n\n    return {\n        init: function() {\n            const automaticsendregion = document.querySelector(SELECTORS.AUTOMATICSENDREGION);\n            if (automaticsendregion) {\n                automaticsendregion.addEventListener('click', (e) => {\n                    if (e.target && e.target.closest(SELECTORS.TOGGLEAUTOMATICSEND)) {\n                        e.preventDefault();\n                        toggleAutomaticSend(automaticsendregion);\n                    }\n                });\n            }\n            const reportregion = document.querySelector(SELECTORS.REPORTREGION);\n            if (reportregion) {\n                reportregion.addEventListener('click', (e) => {\n                    const target = e.target && e.target.closest(SELECTORS.REVOKEISSUE);\n                    if (target) {\n                        e.preventDefault();\n                        const {issueid} = target.dataset;\n                        revokeIssue(issueid);\n                    }\n                });\n            }\n        }\n    };\n});"],"names":["define","Ajax","Notification","Templates","Str","SELECTORS","TEMPLATES","SERVICES","setVisibility","selector","visibile","document","querySelector","classList","remove","add","init","automaticsendregion","addEventListener","e","target","closest","preventDefault","dataset","certificateid","newstatus","automaticsend","strings","component","get_strings","then","s","confirm","M","util","js_pending","call","methodname","args","id","result","showhiddenwarning","shownoautosendinfo","render","html","innerHTML","js_complete","fail","exception","toggleAutomaticSend","reportregion","issueid","window","location","reload","revokeIssue"],"mappings":";;;;;;;AAuBAA,uCAAO,CACH,YACA,oBACA,iBACA,aACD,SACCC,KACAC,aACAC,UACAC,SAIMC,8BACmB,sCADnBA,wBAEa,kBAFbA,yBAGc,mBAHdA,uBAIY,gCAJZA,8BAKmB,uCALnBA,sBAMW,+BANXA,kBAOO,mBAGbC,6BACwB,4CAIxBC,6BACyB,6CADzBA,qBAEiB,yCASRC,cAAcC,SAAUC,UACzBA,UACAC,SAASC,cAAcH,UAAUI,UAAUC,OAAO,UAClDH,SAASC,cAAcH,UAAUI,UAAUC,OAAO,eAElDH,SAASC,cAAcH,UAAUI,UAAUE,IAAI,UAC/CJ,SAASC,cAAcH,UAAUI,UAAUE,IAAI,oBAiFhD,CACHC,KAAM,eACIC,oBAAsBN,SAASC,cAAcP,+BAC/CY,qBACAA,oBAAoBC,iBAAiB,SAAS,SAACC,GACvCA,EAAEC,QAAUD,EAAEC,OAAOC,QAAQhB,iCAC7Bc,EAAEG,0BA9EOL,+CAErBA,oBAAoBL,cAAcP,+BAA+BkB,QAD9DC,oCAAAA,cAEDC,UAA8B,4BAFdC,cAGhBC,QAAUF,UAEd,CAAC,KAAQ,eAAgBG,UAAW,SAClC,KAAQ,2BAA4BA,UAAW,qBAC/C,KAAQ,WACR,KAAQ,WACV,CAAC,KAAQ,eAAgBA,UAAW,SAClC,KAAQ,uBAAwBA,UAAW,qBAC3C,KAAQ,WACR,KAAQ,WACZxB,IAAIyB,YAAYF,SAASG,MAAK,SAACC,UAE3B7B,aAAa8B,QAAQD,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAI,WACzCE,EAAEC,KAAKC,WAAW,8CAElB3B,cAAcH,mBAAmB,GAEjCJ,KAAKmC,KAAK,CAAC,CAACC,WAAY9B,6BACpB+B,KAAM,CAACC,GAAIf,cAAeE,cAAeD,cAAc,GAE1DK,MAAK,SAACU,YACEC,kBAAyCD,OAAzCC,kBAAmBC,mBAAsBF,OAAtBE,0BACxBvC,UAAUwC,OAAOrC,6BACb,CAACkB,cAAeA,cAAeE,cAAeD,WAAY,IACzDK,MAAK,SAACc,aACH3B,oBAAoB4B,UAAYD,KAChCpC,cAAcH,wBAAyBoC,mBACvCjC,cAAcH,yBAA0BqC,oBACxCT,EAAEC,KAAKY,YAAY,8CACZ,QAEVC,KAAK7C,aAAa8C,WAChB,QAEVD,KAAK7C,aAAa8C,cAEhB,QACRD,KAAK7C,aAAa8C,WAsCLC,CAAoBhC,6BAI1BiC,aAAevC,SAASC,cAAcP,wBACxC6C,cACAA,aAAahC,iBAAiB,SAAS,SAACC,OAC9BC,OAASD,EAAEC,QAAUD,EAAEC,OAAOC,QAAQhB,uBACxCe,SACAD,EAAEG,0BAvCD6B,SAKjB/C,IAAIyB,YAJY,CAAC,KAAQ,eAAgBD,UAAW,SAChD,KAAQ,cAAeA,UAAW,qBAClC,KAAQ,WACR,KAAQ,YACaE,MAAK,SAACC,UAE3B7B,aAAa8B,QAAQD,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAI,WACzCE,EAAEC,KAAKC,WAAW,sCAElBlC,KAAKmC,KAAK,CAAC,CAACC,WAAY9B,qBAAsB+B,KAAM,CAACC,GAAIY,YAAY,GAEpErB,MAAK,kBACFG,EAAEC,KAAKY,YAAY,sCACnBM,OAAOC,SAASC,SACT,QAEVP,KAAK7C,aAAa8C,cAEhB,QACRD,KAAK7C,aAAa8C,WAqBLO,CADkBnC,OAAOG,QAAlB4B"}