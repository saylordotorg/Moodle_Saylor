{"version":3,"file":"recordercontroller.min.js","sources":["../src/recordercontroller.js"],"sourcesContent":["\ndefine(['jquery', 'core/log','mod_solo/definitions','mod_solo/cloudpoodllloader','mod_solo/recorderhelper'],\n    function($, log, def, cloudpoodllloader,recorderhelper) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Recorder controller: initialising');\n\n    return {\n\n        //for making multiple instances\n        clone: function(){\n            return $.extend(true,{},this);\n        },\n\n        //pass in config, the jquery video/audio object, and a function to be called when conversion has finshed\n        init: function(props){\n            var dd = this.clone();\n\n            if(props.hasOwnProperty('token')){\n                //opts are passed in directly (probably from mustache template)\n                dd.activitydata = props;\n\n            }else {\n                //pick up opts from html (stashed in hidden form field)\n                var theid = '#amdopts_' + props.widgetid;\n                var configcontrol = $(theid).get(0);\n                if (configcontrol) {\n                    dd.activitydata = JSON.parse(configcontrol.value);\n                    dd.activitydata.widgetid  = props.widgetid;\n                    $(theid).remove();\n                } else {\n                    //if there is no config we might as well give up\n                    log.debug('solo Recorder Controller: No config found on page. Giving up.');\n                    return;\n                }\n            }\n\n            dd.cmid = props.cmid;\n            dd.recorderid = dd.activitydata.recorderid;\n            dd.updatecontrolid = dd.activitydata.widgetid + '_' + def.C_UPDATECONTROL;\n            dd.streamingresultsid = dd.activitydata.widgetid + def.C_STREAMINGCONTROL;\nlog.debug( dd.activitydata);\nlog.debug('updateid', dd.updatecontrolid);\n\n            //if the browser doesn't support html5 recording.\n            //then do not go any further\n            if(!dd.is_browser_ok()){\n                return;\n            }\n            \n            dd.setup_recorder();\n\n        },\n\n        is_browser_ok: function(){\n            return (navigator && navigator.mediaDevices\n                && navigator.mediaDevices.getUserMedia);\n        },\n\n\n        setup_recorder: function(){\n            var dd = this;\n            var theform = $('.mod_solo_step2').find('form');\n            var uploadwarning = $('.mod_solo_uploadwarning');\n            var recordingcontainer = $('.mod_solo_recordingcontainer');\n\n            //Set up the callback functions for the audio recorder\n\n            //originates from the recording:started event\n            //contains no meaningful data\n            //See https://api.poodll.com\n            var on_recording_start= function(eventdata){\n                //init streaming transcriber results\n                if(dd.activitydata.transcriber == def.transcriber_amazonstreaming) {\n                    dd.streamingresults = [];\n                }//end of if amazonstreaming\n            };\n\n            var on_speech = function (eventdata) {\n                var speech = eventdata.capturedspeech;\n                var speechresults = eventdata.speechresults;\n                if(dd.activitydata.transcriber == def.transcriber_amazonstreaming) {\n                    dd.streamingresults.push(speechresults);\n                    log.debug(dd.streamingresults);\n                }\n            };\n\n            var on_upload_details = function (eventdata) {\n                log.debug(eventdata.id);\n                log.debug(eventdata.uploaddetails);\n                log.debug(eventdata.uploaddetails.postURL);\n                log.debug(dd.activitydata.localposturl);\n                var xhr = new XMLHttpRequest();\n                var params = \"datatype=register\";\n                params += \"&id=\" + eventdata.id;\n                params += \"&posturl=\" + encodeURIComponent(eventdata.uploaddetails.postURL);\n                xhr.open(\"POST\", dd.activitydata.localposturl, true);\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n                xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                xhr.send(params);\n            };\n\n            //originates from the recording:ended event\n            //contains no meaningful data\n            //See https://api.poodll.com\n           var on_recording_end= function(eventdata){\n               $(\"button.mod_solo_step2_btn\").attr(\"disabled\",true);\n           };\n\n            //data sent here originates from the awaiting_processing event\n            //See https://api.poodll.com\n            var on_media_processing= function(eventdata){\n                uploadwarning.show();\n                var updatecontrol = $('#' + dd.updatecontrolid);\n                updatecontrol.val(eventdata.mediaurl);\n\n                if(dd.activitydata.transcriber == def.transcriber_amazonstreaming &&\n                    dd.streamingresults &&\n                    dd.streamingresults.length > 0){\n                    var streamingresults = $('#' + dd.streamingresultsid);\n                    streamingresults.val(JSON.stringify(dd.streamingresults));\n                }\n                recordingcontainer.hide();\n            };\n\n            //data sent here originates from the file_submitted event\n            //See https://api.poodll.com\n            var on_file_submitted= function(){\n                uploadwarning.hide();\n                /* disable cancel button because users can try to leave too soon */\n                $(\"button.mod_solo_step2_btn\").attr(\"disabled\",false);\n                $(\"button.mod_solo_step2_btn\").trigger('click');\n            };\n\n            //init the recorder\n            recorderhelper.init(dd.activitydata,\n                on_recording_start,\n                on_recording_end,\n                on_media_processing,\n                on_speech,\n                on_file_submitted,\n                on_upload_details);\n        },\n\n\n        process_html: function(){\n            var opts = this.activitydata;\n            //these css classes/ids are all passed in from php in\n            //renderer.php::fetch_activity_amd\n            var controls ={};\n            this.controls = controls;\n\n            //init drop downs\n\n        },\n\n        register_events: function() {\n            var dd = this;\n\n\n        }\n    };//end of returned object\n});//total end\n"],"names":["define","$","log","def","cloudpoodllloader","recorderhelper","debug","clone","extend","this","init","props","dd","hasOwnProperty","activitydata","theid","widgetid","configcontrol","get","JSON","parse","value","remove","cmid","recorderid","updatecontrolid","C_UPDATECONTROL","streamingresultsid","C_STREAMINGCONTROL","is_browser_ok","setup_recorder","navigator","mediaDevices","getUserMedia","uploadwarning","find","recordingcontainer","eventdata","transcriber","transcriber_amazonstreaming","streamingresults","attr","show","val","mediaurl","length","stringify","hide","capturedspeech","speechresults","push","trigger","id","uploaddetails","postURL","localposturl","xhr","XMLHttpRequest","params","encodeURIComponent","open","setRequestHeader","send","process_html","controls","register_events"],"mappings":"AACAA,qCAAO,CAAC,SAAU,WAAW,uBAAuB,6BAA6B,4BAC7E,SAASC,EAAGC,IAAKC,IAAKC,kBAAkBC,uBAIxCH,IAAII,MAAM,qCAEH,CAGHC,MAAO,kBACIN,EAAEO,QAAO,EAAK,GAAGC,OAI5BC,KAAM,SAASC,WACPC,GAAKH,KAAKF,WAEXI,MAAME,eAAe,SAEpBD,GAAGE,aAAeH,UAEhB,KAEEI,MAAQ,YAAcJ,MAAMK,SAC5BC,cAAgBhB,EAAEc,OAAOG,IAAI,OAC7BD,0BAMAf,IAAII,MAAM,iEALVM,GAAGE,aAAeK,KAAKC,MAAMH,cAAcI,OAC3CT,GAAGE,aAAaE,SAAYL,MAAMK,SAClCf,EAAEc,OAAOO,SAQjBV,GAAGW,KAAOZ,MAAMY,KAChBX,GAAGY,WAAaZ,GAAGE,aAAaU,WAChCZ,GAAGa,gBAAkBb,GAAGE,aAAaE,SAAW,IAAMb,IAAIuB,gBAC1Dd,GAAGe,mBAAqBf,GAAGE,aAAaE,SAAWb,IAAIyB,mBACnE1B,IAAII,MAAOM,GAAGE,cACdZ,IAAII,MAAM,WAAYM,GAAGa,iBAITb,GAAGiB,iBAIPjB,GAAGkB,kBAIPD,cAAe,kBACHE,WAAaA,UAAUC,cACxBD,UAAUC,aAAaC,cAIlCH,eAAgB,eACRlB,GAAKH,KAELyB,eADUjC,EAAE,mBAAmBkC,KAAK,QACpBlC,EAAE,4BAClBmC,mBAAqBnC,EAAE,gCAuE3BI,eAAeK,KAAKE,GAAGE,cAhEC,SAASuB,WAE1BzB,GAAGE,aAAawB,aAAenC,IAAIoC,8BAClC3B,GAAG4B,iBAAmB,OA+BT,SAASH,WAC3BpC,EAAE,6BAA6BwC,KAAK,YAAW,MAKzB,SAASJ,YAC9BH,cAAcQ,OACMzC,EAAE,IAAMW,GAAGa,iBACjBkB,IAAIN,UAAUO,UAEzBhC,GAAGE,aAAawB,aAAenC,IAAIoC,6BAClC3B,GAAG4B,kBACH5B,GAAG4B,iBAAiBK,OAAS,IACN5C,EAAE,IAAMW,GAAGe,oBACjBgB,IAAIxB,KAAK2B,UAAUlC,GAAG4B,mBAE3CJ,mBAAmBW,UA5CP,SAAUV,WACTA,UAAUW,mBACnBC,cAAgBZ,UAAUY,cAC3BrC,GAAGE,aAAawB,aAAenC,IAAIoC,8BAClC3B,GAAG4B,iBAAiBU,KAAKD,eACzB/C,IAAII,MAAMM,GAAG4B,sBA4CE,WACnBN,cAAca,OAEd9C,EAAE,6BAA6BwC,KAAK,YAAW,GAC/CxC,EAAE,6BAA6BkD,QAAQ,YA5CnB,SAAUd,WAC9BnC,IAAII,MAAM+B,UAAUe,IACpBlD,IAAII,MAAM+B,UAAUgB,eACpBnD,IAAII,MAAM+B,UAAUgB,cAAcC,SAClCpD,IAAII,MAAMM,GAAGE,aAAayC,kBACtBC,IAAM,IAAIC,eACVC,OAAS,oBACbA,QAAU,OAASrB,UAAUe,GAC7BM,QAAU,YAAcC,mBAAmBtB,UAAUgB,cAAcC,SACnEE,IAAII,KAAK,OAAQhD,GAAGE,aAAayC,cAAc,GAC/CC,IAAIK,iBAAiB,eAAgB,qCACrCL,IAAIK,iBAAiB,gBAAiB,YACtCL,IAAIM,KAAKJ,YA8CjBK,aAAc,WACCtD,KAAKK,kBAIXkD,SADS,IAOlBC,gBAAiB"}