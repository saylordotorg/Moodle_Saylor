{"version":3,"sources":["../src/recordercontroller.js"],"names":["define","$","log","def","cloudpoodllloader","recorderhelper","debug","clone","extend","init","props","dd","hasOwnProperty","activitydata","theid","widgetid","configcontrol","get","JSON","parse","value","remove","cmid","recorderid","updatecontrolid","C_UPDATECONTROL","streamingresultsid","C_STREAMINGCONTROL","is_browser_ok","setup_recorder","navigator","mediaDevices","getUserMedia","theform","find","uploadwarning","recordingcontainer","on_recording_start","transcriber","transcriber_amazonstreaming","streamingresults","on_recording_end","attr","on_media_processing","eventdata","show","updatecontrol","val","mediaurl","length","stringify","hide","on_speech","speech","capturedspeech","speechresults","push","on_file_submitted","trigger","process_html","opts","controls","register_events"],"mappings":"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","sourcesContent":["\ndefine(['jquery', 'core/log','mod_solo/definitions','mod_solo/cloudpoodllloader','mod_solo/recorderhelper'],\n    function($, log, def, cloudpoodllloader,recorderhelper) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Recorder controller: initialising');\n\n    return {\n\n        //for making multiple instances\n        clone: function(){\n            return $.extend(true,{},this);\n        },\n\n        //pass in config, the jquery video/audio object, and a function to be called when conversion has finshed\n        init: function(props){\n            var dd = this.clone();\n\n            if(props.hasOwnProperty('token')){\n                //opts are passed in directly (probably from mustache template)\n                dd.activitydata = props;\n\n            }else {\n                //pick up opts from html (stashed in hidden form field)\n                var theid = '#amdopts_' + props.widgetid;\n                var configcontrol = $(theid).get(0);\n                if (configcontrol) {\n                    dd.activitydata = JSON.parse(configcontrol.value);\n                    dd.activitydata.widgetid  = props.widgetid;\n                    $(theid).remove();\n                } else {\n                    //if there is no config we might as well give up\n                    log.debug('solo Recorder Controller: No config found on page. Giving up.');\n                    return;\n                }\n            }\n\n            dd.cmid = props.cmid;\n            dd.recorderid = dd.activitydata.recorderid;\n            dd.updatecontrolid = dd.activitydata.widgetid + '_' + def.C_UPDATECONTROL;\n            dd.streamingresultsid = dd.activitydata.widgetid + def.C_STREAMINGCONTROL;\nlog.debug( dd.activitydata);\nlog.debug('updateid', dd.updatecontrolid);\n\n            //if the browser doesn't support html5 recording.\n            //then do not go any further\n            if(!dd.is_browser_ok()){\n                return;\n            }\n            \n            dd.setup_recorder();\n\n        },\n\n        is_browser_ok: function(){\n            return (navigator && navigator.mediaDevices\n                && navigator.mediaDevices.getUserMedia);\n        },\n\n\n        setup_recorder: function(){\n            var dd = this;\n            var theform = $('.mod_solo_step2').find('form');\n            var uploadwarning = $('.mod_solo_uploadwarning');\n            var recordingcontainer = $('.mod_solo_recordingcontainer');\n\n            //Set up the callback functions for the audio recorder\n\n            //originates from the recording:started event\n            //contains no meaningful data\n            //See https://api.poodll.com\n            var on_recording_start= function(eventdata){\n                //init streaming transcriber results\n                if(dd.activitydata.transcriber == def.transcriber_amazonstreaming) {\n                    dd.streamingresults = [];\n                }//end of if amazonstreaming\n            };\n\n            var on_speech = function (eventdata) {\n                var speech = eventdata.capturedspeech;\n                var speechresults = eventdata.speechresults;\n                if(dd.activitydata.transcriber == def.transcriber_amazonstreaming) {\n                    dd.streamingresults.push(speechresults);\n                    log.debug(dd.streamingresults);\n                }\n            };\n\n            //originates from the recording:ended event\n            //contains no meaningful data\n            //See https://api.poodll.com\n           var on_recording_end= function(eventdata){\n               $(\"button.mod_solo_step2_btn\").attr(\"disabled\",true);\n           };\n\n            //data sent here originates from the awaiting_processing event\n            //See https://api.poodll.com\n            var on_media_processing= function(eventdata){\n                uploadwarning.show();\n                var updatecontrol = $('#' + dd.updatecontrolid);\n                updatecontrol.val(eventdata.mediaurl);\n\n                if(dd.activitydata.transcriber == def.transcriber_amazonstreaming &&\n                    dd.streamingresults &&\n                    dd.streamingresults.length > 0){\n                    var streamingresults = $('#' + dd.streamingresultsid);\n                    streamingresults.val(JSON.stringify(dd.streamingresults));\n                }\n                recordingcontainer.hide();\n            };\n\n            //data sent here originates from the file_submitted event\n            //See https://api.poodll.com\n            var on_file_submitted= function(){\n                uploadwarning.hide();\n                /* disable cancel button because users can try to leave too soon */\n                $(\"button.mod_solo_step2_btn\").attr(\"disabled\",false);\n                $(\"button.mod_solo_step2_btn\").trigger('click');\n            };\n\n            //init the recorder\n            recorderhelper.init(dd.activitydata,\n                on_recording_start,\n                on_recording_end,\n                on_media_processing,\n                on_speech,\n                on_file_submitted);\n        },\n\n\n        process_html: function(){\n            var opts = this.activitydata;\n            //these css classes/ids are all passed in from php in\n            //renderer.php::fetch_activity_amd\n            var controls ={};\n            this.controls = controls;\n\n            //init drop downs\n\n        },\n\n        register_events: function() {\n            var dd = this;\n\n\n        }\n    };//end of returned object\n});//total end\n"],"file":"recordercontroller.min.js"}