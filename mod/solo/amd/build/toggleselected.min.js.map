{"version":3,"file":"toggleselected.min.js","sources":["../src/toggleselected.js"],"sourcesContent":["define(['jquery','core/log','mod_solo/definitions', 'core/notification'],\n    function($,log, def,notification) {\n    \"use strict\"; // jshint ;_;\n\n/*\nThis file contains class and ID definitions.\n */\n\n    log.debug('solo Toggle Selected: initialising');\n\n    return{\n\n        init: function(opts) {\n            this.register_events(opts['container'],opts['item'],opts['updatecontrol'],opts['mode'], opts['maxchecks']);\n            this.init_controls(opts['container'],opts['item'],opts['updatecontrol'],opts['mode']);\n        },\n\n        init_controls: function(container, item, control,mode){\n            var selectedvalue = $('[name=\"' + control + '\"]').val();\n            if(selectedvalue) {\n                //we could differentiate here between radio and checkbox modes, but split works for both\n                var selections = selectedvalue.split(',');\n                for(var i =0; i<selections.length;i++) {\n                    $('.' + container + ' .' + item).filter('[data-id=' + selections[i] + ']').addClass('active');\n                }\n            }\n        },\n\n        register_events: function(container,item,control, mode, maxchecks){\n            var thecontainer = $('.' + container);\n            thecontainer.on('click', '.' + item, function(e) {\n\n                //we set the new value AND trigger an event in case we are listening for one elsewhere\n                var updatecontrol =  $('[name=\"' + control + '\"]');\n                var clickednode = $(this);\n                var newdataid = clickednode.data('id');\n                switch(mode){\n                    case 'checkbox':\n\n                        var currentvalues =updatecontrol.val().split(',');\n                        if(currentvalues.includes(newdataid.toString())){\n                            currentvalues.splice(currentvalues.indexOf(newdataid.toString()),1);\n                        }else{\n                            if(currentvalues.length < maxchecks) {\n                                currentvalues.push(newdataid);\n                            }else{\n                                e.preventDefault();\n                                return;\n                            }\n                        }\n\n                        //clean up any empty values that somehow get in, then set it\n                        currentvalues = currentvalues.filter(function(e){return e});\n                        updatecontrol.val(currentvalues.join(','));\n                        break;\n\n                    case 'radio':\n                    default:\n                        updatecontrol.val(newdataid);\n\n                }\n               updatecontrol.trigger('change');\n            });\n        }\n\n};//end of return value\n\n});\n\n"],"names":["define","$","log","def","notification","debug","init","opts","register_events","init_controls","container","item","control","mode","selectedvalue","val","selections","split","i","length","filter","addClass","maxchecks","on","e","updatecontrol","newdataid","this","data","currentvalues","includes","toString","splice","indexOf","preventDefault","push","join","trigger"],"mappings":"AAAAA,iCAAO,CAAC,SAAS,WAAW,uBAAwB,sBAChD,SAASC,EAAEC,IAAKC,IAAIC,qBAOpBF,IAAIG,MAAM,sCAEJ,CAEFC,KAAM,SAASC,WACNC,gBAAgBD,KAAI,UAAcA,KAAI,KAASA,KAAI,cAAkBA,KAAI,KAAUA,KAAI,gBACvFE,cAAcF,KAAI,UAAcA,KAAI,KAASA,KAAI,cAAkBA,KAAI,OAGhFE,cAAe,SAASC,UAAWC,KAAMC,QAAQC,UACzCC,cAAgBb,EAAE,UAAYW,QAAU,MAAMG,SAC/CD,sBAEKE,WAAaF,cAAcG,MAAM,KAC7BC,EAAG,EAAGA,EAAEF,WAAWG,OAAOD,IAC9BjB,EAAE,IAAMS,UAAY,KAAOC,MAAMS,OAAO,YAAcJ,WAAWE,GAAK,KAAKG,SAAS,WAKhGb,gBAAiB,SAASE,UAAUC,KAAKC,QAASC,KAAMS,WACjCrB,EAAE,IAAMS,WACda,GAAG,QAAS,IAAMZ,MAAM,SAASa,OAGtCC,cAAiBxB,EAAE,UAAYW,QAAU,MAEzCc,UADczB,EAAE0B,MACQC,KAAK,SAExB,aADFf,UAGKgB,cAAeJ,cAAcV,MAAME,MAAM,QAC1CY,cAAcC,SAASJ,UAAUK,YAChCF,cAAcG,OAAOH,cAAcI,QAAQP,UAAUK,YAAY,OAChE,MACEF,cAAcV,OAASG,uBAGtBE,EAAEU,iBAFFL,cAAcM,KAAKT,WAQ3BG,cAAgBA,cAAcT,QAAO,SAASI,UAAUA,KACxDC,cAAcV,IAAIc,cAAcO,KAAK,WAKrCX,cAAcV,IAAIW,WAG3BD,cAAcY,QAAQ"}