{"version":3,"file":"popoverhelper.min.js","sources":["../src/popoverhelper.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_solo/dependencyloader', 'theme_boost/popover'], function ($, log) {\n    \"use strict\"; // jshint ;_;\n\n    /*\n    This file is to manage the transcript popover\n     */\n\n    log.debug('solo Popover helper: initialising');\n\n    return {\n\n        lastitem: false,\n        dispose: false, //Bv4 = dispose  Bv3 = destroy\n        transcripttitle: M.util.get_string('heard','mod_solo'),\n\n        init: function () {\n            this.register_events();\n        },\n\n        register_events: function () {\n           return;\n        },\n\n        //different bootstrap/popover versions have a different word for \"dispose\" so this method bridges that.\n        //we can not be sure what version is installed\n        disposeWord: function () {\n            if (this.dispose) {\n                return this.dispose;\n            }\n            var version = '3';\n            if ($.fn.popover.Constructor.hasOwnProperty('VERSION')) {\n                version = $.fn.popover.Constructor.VERSION.charAt(0);\n            }\n            switch (version) {\n                case '4':\n                    this.dispose = 'dispose';\n                    break;\n                case '3':\n                default:\n                    this.dispose = 'destroy';\n                    break;\n            }\n            return this.dispose;\n        },\n\n        remove: function (item) {\n            if (item) {\n                $(item).popover(this.disposeWord());\n            } else if (this.lastitem) {\n                $(this.lastitem).popover(this.disposeWord());\n                this.lastitem = false;\n            }\n        },\n\n        isShowing: function(item){\n            if(this.lastitem === item) {\n                return true;\n            }else{\n                return false;\n            }\n        },\n\n        addTranscript: function (item, transcript) {\n\n            //if we are already showing this item then dispose of it, set last item to null and go home\n            if (this.lastitem === item) {\n                $(this.lastitem).popover(this.disposeWord());\n                this.lastitem = false;\n                return;\n            }\n\n            //dispose of previous popover, and remember this one\n            if (this.lastitem) {\n                $(this.lastitem).popover(this.disposeWord());\n                this.lastitem = false;\n            }\n            this.lastitem = item;\n\n            //lets add the popover\n            $(item).popover({\n                title: this.transcripttitle,\n                content: transcript,\n                trigger: 'manual',\n                placement: 'top'\n            });\n            $(item).popover('show');\n        }\n\n    };//end of return value\n});"],"names":["define","$","log","debug","lastitem","dispose","transcripttitle","M","util","get_string","init","register_events","disposeWord","this","version","fn","popover","Constructor","hasOwnProperty","VERSION","charAt","remove","item","isShowing","addTranscript","transcript","title","content","trigger","placement"],"mappings":"AAAAA,gCAAO,CAAC,SAAU,WAAY,4BAA6B,wBAAwB,SAAUC,EAAGC,YAO5FA,IAAIC,MAAM,qCAEH,CAEHC,UAAU,EACVC,SAAS,EACTC,gBAAiBC,EAAEC,KAAKC,WAAW,QAAQ,YAE3CC,KAAM,gBACGC,mBAGTA,gBAAiB,aAMjBC,YAAa,cACLC,KAAKR,eACEQ,KAAKR,YAEZS,QAAU,OACVb,EAAEc,GAAGC,QAAQC,YAAYC,eAAe,aACxCJ,QAAUb,EAAEc,GAAGC,QAAQC,YAAYE,QAAQC,OAAO,IAG7C,MADDN,aAEKT,QAAU,oBAIVA,QAAU,iBAGhBQ,KAAKR,SAGhBgB,OAAQ,SAAUC,MACVA,KACArB,EAAEqB,MAAMN,QAAQH,KAAKD,eACdC,KAAKT,WACZH,EAAEY,KAAKT,UAAUY,QAAQH,KAAKD,oBACzBR,UAAW,IAIxBmB,UAAW,SAASD,aACbT,KAAKT,WAAakB,MAOzBE,cAAe,SAAUF,KAAMG,eAGvBZ,KAAKT,WAAakB,YAClBrB,EAAEY,KAAKT,UAAUY,QAAQH,KAAKD,yBACzBR,UAAW,GAKhBS,KAAKT,WACLH,EAAEY,KAAKT,UAAUY,QAAQH,KAAKD,oBACzBR,UAAW,QAEfA,SAAWkB,KAGhBrB,EAAEqB,MAAMN,QAAQ,CACZU,MAAOb,KAAKP,gBACZqB,QAASF,WACTG,QAAS,SACTC,UAAW,QAEf5B,EAAEqB,MAAMN,QAAQ"}