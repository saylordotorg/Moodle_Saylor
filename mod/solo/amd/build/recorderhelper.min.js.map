{"version":3,"file":"recorderhelper.min.js","sources":["../src/recorderhelper.js"],"sourcesContent":["define(['jquery','core/log','mod_solo/cloudpoodllloader'], function($,log, cloudpoodll) {\n    \"use strict\"; // jshint ;_;\n/*\nThis file sets up the cloud poodll recorder and passes on events to registered handlers\n */\n\n    log.debug('Recorder helper: initialising');\n\n    return{\n\n        status: 'stopped',\n\n        init: function(opts,on_recording_start,\n            on_recording_end,\n            on_media_processing,\n            on_speech,\n            on_file_submitted){\n\n            var that = this;\n            cloudpoodll.init(opts['recorderid'],\n\n                function(message){\n                    //console.log(message);\n                    switch(message.type){\n                        case 'recording':\n                            if(message.action==='started'){\n                                that.startbuttonclick();\n                                on_recording_start(message);\n\n                            }else if(message.action==='stopped'){\n                                that.stopbuttonclick();\n                                on_recording_end(message);\n                            }\n                            break;\n                        case 'awaitingprocessing':\n                            //awaitingprocessing fires often, but we only want to post once\n                            if(that.status!='posted') {\n                                on_media_processing(message);\n                            }\n                            that.status='posted';\n                            break;\n\n                        case 'filesubmitted':\n                            on_file_submitted();\n                            break;\n\n                        case 'speech':\n                            on_speech(message);\n                            break;\n\n                        case 'error':\n                            alert('PROBLEM:' + message.message);\n                            break;\n                    }\n                }\n            );\n        },\n        stopbuttonclick: function(){\n            this.status='stopped';\n            //do something\n        },\n        startbuttonclick: function(){\n            this.status='started';\n           //do something\n        }\n\n    };//end of return value\n});"],"names":["define","$","log","cloudpoodll","debug","status","init","opts","on_recording_start","on_recording_end","on_media_processing","on_speech","on_file_submitted","that","this","message","type","action","startbuttonclick","stopbuttonclick","alert"],"mappings":"AAAAA,iCAAO,CAAC,SAAS,WAAW,+BAA+B,SAASC,EAAEC,IAAKC,oBAMvED,IAAIE,MAAM,iCAEJ,CAEFC,OAAQ,UAERC,KAAM,SAASC,KAAKC,mBAChBC,iBACAC,oBACAC,UACAC,uBAEIC,KAAOC,KACXX,YAAYG,KAAKC,KAAI,YAEjB,SAASQ,gBAEEA,QAAQC,UACN,YACmB,YAAjBD,QAAQE,QACPJ,KAAKK,mBACLV,mBAAmBO,UAEG,YAAjBA,QAAQE,SACbJ,KAAKM,kBACLV,iBAAiBM,oBAGpB,qBAEe,UAAbF,KAAKR,QACJK,oBAAoBK,SAExBF,KAAKR,OAAO,mBAGX,gBACDO,8BAGC,SACDD,UAAUI,mBAGT,QACDK,MAAM,WAAaL,QAAQA,cAM/CI,gBAAiB,gBACRd,OAAO,WAGhBa,iBAAkB,gBACTb,OAAO"}