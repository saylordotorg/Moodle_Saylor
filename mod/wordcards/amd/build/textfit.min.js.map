{"version":3,"sources":["../src/textfit.js"],"names":["root","factory","define","amd","exports","module","textFit","global","defaultSettings","alignVert","alignHoriz","multiLine","detectMultiLine","minFontSize","maxFontSize","reProcess","widthOnly","alignVertWithFlexbox","els","options","settings","key","hasOwnProperty","toArray","elType","Object","prototype","toString","call","i","length","processItem","el","isElement","getAttribute","setAttribute","innerSpan","originalHeight","originalHTML","originalWidth","low","mid","high","innerHTML","innerWidth","innerHeight","Error","outerHTML","indexOf","document","createElement","className","style","appendChild","querySelector","hasClass","replace","scrollHeight","parseInt","window","getComputedStyle","fontSize","scrollWidth","addStyleSheet","height","clientHeight","getPropertyValue","clientWidth","o","HTMLElement","nodeType","nodeName","element","cls","getElementById","css","type","id","body"],"mappings":"mSAwBC,UAASA,CAAT,CAAeC,CAAf,CAAwB,CACrB,aAGA,GAAsB,UAAlB,QAAOC,CAAAA,MAAP,EAAgCA,MAAM,CAACC,GAA3C,CAAgD,CAE5CD,OAAM,yBAAC,EAAD,CAAKD,CAAL,CACT,CAHD,IAGO,IAAuB,QAAnB,uBAAOG,CAAAA,OAAP,qBAAOA,OAAP,EAAJ,CAAiC,CAEpCC,MAAM,CAACD,OAAP,CAAiBH,CAAO,EAC3B,CAHM,IAGA,CAEHD,CAAI,CAACM,OAAL,CAAeL,CAAO,EACzB,CAEJ,CAfA,EAemB,QAAlB,uBAAOM,CAAAA,MAAP,qBAAOA,MAAP,GAA6BA,MAA7B,CAAsC,IAfvC,CAe6C,UAAY,CACtD,aAEA,GAAIC,CAAAA,CAAe,CAAG,CAClBC,SAAS,GADS,CAElBC,UAAU,GAFQ,CAGlBC,SAAS,GAHS,CAIlBC,eAAe,GAJG,CAKlBC,WAAW,CAAE,CALK,CAMlBC,WAAW,CAAE,EANK,CAOlBC,SAAS,GAPS,CAQlBC,SAAS,GARS,CASlBC,oBAAoB,GATF,CAAtB,CAYA,MAAO,UAAiBC,CAAjB,CAAsBC,CAAtB,CAA+B,CAElC,GAAI,CAACA,CAAL,CAAcA,CAAO,CAAG,EAAV,CAGd,GAAIC,CAAAA,CAAQ,CAAG,EAAf,CACA,IAAI,GAAIC,CAAAA,CAAR,GAAeb,CAAAA,CAAf,CAA+B,CAC3B,GAAGW,CAAO,CAACG,cAAR,CAAuBD,CAAvB,CAAH,CAA+B,CAC3BD,CAAQ,CAACC,CAAD,CAAR,CAAgBF,CAAO,CAACE,CAAD,CAC1B,CAFD,IAEO,CACHD,CAAQ,CAACC,CAAD,CAAR,CAAgBb,CAAe,CAACa,CAAD,CAClC,CACJ,CAGD,GAA2B,UAAvB,QAAOH,CAAAA,CAAG,CAACK,OAAf,CAAuC,CACnCL,CAAG,CAAGA,CAAG,CAACK,OAAJ,EACT,CAGD,GAAIC,CAAAA,CAAM,CAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BV,CAA/B,CAAb,CACA,GAAe,gBAAX,GAAAM,CAAM,EAAoC,mBAAX,GAAAA,CAA/B,EACW,yBAAX,GAAAA,CADJ,CACyC,CACrCN,CAAG,CAAG,CAACA,CAAD,CACT,CAGD,IAAI,GAAIW,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGX,CAAG,CAACY,MAAvB,CAA+BD,CAAC,EAAhC,CAAmC,CAC/BE,CAAW,CAACb,CAAG,CAACW,CAAD,CAAJ,CAAST,CAAT,CACd,CACJ,CA9BD,CAqCA,QAASW,CAAAA,CAAT,CAAqBC,CAArB,CAAyBZ,CAAzB,CAAkC,CAC9B,GAAI,CAACa,CAAS,CAACD,CAAD,CAAV,EAAmB,CAACZ,CAAQ,CAACL,SAAV,EAAuBiB,CAAE,CAACE,YAAH,CAAgB,YAAhB,CAA9C,CAA8E,CAC1E,QACH,CAGD,GAAG,CAACd,CAAQ,CAACL,SAAb,CAAuB,CACnBiB,CAAE,CAACG,YAAH,CAAgB,YAAhB,CAA8B,CAA9B,CACH,CAR6B,GAU1BC,CAAAA,CAV0B,CAUfC,CAVe,CAUCC,CAVD,CAUeC,CAVf,CAW1BC,CAX0B,CAWrBC,CAXqB,CAWhBC,CAXgB,CAc9BJ,CAAY,CAAGN,CAAE,CAACW,SAAlB,CACAJ,CAAa,CAAGK,CAAU,CAACZ,CAAD,CAA1B,CACAK,CAAc,CAAGQ,CAAW,CAACb,CAAD,CAA5B,CAGA,GAAI,CAACO,CAAD,EAAmB,CAACnB,CAAQ,CAACJ,SAAV,EAAuB,CAACqB,CAA/C,CAAgE,CAC5D,GAAG,CAACjB,CAAQ,CAACJ,SAAb,CACI,KAAM,IAAI8B,CAAAA,KAAJ,CAAU,uDAAyDd,CAAE,CAACe,SAA5D,CACZ,wBADE,CAAN,CADJ,IAII,MAAM,IAAID,CAAAA,KAAJ,CAAU,4CAA8Cd,CAAE,CAACe,SAAjD,CACZ,wBADE,CAEb,CAGD,GAA2C,CAAC,CAAxC,GAAAT,CAAY,CAACU,OAAb,CAAqB,YAArB,CAAJ,CAA+C,CAC3CZ,CAAS,CAAGa,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAZ,CACAd,CAAS,CAACe,SAAV,CAAsB,YAAtB,CAGAf,CAAS,CAACgB,KAAV,SAA6B,cAA7B,CACAhB,CAAS,CAACO,SAAV,CAAsBL,CAAtB,CACAN,CAAE,CAACW,SAAH,CAAe,EAAf,CACAX,CAAE,CAACqB,WAAH,CAAejB,CAAf,CACH,CATD,IASO,CAEHA,CAAS,CAAGJ,CAAE,CAACsB,aAAH,CAAiB,iBAAjB,CAAZ,CAEA,GAAIC,CAAQ,CAACnB,CAAD,CAAY,kBAAZ,CAAZ,CAA4C,CACxCA,CAAS,CAACe,SAAV,CAAsBf,CAAS,CAACe,SAAV,CAAoBK,OAApB,CAA4B,kBAA5B,CAAgD,EAAhD,CAAtB,CACApB,CAAS,CAACgB,KAAV,QAA4B,EAA5B,CACApB,CAAE,CAACmB,SAAH,CAAaK,OAAb,CAAqB,sBAArB,CAA6C,EAA7C,CACH,CACJ,CAGD,GAAIpC,CAAQ,CAACV,UAAb,CAAyB,CACrBsB,CAAE,CAACoB,KAAH,CAAS,YAAT,EAAyB,QAAzB,CACAhB,CAAS,CAACgB,KAAV,CAAgB,YAAhB,EAAgC,QACnC,CAID,GAAIzC,CAAAA,CAAS,CAAGS,CAAQ,CAACT,SAAzB,CACA,GAAIS,CAAQ,CAACR,eAAT,EAA4B,CAACD,CAA7B,EACAyB,CAAS,CAACqB,YAAV,EAA0F,CAAhE,CAAAC,QAAQ,CAACC,MAAM,CAACC,gBAAP,CAAwBxB,CAAxB,EAAmC,WAAnC,CAAD,CAAkD,EAAlD,CADtC,CACgG,CAC5FzB,CAAS,GACZ,CAGD,GAAI,CAACA,CAAL,CAAgB,CACZqB,CAAE,CAACoB,KAAH,CAAS,aAAT,EAA0B,QAC7B,CAEDZ,CAAG,CAAGpB,CAAQ,CAACP,WAAT,CAAuB,CAA7B,CACA6B,CAAI,CAAGtB,CAAQ,CAACN,WAAT,CAAuB,CAA9B,CAGA,MAAO0B,CAAG,EAAIE,CAAd,CAAoB,CAChBD,CAAG,CAAGiB,QAAQ,CAAC,CAAClB,CAAG,CAAGE,CAAP,EAAe,CAAhB,CAAmB,EAAnB,CAAd,CACAN,CAAS,CAACgB,KAAV,CAAgBS,QAAhB,CAA2BpB,CAAG,CAAG,IAAjC,CACA,GAAGL,CAAS,CAAC0B,WAAV,EAAyBvB,CAAzB,GAA2CnB,CAAQ,CAACJ,SAAT,EAAsBoB,CAAS,CAACqB,YAAV,EAA0BpB,CAA3F,CAAH,CAA8G,CAC1GG,CAAG,CAAGC,CAAG,CAAG,CACf,CAFD,IAEO,CACHC,CAAI,CAAGD,CAAG,CAAG,CAChB,CACJ,CAEDL,CAAS,CAACgB,KAAV,CAAgBS,QAAhB,CAA4BpB,CAAG,CAAG,CAAP,CAAY,IAAvC,CAGA,GAAIrB,CAAQ,CAACX,SAAb,CAAwB,CACpBsD,CAAa,GACb,GAAIC,CAAAA,CAAM,CAAG5B,CAAS,CAACqB,YAAvB,CACA,GAAgD,QAA5C,GAAAE,MAAM,CAACC,gBAAP,CAAwB5B,CAAxB,UAAJ,CAAyD,CACrDA,CAAE,CAACoB,KAAH,UAAuB,UAC1B,CACD,GAAI,CAACG,CAAQ,CAACnB,CAAD,CAAY,kBAAZ,CAAb,CAA6C,CACzCA,CAAS,CAACe,SAAV,CAAsBf,CAAS,CAACe,SAAV,CAAsB,mBAC/C,CACDf,CAAS,CAACgB,KAAV,QAA4BY,CAAM,CAAG,IAArC,CACA,GAAI5C,CAAQ,CAACH,oBAAT,EAAiC,CAACsC,CAAQ,CAACvB,CAAD,CAAK,sBAAL,CAA9C,CAA4E,CACxEA,CAAE,CAACmB,SAAH,CAAenB,CAAE,CAACmB,SAAH,CAAe,uBACjC,CACJ,CACJ,CAGD,QAASN,CAAAA,CAAT,CAAqBb,CAArB,CAAwB,CACpB,GAAIoB,CAAAA,CAAK,CAAGO,MAAM,CAACC,gBAAP,CAAwB5B,CAAxB,CAA4B,IAA5B,CAAZ,CACA,MAAOA,CAAAA,CAAE,CAACiC,YAAH,CACHP,QAAQ,CAACN,CAAK,CAACc,gBAAN,CAAuB,aAAvB,CAAD,CAAwC,EAAxC,CADL,CAEHR,QAAQ,CAACN,CAAK,CAACc,gBAAN,CAAuB,gBAAvB,CAAD,CAA2C,EAA3C,CACf,CAGD,QAAStB,CAAAA,CAAT,CAAoBZ,CAApB,CAAuB,CACnB,GAAIoB,CAAAA,CAAK,CAAGO,MAAM,CAACC,gBAAP,CAAwB5B,CAAxB,CAA4B,IAA5B,CAAZ,CACA,MAAOA,CAAAA,CAAE,CAACmC,WAAH,CACHT,QAAQ,CAACN,CAAK,CAACc,gBAAN,CAAuB,cAAvB,CAAD,CAAyC,EAAzC,CADL,CAEHR,QAAQ,CAACN,CAAK,CAACc,gBAAN,CAAuB,eAAvB,CAAD,CAA0C,EAA1C,CACf,CAGD,QAASjC,CAAAA,CAAT,CAAmBmC,CAAnB,CAAqB,CACjB,MAC2B,QAAvB,uBAAOC,CAAAA,WAAP,qBAAOA,WAAP,GAAkCD,CAAC,WAAYC,CAAAA,WAA/C,CACID,CAAC,EAAiB,QAAb,WAAOA,CAAP,CAAL,EAAoC,IAAN,GAAAA,CAA9B,EAA2D,CAAf,GAAAA,CAAC,CAACE,QAA9C,EAAoF,QAApB,QAAOF,CAAAA,CAAC,CAACG,QAEpF,CAED,QAAShB,CAAAA,CAAT,CAAkBiB,CAAlB,CAA2BC,CAA3B,CAAgC,CAC5B,MAAkE,CAAC,CAA5D,EAAC,IAAMD,CAAO,CAACrB,SAAd,CAA0B,GAA3B,EAAgCH,OAAhC,CAAwC,IAAMyB,CAAN,CAAY,GAApD,CACV,CAGD,QAASV,CAAAA,CAAT,EAAyB,CACrB,GAAId,QAAQ,CAACyB,cAAT,CAAwB,mBAAxB,CAAJ,CAAkD,OAD7B,GAkBjBC,CAAAA,CAAG,CAAG1B,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAlBW,CAmBrByB,CAAG,CAACC,IAAJ,CAAW,UAAX,CACAD,CAAG,CAACE,EAAJ,CAAS,mBAAT,CACAF,CAAG,CAAChC,SAAJ,wPACAM,QAAQ,CAAC6B,IAAT,CAAczB,WAAd,CAA0BsB,CAA1B,CACH,CACJ,CA7NA,CAAD","sourcesContent":["/**\r\n * Apps4EFL module.\r\n *\r\n * @package mod_wordcards\r\n * @author  Justin Hunt - poodll.com\r\n * (based on Paul Raine's APPs 4 EFL)\r\n */\r\n\r\n\r\n/**\r\n * textFit v2.3.1\r\n * Previously known as jQuery.textFit\r\n * 11/2014 by STRML (strml.github.com)\r\n * MIT License\r\n *\r\n * To use: textFit(document.getElementById('target-div'), options);\r\n *\r\n * Will make the *text* content inside a container scale to fit the container\r\n * The container is required to have a set width and height\r\n * Uses binary search to fit text with minimal layout calls.\r\n * Version 2.0 does not use jQuery.\r\n */\r\n/*global define:true, document:true, window:true, HTMLElement:true*/\r\n\r\n(function(root, factory) {\r\n    \"use strict\";\r\n\r\n    // UMD shim\r\n    if (typeof define === \"function\" && define.amd) {\r\n        // AMD\r\n        define([], factory);\r\n    } else if (typeof exports === \"object\") {\r\n        // Node/CommonJS\r\n        module.exports = factory();\r\n    } else {\r\n        // Browser\r\n        root.textFit = factory();\r\n    }\r\n\r\n}(typeof global === \"object\" ? global : this, function () {\r\n    \"use strict\";\r\n\r\n    var defaultSettings = {\r\n        alignVert: false, // if true, textFit will align vertically using css tables\r\n        alignHoriz: false, // if true, textFit will set text-align: center\r\n        multiLine: false, // if true, textFit will not set white-space: no-wrap\r\n        detectMultiLine: true, // disable to turn off automatic multi-line sensing\r\n        minFontSize: 6,\r\n        maxFontSize: 80,\r\n        reProcess: true, // if true, textFit will re-process already-fit nodes. Set to 'false' for better performance\r\n        widthOnly: false, // if true, textFit will fit text to element width, regardless of text height\r\n        alignVertWithFlexbox: false, // if true, textFit will use flexbox for vertical alignment\r\n    };\r\n\r\n    return function textFit(els, options) {\r\n\r\n        if (!options) options = {};\r\n\r\n        // Extend options.\r\n        var settings = {};\r\n        for(var key in defaultSettings){\r\n            if(options.hasOwnProperty(key)){\r\n                settings[key] = options[key];\r\n            } else {\r\n                settings[key] = defaultSettings[key];\r\n            }\r\n        }\r\n\r\n        // Convert jQuery objects into arrays\r\n        if (typeof els.toArray === \"function\") {\r\n            els = els.toArray();\r\n        }\r\n\r\n        // Support passing a single el\r\n        var elType = Object.prototype.toString.call(els);\r\n        if (elType !== '[object Array]' && elType !== '[object NodeList]' &&\r\n            elType !== '[object HTMLCollection]'){\r\n            els = [els];\r\n        }\r\n\r\n        // Process each el we've passed.\r\n        for(var i = 0; i < els.length; i++){\r\n            processItem(els[i], settings);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * The meat. Given an el, make the text inside it fit its parent.\r\n     * @param  {DOMElement} el       Child el.\r\n     * @param  {Object} settings     Options for fit.\r\n     */\r\n    function processItem(el, settings){\r\n        if (!isElement(el) || (!settings.reProcess && el.getAttribute('textFitted'))) {\r\n            return false;\r\n        }\r\n\r\n        // Set textFitted attribute so we know this was processed.\r\n        if(!settings.reProcess){\r\n            el.setAttribute('textFitted', 1);\r\n        }\r\n\r\n        var innerSpan, originalHeight, originalHTML, originalWidth;\r\n        var low, mid, high;\r\n\r\n        // Get element data.\r\n        originalHTML = el.innerHTML;\r\n        originalWidth = innerWidth(el);\r\n        originalHeight = innerHeight(el);\r\n\r\n        // Don't process if we can't find box dimensions\r\n        if (!originalWidth || (!settings.widthOnly && !originalHeight)) {\r\n            if(!settings.widthOnly)\r\n                throw new Error('Set a static height and width on the target element ' + el.outerHTML +\r\n                    ' before using textFit!');\r\n            else\r\n                throw new Error('Set a static width on the target element ' + el.outerHTML +\r\n                    ' before using textFit!');\r\n        }\r\n\r\n        // Add textFitted span inside this container.\r\n        if (originalHTML.indexOf('textFitted') === -1) {\r\n            innerSpan = document.createElement('span');\r\n            innerSpan.className = 'textFitted';\r\n            // Inline block ensure it takes on the size of its contents, even if they are enclosed\r\n            // in other tags like <p>\r\n            innerSpan.style['display'] = 'inline-block';\r\n            innerSpan.innerHTML = originalHTML;\r\n            el.innerHTML = '';\r\n            el.appendChild(innerSpan);\r\n        } else {\r\n            // Reprocessing.\r\n            innerSpan = el.querySelector('span.textFitted');\r\n            // Remove vertical align if we're reprocessing.\r\n            if (hasClass(innerSpan, 'textFitAlignVert')){\r\n                innerSpan.className = innerSpan.className.replace('textFitAlignVert', '');\r\n                innerSpan.style['height'] = '';\r\n                el.className.replace('textFitAlignVertFlex', '');\r\n            }\r\n        }\r\n\r\n        // Prepare & set alignment\r\n        if (settings.alignHoriz) {\r\n            el.style['text-align'] = 'center';\r\n            innerSpan.style['text-align'] = 'center';\r\n        }\r\n\r\n        // Check if this string is multiple lines\r\n        // Not guaranteed to always work if you use wonky line-heights\r\n        var multiLine = settings.multiLine;\r\n        if (settings.detectMultiLine && !multiLine &&\r\n            innerSpan.scrollHeight >= parseInt(window.getComputedStyle(innerSpan)['font-size'], 10) * 2){\r\n            multiLine = true;\r\n        }\r\n\r\n        // If we're not treating this as a multiline string, don't let it wrap.\r\n        if (!multiLine) {\r\n            el.style['white-space'] = 'nowrap';\r\n        }\r\n\r\n        low = settings.minFontSize + 1;\r\n        high = settings.maxFontSize + 1;\r\n\r\n        // Binary search for best fit\r\n        while (low <= high) {\r\n            mid = parseInt((low + high) / 2, 10);\r\n            innerSpan.style.fontSize = mid + 'px';\r\n            if(innerSpan.scrollWidth <= originalWidth && (settings.widthOnly || innerSpan.scrollHeight <= originalHeight)){\r\n                low = mid + 1;\r\n            } else {\r\n                high = mid - 1;\r\n            }\r\n        }\r\n        // Sub 1 at the very end, this is closer to what we wanted.\r\n        innerSpan.style.fontSize = (mid - 1) + 'px';\r\n\r\n        // Our height is finalized. If we are aligning vertically, set that up.\r\n        if (settings.alignVert) {\r\n            addStyleSheet();\r\n            var height = innerSpan.scrollHeight;\r\n            if (window.getComputedStyle(el)['position'] === \"static\"){\r\n                el.style['position'] = 'relative';\r\n            }\r\n            if (!hasClass(innerSpan, \"textFitAlignVert\")){\r\n                innerSpan.className = innerSpan.className + \" textFitAlignVert\";\r\n            }\r\n            innerSpan.style['height'] = height + \"px\";\r\n            if (settings.alignVertWithFlexbox && !hasClass(el, \"textFitAlignVertFlex\")) {\r\n                el.className = el.className + \" textFitAlignVertFlex\";\r\n            }\r\n        }\r\n    }\r\n\r\n    // Calculate height without padding.\r\n    function innerHeight(el){\r\n        var style = window.getComputedStyle(el, null);\r\n        return el.clientHeight -\r\n            parseInt(style.getPropertyValue('padding-top'), 10) -\r\n            parseInt(style.getPropertyValue('padding-bottom'), 10);\r\n    }\r\n\r\n    // Calculate width without padding.\r\n    function innerWidth(el){\r\n        var style = window.getComputedStyle(el, null);\r\n        return el.clientWidth -\r\n            parseInt(style.getPropertyValue('padding-left'), 10) -\r\n            parseInt(style.getPropertyValue('padding-right'), 10);\r\n    }\r\n\r\n    //Returns true if it is a DOM element\r\n    function isElement(o){\r\n        return (\r\n            typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\r\n                o && typeof o === \"object\" && o !== null && o.nodeType === 1 && typeof o.nodeName===\"string\"\r\n        );\r\n    }\r\n\r\n    function hasClass(element, cls) {\r\n        return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;\r\n    }\r\n\r\n    // Better than a stylesheet dependency\r\n    function addStyleSheet() {\r\n        if (document.getElementById(\"textFitStyleSheet\")) return;\r\n        var style = [\r\n            \".textFitAlignVert{\",\r\n            \"position: absolute;\",\r\n            \"top: 0; right: 0; bottom: 0; left: 0;\",\r\n            \"margin: auto;\",\r\n            \"display: flex;\",\r\n            \"justify-content: center;\",\r\n            \"flex-direction: column;\",\r\n            \"}\",\r\n            \".textFitAlignVertFlex{\",\r\n            \"display: flex;\",\r\n            \"}\",\r\n            \".textFitAlignVertFlex .textFitAlignVert{\",\r\n            \"position: static;\",\r\n            \"}\",].join(\"\");\r\n\r\n        var css = document.createElement(\"style\");\r\n        css.type = \"text/css\";\r\n        css.id = \"textFitStyleSheet\";\r\n        css.innerHTML = style;\r\n        document.body.appendChild(css);\r\n    }\r\n}));"],"file":"textfit.min.js"}