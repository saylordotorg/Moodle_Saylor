define(["jquery","core/log","mod_wordcards/ttaudiohelper","core/notification","mod_wordcards/ttbrowserrec"],(function($,log,audioHelper,notification,browserRec){return log.debug("TT Recorder: initialising"),{waveHeight:75,audio:{stream:null,blob:null,dataURI:null,start:null,end:null,isRecording:!1,isRecognizing:!1,transcript:null},submitting:!1,owner:"",controls:{},uniqueid:null,audio_updated:null,maxTime:15e3,passagehash:null,region:null,asrurl:null,lang:null,browserrec:null,usebrowserrec:!1,currentTime:0,stt_guided:!1,clone:function(){return $.extend(!0,{},this)},init:function(opts){var that=this;this.uniqueid=opts.uniqueid,this.callback=opts.callback,this.stt_guided=!!opts.stt_guided&&opts.stt_guided,this.prepare_html(),this.controls.recordercontainer.show(),this.register_events();var on_error=function(error){switch(error.name){case"PermissionDeniedError":case"NotAllowedError":notification.alert("Error","Please allow access to your microphone!","OK");break;case"DevicesNotFoundError":case"NotFoundError":notification.alert("Error","No microphone detected!","OK");break;default:log.debug("Error",error.name)}};browserRec.will_work_ok()&&!this.stt_guided?(log.debug("using browser rec"),this.browserrec=browserRec.clone(),this.browserrec.init(this.lang,this.waveHeight,this.uniqueid),this.usebrowserrec=!0,that.browserrec.onerror=on_error,that.browserrec.onend=function(){},that.browserrec.onstart=function(){},that.browserrec.onfinalspeechcapture=function(speechtext){that.gotRecognition(speechtext),that.update_audio("isRecording",!1),that.update_audio("isRecognizing",!1)}):(log.debug("using ds rec"),this.audiohelper=audioHelper.clone(),this.audiohelper.init(this.waveHeight,this.uniqueid,this),that.audiohelper.onError=on_error,that.audiohelper.onStop=function(blob){clearInterval(that.interval);var newaudio={blob:blob,dataURI:URL.createObjectURL(blob),end:new Date,isRecording:!1,length:Math.round((that.audio.end-that.audio.start)/1e3)};that.update_audio(newaudio),that.deepSpeech2(that.audio.blob,(function(response){log.debug(response),that.update_audio("isRecognizing",!1),"success"===response.data.result&&response.data.transcript?that.gotRecognition(response.data.transcript.trim()):notification.alert("Information","We could not recognize your speech.","OK")}))},that.audiohelper.onStream=function(stream){var newaudio={stream:stream,isRecording:!0};that.update_audio(newaudio),that.currentTime=0,that.interval=setInterval((function(){that.currentTime<that.maxTime?that.currentTime+=10:(that.update_audio("isRecognizing",!0),that.audiohelper.stop())}),10)})},prepare_html:function(){this.controls.recordercontainer=$("#ttrec_container_"+this.uniqueid),this.controls.recorderbutton=$("#ttrec_"+this.uniqueid+"_recorderdiv"),this.passagehash=this.controls.recorderbutton.data("passagehash"),this.region=this.controls.recorderbutton.data("region"),this.asrurl=this.controls.recorderbutton.data("asrurl"),this.lang=this.controls.recorderbutton.data("lang"),this.maxTime=this.controls.recorderbutton.data("maxtime"),this.waveHeight=this.controls.recorderbutton.data("waveheight")},update_audio:function(newprops,val){if("string"==typeof newprops)log.debug("update_audio:"+newprops+":"+val),this.audio[newprops]!==val&&(this.audio[newprops]=val,this.audio_updated());else{for(var theprop in newprops)this.audio[theprop]=newprops[theprop],log.debug("update_audio:"+theprop+":"+newprops[theprop]);this.audio_updated()}},register_events:function(){var that=this;this.controls.recordercontainer.click((function(){that.toggleRecording()})),this.audio_updated=function(){that.audio.isRecognizing?that.show_recorder_pointer("none"):that.show_recorder_pointer("auto"),that.audio.isRecognizing||that.audio.isRecording?this.controls.recorderbutton.css("background","#e52"):this.controls.recorderbutton.css("background","green"),that.controls.recorderbutton.html(that.recordBtnContent())}},show_recorder_pointer:function(show){show?this.controls.recorderbutton.css("pointer-events","none"):this.controls.recorderbutton.css("pointer-events","auto")},gotRecognition:function(transcript){log.debug("transcript:"+transcript);var message={type:"speech"};message.capturedspeech=transcript,this.callback(message)},cleanWord:function(word){return word.replace(/['!"#$%&\\'()\*+,\-\.\/:;<=>?@\[\\\]\^_`{|}~']/g,"").toLowerCase()},recordBtnContent:function(){return this.audio.isRecognizing?'<i class="fa fa-spinner fa-spin">':this.audio.isRecording?'<i class="fa fa-stop">':'<i class="fa fa-microphone">'},toggleRecording:function(){var that=this;if(this.audio.isRecording)this.usebrowserrec?(clearInterval(that.interval),that.update_audio("isRecording",!1),that.update_audio("isRecognizing",!0),this.browserrec.stop()):(this.update_audio("isRecognizing",!0),this.audiohelper.stop());else if(this.usebrowserrec)this.update_audio("isRecording",!0),this.browserrec.start(),that.currentTime=0,this.interval=setInterval((function(){that.currentTime<that.maxTime?that.currentTime+=10:(that.update_audio("isRecording",!1),that.update_audio("isRecognizing",!0),clearInterval(that.interval),that.browserrec.stop())}),10);else{var newaudio={stream:null,blob:null,dataURI:null,start:new Date,end:null,isRecording:!1,isRecognizing:!1,transcript:null};this.update_audio(newaudio),this.audiohelper.start()}},deepSpeech2:function(blob,callback){var bodyFormData=new FormData,blobname=this.uniqueid+Math.floor(100*Math.random())+".wav";bodyFormData.append("audioFile",blob,blobname),bodyFormData.append("scorer",this.passagehash),bodyFormData.append("lang",this.lang),bodyFormData.append("wwwroot",M.cfg.wwwroot),this.stt_guided?bodyFormData.append("strictmode","false"):bodyFormData.append("strictmode","true");var oReq=new XMLHttpRequest;oReq.open("POST",this.asrurl,!0),oReq.onUploadProgress=function(progressEvent){},oReq.onload=function(oEvent){200===oReq.status?callback(JSON.parse(oReq.response)):(callback({data:{result:"error"}}),console.error(oReq.error))};try{oReq.send(bodyFormData)}catch(err){callback({data:{result:"error"}}),console.error(err)}}}}));

//# sourceMappingURL=ttrecorder.min.js.map