<div id="cards-page-{{uniqid}}">
    <div class="wordcards_timer">00:00:00</div>
    <div id="wordcards" class="wordcards">
        <div class="congrats">
          <div class="wordcards_congrats">{{{finishedstepmsg}}}</div>
          {{#hascontinue}}
              <button data-href="{{{nexturl}}}" class="btn btn-primary wordcards-continue-button">{{continue}}</button>
          {{/hascontinue}}
        </div>
    </div>

</div>

{{#js}}
    require(['jquery', 'mod_wordcards/cards', './amd/src/easytimer.js'], function($, Cards, Timer) {
        var container = $('#cards-page-{{uniqid}}'),
            modid = {{modid}},
            canmanage = {{canmanage}},
            cards = container.find('.wordcards'),
            btn = container.find('.wordcards-continue-button'),
            timer = new Timer();

        var inst = new Cards(cards, {{{definitionsjson}}});

        function displayfinishmessage() {
            // replace [[time]] by <span class="wordcards_timer_time">00:00:00</span>
            var convertedfinishedstepmsg = $('.wordcards_congrats').text().replace("[[time]]", "<span class=\"wordcards_timer_time\">00:00:00</span>");
            $('.wordcards_congrats').html(convertedfinishedstepmsg);

            $('.wordcards_timer_time').text(timer.getTimeValues().toString(['minutes', 'seconds', 'secondTenths']));
            $('.wordcards_timer').css('display', 'none');
            container.find('.congrats').css('display', 'block');
        }

        if (canmanage) {
            inst.setDryRun(true);
        }
        inst.init();

        {{#hascontinue}}
            btn.on('click', function() {
                location.href = $(this).data('href');
            });
            if (!canmanage) {
                btn.prop('disabled', true);
            }
            inst.on('complete', function() {

                {{#completeafterlocal}}
                    var redirecturl = "{{{nexturl}}}";
                    window.location.replace(redirecturl.replace(/&amp;/g,'&') + "&localscattertime=" +  timer.getTotalTimeValues().seconds);
                    return;
                {{/completeafterlocal}}

                {{#isglobalscatter}}
                    var redirecturl = "{{{nexturl}}}";
                    window.location.replace(redirecturl.replace(/&amp;/g,'&') + "&globalscattertime=" + timer.getTotalTimeValues().seconds);
                    return;
                {{/isglobalscatter}}

                btn.prop('disabled', false);

                displayfinishmessage();

                timer.stop();

            });
        {{/hascontinue}}

        {{#isglobalcompleted}}
            inst.on('complete', function() {
                displayfinishmessage();
                timer.stop();
            });
        {{/isglobalcompleted}}

        // Move the wordcards on top of screen.
        $(window).scrollTop($('#wordcards').offset().top - 45);

        // Set timer.
        $('.wordcards_timer').css('display', 'block');
        timer.start({precision: 'secondTenths', callback: function (values) {
            $('.wordcards_timer').html(values.toString(['minutes', 'seconds', 'secondTenths']));
        }});
        timer.addEventListener('secondsUpdated', function (e) {
            $('.wordcards_timer .values').html(timer.getTimeValues().toString(['minutes', 'seconds', 'secondTenths']));
        });
    });

{{/js}}
