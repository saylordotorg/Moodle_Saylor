{"version":3,"sources":["../src/questionnaire.js"],"names":["selectors","commentItem","questionnaireTable","ratingOption","questionItem","responses","init","registerEvents","questionItems","document","querySelectorAll","forEach","option","getAttribute","querySelector","fromUser","toUser","threesixtyId","promises","Ajax","call","methodname","args","threesixtyid","fromuserid","touserid","then","result","response","item","value","responseItemId","parseInt","questionItemId","options","length","selectedValue","handleOptionActivation","commentTextArea","catch","Notification","exception","addEventListener","e","target","closest","checked","ratingOptionLabel","classList","add","remove","btnSaveFeedback","getElementById","saveResponses","btnSubmitFeedback","optionGroup","itemId","optionLabel","nextElementSibling","contains","selectedLabel","finalise","comments","comment","trim","toUserFullname","anonymous","key","component","param","messages","showConfirmationDialogue","submitResponses","complete","redirectUrl","redirurl","message","window","location","title","confirmationMessage","confirmButtonText","ModalFactory","create","body","large","type","types","SAVE_CANCEL","confirmModal","setSaveButtonText","show","getRoot","on","ModalEvents","hidden","setBody","save"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Questionnaire JS module.\n *\n * @module     mod_threesixo/questionnaire\n * @class      questionnaire\n * @copyright  2016 Jun Pataleta <jun@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Notification from 'core/notification';\nimport Ajax from 'core/ajax';\nimport {get_string as getString, get_strings as getStrings} from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {add as addToast} from 'core/toast';\n\n/**\n * Selectors for the questionnaire page.\n *\n * @type {{questionItem: string, questionnaireTable: string, ratingOption: string, commentItem: string}}\n */\nconst selectors = {\n    commentItem: 'textarea[data-region=\"comment-item\"]',\n    questionnaireTable: '[data-region=\"questionnaire\"]',\n    ratingOption: 'input[type=radio]',\n    questionItem: '[data-region=\"question-item\"]',\n};\n\n/**\n * Array of responses to the items in the questionnaire with item ID for the key and the response for the value.\n */\nconst responses = [];\n\n/**\n * Initialiser function.\n */\nexport const init = () => {\n    registerEvents();\n\n    const questionItems = document.querySelectorAll(selectors.questionItem);\n    questionItems.forEach(option => {\n        responses[option.getAttribute('data-itemid')] = null;\n    });\n\n    const questionnaireTable = document.querySelector(selectors.questionnaireTable);\n    const fromUser = questionnaireTable.getAttribute('data-fromuserid');\n    const toUser = questionnaireTable.getAttribute('data-touserid');\n    const threesixtyId = questionnaireTable.getAttribute('data-threesixtyid');\n\n    const promises = Ajax.call([\n        {\n            methodname: 'mod_threesixo_get_responses',\n            args: {\n                threesixtyid: threesixtyId,\n                fromuserid: fromUser,\n                touserid: toUser\n            }\n        }\n    ]);\n\n    promises[0].then(result => {\n        result.responses.forEach(response => {\n            responses[response.item] = response.value;\n            const responseItemId = parseInt(response.item);\n\n            questionItems.forEach(questionItem => {\n                const questionItemId = parseInt(questionItem.getAttribute('data-itemid'));\n                if (questionItemId === responseItemId) {\n                    const options = questionItem.querySelectorAll(selectors.ratingOption);\n                    if (options.length) {\n                        // Ratings.\n                        options.forEach(option => {\n                            // Mark selected option as selected.\n                            const selectedValue = option.value;\n                            if (selectedValue === response.value) {\n                                handleOptionActivation(option);\n                            }\n                        });\n                    } else {\n                        // Comments.\n                        const commentTextArea = questionItem.querySelector(selectors.commentItem);\n                        if (commentTextArea) {\n                            commentTextArea.value = response.value;\n                        }\n                    }\n                }\n            });\n        });\n        return true;\n    }).catch(Notification.exception);\n};\n\n/**\n * Registers the event listeners for the questionnaire.\n */\nconst registerEvents = () => {\n    document.addEventListener('change', e => {\n        const ratingOption = e.target.closest(selectors.ratingOption);\n        if (ratingOption) {\n            if (ratingOption.checked) {\n                handleOptionActivation(ratingOption);\n            }\n        }\n    });\n\n    document.addEventListener('click', e => {\n        const ratingOption = e.target.closest(selectors.ratingOption);\n        if (ratingOption) {\n            const ratingOptionLabel = ratingOption.closest('label');\n            if (ratingOptionLabel) {\n                ratingOptionLabel.classList.add('focus');\n            }\n        }\n    });\n\n    document.addEventListener('blur', e => {\n        const ratingOption = e.target.closest(selectors.ratingOption);\n        if (ratingOption) {\n            const ratingOptionLabel = ratingOption.closest('label');\n            if (ratingOptionLabel) {\n                ratingOptionLabel.classList.remove('focus');\n            }\n        }\n    });\n\n    const btnSaveFeedback = document.getElementById('save-feedback');\n    btnSaveFeedback.addEventListener('click', () => {\n        saveResponses(false);\n    });\n\n    const btnSubmitFeedback = document.getElementById('submit-feedback');\n    btnSubmitFeedback.addEventListener('click', () => {\n        saveResponses(true);\n    });\n};\n\n/**\n * Handles the selection of a rated question's option.\n *\n * @param {HTMLElement} ratingOption The selected option for the given rated question.\n */\nconst handleOptionActivation = ratingOption => {\n    const optionGroup = ratingOption.closest(selectors.questionItem);\n    const itemId = optionGroup.getAttribute('data-itemid');\n    const options = optionGroup.querySelectorAll(selectors.ratingOption);\n\n    // Deselect the option that has been selected.\n    options.forEach(option => {\n        const optionLabel = option.nextElementSibling;\n        if (optionLabel.classList.contains('btn-success')) {\n            optionLabel.classList.remove('btn-success');\n            optionLabel.classList.add('btn-secondary');\n            option.checked = false;\n        }\n    });\n\n    // Mark selected option as selected.\n    const selectedLabel = ratingOption.nextElementSibling;\n    selectedLabel.classList.remove('btn-secondary');\n    selectedLabel.classList.remove('btn-info');\n    selectedLabel.classList.add('btn-success');\n    ratingOption.checked = true;\n\n    // Add this selected value to the array of responses.\n    responses[itemId] = ratingOption.value;\n};\n\n/**\n * Save the responses.\n *\n * @param {boolean} finalise\n */\nconst saveResponses = finalise => {\n    const comments = document.querySelectorAll(selectors.commentItem);\n    comments.forEach(comment => {\n        responses[comment.getAttribute('data-itemid')] = comment.value.trim();\n    });\n\n    const questionnaireTable = document.querySelector(selectors.questionnaireTable);\n    const toUser = parseInt(questionnaireTable.getAttribute('data-touserid'));\n    const toUserFullname = questionnaireTable.getAttribute('data-tousername');\n    const threesixtyId = parseInt(questionnaireTable.getAttribute('data-threesixtyid'));\n    const anonymous = parseInt(questionnaireTable.getAttribute('data-anonymous'));\n\n    if (anonymous && finalise) {\n        // Show confirmation dialogue to anonymise the feedback responses.\n        const messageStrings = [\n            {\n                key: 'finaliseanonymousfeedback',\n                component: 'mod_threesixo'\n            },\n            {\n                key: 'confirmfinaliseanonymousfeedback',\n                component: 'mod_threesixo',\n                param: {\n                    'name': toUserFullname\n                }\n            }\n        ];\n\n        getStrings(messageStrings, 'mod_threesixo').then(messages => {\n            return showConfirmationDialogue(messages[0], messages[1], threesixtyId, toUser, responses, finalise);\n        }).catch(Notification.exception);\n    } else {\n        // Just save the responses.\n        submitResponses(threesixtyId, toUser, responses, finalise);\n    }\n};\n\n/**\n * Send the responses to the server.\n *\n * @param {number} threesixtyId\n * @param {number} toUser\n * @param {array} responses\n * @param {boolean} finalise\n */\nconst submitResponses = (threesixtyId, toUser, responses, finalise) => {\n    var promises = Ajax.call([\n        {\n            methodname: 'mod_threesixo_save_responses',\n            args: {\n                threesixtyid: threesixtyId,\n                touserid: toUser,\n                responses: responses,\n                complete: finalise\n            }\n        }\n    ]);\n\n    let redirectUrl = null;\n    promises[0].then(response => {\n        if (response.result) {\n            redirectUrl = response.redirurl;\n            return getString('responsessaved', 'mod_threesixo');\n        }\n        return getString('errorresponsesavefailed', 'mod_threesixo');\n    }).then(message => {\n        return addToast(message, {});\n    }).then(() => {\n        if (finalise && redirectUrl) {\n            window.location = redirectUrl;\n        }\n        return true;\n    }).catch(Notification.exception);\n};\n\n/**\n * Renders the confirmation dialogue to submit and finalise the responses.\n *\n * @param {string} title\n * @param {string} confirmationMessage\n * @param {number} threesixtyId\n * @param {number} toUser\n * @param {Array} responses\n * @param {boolean} finalise\n */\nconst showConfirmationDialogue = async(title, confirmationMessage, threesixtyId, toUser, responses, finalise) => {\n    const confirmButtonText = await getString('finalise', 'mod_threesixo');\n    const confirmModal = await ModalFactory.create({\n        title: title,\n        body: confirmationMessage,\n        large: true,\n        type: ModalFactory.types.SAVE_CANCEL\n    });\n\n    confirmModal.setSaveButtonText(confirmButtonText);\n\n    // Display the dialogue.\n    confirmModal.show();\n\n    // On hide handler.\n    confirmModal.getRoot().on(ModalEvents.hidden, () => {\n        // Empty modal contents when it's hidden.\n        confirmModal.setBody('');\n    });\n\n    confirmModal.getRoot().on(ModalEvents.save, () => {\n        submitResponses(threesixtyId, toUser, responses, finalise);\n    });\n};\n"],"file":"questionnaire.min.js"}