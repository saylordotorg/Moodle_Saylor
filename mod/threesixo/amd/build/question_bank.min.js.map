{"version":3,"sources":["../src/question_bank.js"],"names":["define","$","templates","notification","ajax","str","ModalFactory","ModalEvents","selectedQuestionsOld","selectedQuestions","questions","threeSixtyId","questionTypes","questionBankDialogue","inputDialogue","getQuestionTypeOptions","selectedId","questionTypeOptions","key","hasOwnProperty","questionType","typeVal","typeName","selected","push","checkQuestions","i","question","indexOf","id","checked","renderInputDialogue","dialogueTitle","bodyTemplate","setBody","show","create","type","types","SAVE_CANCEL","title","body","large","done","modal","getRoot","on","shown","focus","hidden","save","val","trim","get_string","errorMsg","errorMessage","append","attr","html","fail","exception","qtype","threesixtyid","data","method","questionId","promises","call","methodname","args","refreshQuestionsList","displayInputDialogue","threesixtyId","questionid","render","displayQuestionBankDialogue","questionBankTemplate","modalRoot","changed","each","questionids","require","items","refreshItemList","response","pickerMode","compiledSource","bindItemActionEvents","handleDeletion","click","parseInt","getAttribute","is","index","splice","deleteButton","renderQuestionBank","context","questionBankInit","methodCalls","questiontypes","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD code for the Question Bank.\n *\n * The question bank dialogue contains all the questions that can be added to the 360 feedback activity.\n * It also serves as the interface where questions can be added, edited, or even removed permanently from the question bank.\n *\n * @module     mod_threesixo/question_bank\n * @class      question_bank\n * @copyright  2016 Jun Pataleta <jun@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/templates',\n    'core/notification',\n    'core/ajax',\n    'core/str',\n    'core/modal_factory',\n    'core/modal_events'\n], function($, templates, notification, ajax, str, ModalFactory, ModalEvents) {\n\n    // Private variables and functions.\n    var selectedQuestionsOld,\n        selectedQuestions,\n        questions = [],\n        threeSixtyId,\n        questionTypes,\n        questionBankDialogue,\n        inputDialogue;\n\n    /**\n     * Fetches option data for the question type selector.\n     *\n     * @param {number} selectedId The currently selected question type.\n     * @returns {Array}\n     */\n    function getQuestionTypeOptions(selectedId) {\n        var questionTypeOptions = [];\n        // Get question type options.\n        for (var key in questionTypes) {\n            if (!questionTypes.hasOwnProperty(key)) {\n                continue;\n            }\n            var questionType = {\n                typeVal: key,\n                typeName: questionTypes[key]\n            };\n\n            if (typeof selectedId !== 'undefined' && key == selectedId) {\n                questionType.selected = true;\n            }\n\n            questionTypeOptions.push(questionType);\n        }\n\n        return questionTypeOptions;\n    }\n\n    /**\n     * Loops over the list of questions and marks a question as checked if it belongs to the list of selected questions.\n     *\n     * @param {Object[]} questions The questions to be checked.\n     * @returns {Object[]} The list of checked questions.\n     */\n    function checkQuestions(questions) {\n        for (var i in questions) {\n            var question = questions[i];\n            if (selectedQuestions.indexOf(questions[i].id) !== -1) {\n                question.checked = true;\n            }\n        }\n        return questions;\n    }\n\n    /**\n     * Renders the question input dialogue.\n     *\n     * @param {String} dialogueTitle\n     * @param {Object} bodyTemplate\n     */\n    function renderInputDialogue(dialogueTitle, bodyTemplate) {\n        // Set dialog's body content.\n        if (inputDialogue) {\n            // Set dialogue body.\n            inputDialogue.setBody(bodyTemplate);\n            // Display the dialogue.\n            inputDialogue.show();\n\n        } else {\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: dialogueTitle,\n                body: bodyTemplate,\n                large: true\n            }).done(function(modal) {\n                inputDialogue = modal;\n\n                // Display the dialogue.\n                inputDialogue.show();\n\n                // On show handler.\n                modal.getRoot().on(ModalEvents.shown, function() {\n                    // Focus on the question text area.\n                    $(\"#question-input\").focus();\n                });\n\n                // On hide handler.\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    // Empty modal contents when it's hidden.\n                    modal.setBody('');\n                });\n\n                // On save handler.\n                modal.getRoot().on(ModalEvents.save, function() {\n                    var question = $(\"#question-input\").val().trim();\n                    if (!question) {\n                        str.get_string('requiredelement', 'form').done(function(errorMsg) {\n                            var errorMessage = $('<div/>').append(errorMsg)\n                                .attr('class', 'alert alert-error')\n                                .attr('role', 'alert');\n                            $('.error-container').html(errorMessage);\n                        }).fail(notification.exception);\n                        return;\n                    }\n                    var qtype = $(\"#question-type-select\").val();\n                    var threesixtyid = $(\"#threesixtyid\").val();\n\n                    var data = {\n                        question: question,\n                        type: qtype,\n                        threesixtyid: threesixtyid,\n                    };\n\n                    var method = 'mod_threesixo_add_question';\n                    var questionId = $(\"#question-id\").val();\n                    if (questionId) {\n                        method = 'mod_threesixo_update_question';\n                        data.id = questionId;\n                    }\n\n                    // Refresh the list of questions thru AJAX.\n                    var promises = ajax.call([\n                        {methodname: method, args: data}\n                    ]);\n                    promises[0].done(function() {\n                        refreshQuestionsList();\n                    }).fail(notification.exception);\n                });\n            });\n        }\n    }\n\n    /**\n     * Function that displays the input dialogue.\n     *\n     * @param {Number} threesixtyId The 360 instance ID.\n     * @param {Number} questionId The question ID.\n     */\n    var displayInputDialogue = function(threesixtyId, questionId) {\n        str.get_string('addanewquestion', 'mod_threesixo').done(function(title) {\n            var data = {\n                threesixtyid: threesixtyId\n            };\n\n            if (typeof questionId !== 'undefined') {\n                data.questionid = questionId;\n                for (var i in questions) {\n                    var question = questions[i];\n                    if (question.id === questionId) {\n                        data.question = question.question;\n                        data.type = question.type;\n                        break;\n                    }\n                }\n            }\n\n            data.questionTypes = getQuestionTypeOptions(data.type);\n            var body = templates.render('mod_threesixo/item_edit', data);\n            renderInputDialogue(title, body);\n        }).fail(notification.exception);\n    };\n\n    /**\n     * Displays the question bank dialogue.\n     * @param {string} title\n     * @param {Promise} questionBankTemplate\n     */\n    function displayQuestionBankDialogue(title, questionBankTemplate) {\n        // Set dialog's body content.\n        if (questionBankDialogue) {\n            // Set dialogue body.\n            questionBankDialogue.setBody(questionBankTemplate);\n            // Display the dialogue.\n            questionBankDialogue.show();\n\n        } else {\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: title,\n                body: questionBankTemplate,\n                large: true\n            }).done(function(modal) {\n                var modalRoot = modal.getRoot();\n\n                // On hide handler.\n                modalRoot.on(ModalEvents.hidden, function() {\n                    // Empty modal contents when it's hidden.\n                    modal.setBody('');\n                });\n\n                modalRoot.on(ModalEvents.save, function() {\n                    var changed = false;\n                    // Check if the new selected questions exist in the old selected questions.\n                    $.each(selectedQuestionsOld, function(key, questionId) {\n                        if (selectedQuestions.indexOf(questionId) === -1) {\n                            changed = true;\n                        }\n                    });\n                    // Conversely, if the newly selected items seem to have not changed,\n                    // check if the old selected questions exist in the new selected questions.\n                    if (!changed) {\n                        $.each(selectedQuestions, function(key, questionId) {\n                            if (selectedQuestionsOld.indexOf(questionId) === -1) {\n                                changed = true;\n                            }\n                        });\n                    }\n\n                    if (changed) {\n                        var data = {\n                            threesixtyid: threeSixtyId,\n                            questionids: selectedQuestions\n                        };\n\n                        // Refresh the list of questions thru AJAX.\n                        var promises = ajax.call([\n                            {methodname: 'mod_threesixo_set_items', args: data}\n                        ]);\n                        promises[0].done(function() {\n                            // Refresh the items list if the selection has changed.\n                            require(['mod_threesixo/edit_items'], function(items) {\n                                items.refreshItemList();\n                            });\n                        }).fail(notification.exception);\n                    }\n                });\n\n                questionBankDialogue = modal;\n\n                // Display the dialogue.\n                questionBankDialogue.show();\n            });\n        }\n    }\n\n    /**\n     * Refreshes the list of questions in the question bank.\n     */\n    function refreshQuestionsList() {\n        // Get list of questions thru AJAX.\n        var promises = ajax.call([\n            {\n                methodname: 'mod_threesixo_get_questions',\n                args: {}\n            }\n        ]);\n        promises[0].done(function(response) {\n            questions = response.questions;\n            var data = {\n                pickerMode: threeSixtyId,\n                questions: checkQuestions(questions)\n            };\n\n            templates.render('mod_threesixo/question_list', data)\n                .done(function(compiledSource) {\n                    $(\"#questionListWrapper\").html(compiledSource);\n                    bindItemActionEvents();\n                })\n                .fail(notification.exception);\n        }).fail(notification.exception);\n    }\n\n    /**\n     * Handles item deletion.\n     *\n     * @param {Number} questionId The question ID.\n     * @param {Number} threesixtyId The 360 instance ID.\n     */\n    function handleDeletion(questionId, threesixtyId) {\n        str.get_string('deletequestion', 'mod_threesixo').done(function(title) {\n            ModalFactory.create({\n                title: title,\n                body: str.get_string('confirmquestiondeletion', 'mod_threesixo'),\n                type: ModalFactory.types.SAVE_CANCEL\n            }).done(function(modal) {\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    // Get list of questions thru AJAX.\n                    var promises = ajax.call([\n                        {\n                            methodname: 'mod_threesixo_delete_question',\n                            args: {\n                                id: questionId,\n                                threesixtyid: threesixtyId,\n                            }\n                        }\n                    ]);\n                    promises[0].done(function() {\n                        refreshQuestionsList();\n                    }).fail(notification.exception);\n                });\n                modal.show();\n            });\n        });\n    }\n\n    /**\n     * Binds the event listeners to question items such as edit, delete, checking.\n     */\n    var bindItemActionEvents = function() {\n        $(\".question-checkbox\").click(function() {\n            var questionId = parseInt(this.getAttribute('data-questionid'));\n\n            if ($(this).is(':checked')) {\n                selectedQuestions.push(questionId);\n            } else {\n                var index = selectedQuestions.indexOf(questionId);\n                if (index > -1) {\n                    selectedQuestions.splice(index, 1);\n                }\n            }\n        });\n\n        $(\".edit-question-button\").click(function() {\n            var threesixtyId = $(this).data('threesixtyid');\n            var questionId = $(this).data('questionid');\n            displayInputDialogue(threesixtyId, questionId);\n        });\n\n        $(\".delete-question-button\").click(function() {\n            var deleteButton = $(this);\n            var threesixtyId = deleteButton.data('threesixtyid');\n            var questionId = deleteButton.data('questionid');\n            handleDeletion(questionId, threesixtyId);\n        });\n    };\n\n    /**\n     * Create the context and render the question  bank template.\n     */\n    function renderQuestionBank() {\n        // Template context.\n        var context = {pickerMode: threeSixtyId};\n\n        // Render the question list.\n        var promises = ajax.call([\n            {\n                methodname: 'mod_threesixo_get_questions',\n                args: {}\n            }\n        ]);\n        promises[0].done(function(response) {\n            questions = response.questions;\n            context.questions = checkQuestions(questions);\n\n            // Render the template and display the comment chooser dialog.\n            var questionBankTemplate = templates.render('mod_threesixo/question_bank', context);\n            str.get_string('labelpickfromquestionbank', 'mod_threesixo')\n                .done(function(title) {\n                    displayQuestionBankDialogue(title, questionBankTemplate);\n                })\n                .fail(notification.exception);\n        }).fail(notification.exception);\n    }\n\n    var questionBankInit = function(id) {\n        threeSixtyId = id;\n\n        var methodCalls = [\n            {\n                methodname: 'mod_threesixo_get_question_types',\n                args: {}\n            }\n        ];\n\n        if (threeSixtyId) {\n            // Get selected items for the 360-degree feedback.\n            methodCalls.push({\n                methodname: 'mod_threesixo_get_items',\n                args: {\n                    threesixtyid: threeSixtyId\n                }\n            });\n        }\n\n        // Get list of questions thru AJAX.\n        var promises = ajax.call(methodCalls);\n        promises[0].done(function(response) {\n            questionTypes = response.questiontypes;\n            if (threeSixtyId) {\n                selectedQuestions = [];\n                selectedQuestionsOld = [];\n                promises[1].done(function(response) {\n                    var items = response.items;\n                    for (var i in items) {\n                        if (!items.hasOwnProperty(i)) {\n                            continue;\n                        }\n                        selectedQuestions.push(items[i].questionid);\n                        // Store originally selected question IDs for comparison later.\n                        selectedQuestionsOld.push(items[i].questionid);\n                    }\n                    renderQuestionBank();\n                }).fail(notification.exception);\n            } else {\n                renderQuestionBank();\n            }\n        }).fail(notification.exception);\n    };\n\n    /** @alias module:mod_threesixo/question_bank */\n    return {\n        init: questionBankInit,\n        displayInputDialogue: displayInputDialogue,\n        bindItemActionEvents: bindItemActionEvents\n    };\n});\n"],"file":"question_bank.min.js"}