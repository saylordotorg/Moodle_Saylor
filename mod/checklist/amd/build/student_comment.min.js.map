{"version":3,"file":"student_comment.min.js","sources":["../src/student_comment.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Push student comments to checklist plugin via ajax.\n *\n * @module     mod_checklist/student_comments\n * @copyright  2021 Kristian Ringer <kristian.ringer@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str'], function($, Ajax, Notification, String) {\n    return {\n        init: function(cmid) {\n            const classPrefix = 'studentcommentid';\n            let comments = $('.studentcommentinput');\n\n            // Store the initial state of each comment. Only want to update server if comment changed on blur.\n            let currentComments = [];\n            for (let i = 0; i < comments.length; i += 1) {\n                let comment = comments[i];\n                currentComments[i] = comment.value;\n                comment.addEventListener('change', function(e) {\n                    const newComment = e.target.value.trim();\n                    // Update only if it changed, using the external function Ajax call.\n                    if (currentComments[i] !== newComment) {\n                        let classString = e.target.classList[0];\n                        // Get the item id from the end of the first class name, eg. studentcommentid13.\n                        let checklistitemid = classString.substr(classString.lastIndexOf(classPrefix) + classPrefix.length);\n\n                        let spinner = '#checklistspinnerstudentcomment' + checklistitemid;\n                        $(spinner).css('display', 'inline-block');\n\n                        let args = {\n                            'comment': {\n                                'commenttext': newComment,\n                                'checklistitemid': checklistitemid,\n                                'cmid': cmid,\n                            }\n                        };\n\n                        let request = {\n                            methodname: 'mod_checklist_update_student_comment',\n                            args: args,\n                        };\n                        Ajax.call([request])[0].done(function(data) {\n                            $(spinner).css('display', 'none');\n                            if (data === true) {\n                                currentComments[i] = newComment;\n                                comment.defaultValue = newComment;\n                            } else {\n                                Notification.addNotification({\n                                    message: String.get_string('update_student_comment_failed', 'mod_checklist'),\n                                    type: 'error',\n                                });\n                            }\n                        }).fail(Notification.exception);\n                    }\n                });\n            }\n        }\n    };\n});\n"],"names":["define","$","Ajax","Notification","String","init","cmid","comments","currentComments","i","length","comment","value","addEventListener","e","newComment","target","trim","classString","classList","checklistitemid","substr","lastIndexOf","spinner","css","request","methodname","args","call","done","data","defaultValue","addNotification","message","get_string","type","fail","exception"],"mappings":";;;;;;;AAsBAA,uCAAO,CAAC,SAAU,YAAa,oBAAqB,aAAa,SAASC,EAAGC,KAAMC,aAAcC,cACtF,CACHC,KAAM,SAASC,UAEPC,SAAWN,EAAE,wBAGbO,gBAAkB,OACjB,IAAIC,EAAI,EAAGA,EAAIF,SAASG,OAAQD,GAAK,EAAG,KACrCE,QAAUJ,SAASE,GACvBD,gBAAgBC,GAAKE,QAAQC,MAC7BD,QAAQE,iBAAiB,UAAU,SAASC,SAClCC,WAAaD,EAAEE,OAAOJ,MAAMK,UAE9BT,gBAAgBC,KAAOM,WAAY,KAC/BG,YAAcJ,EAAEE,OAAOG,UAAU,GAEjCC,gBAAkBF,YAAYG,OAAOH,YAAYI,YAd7C,oBAAA,mBAcoFZ,QAExFa,QAAU,kCAAoCH,gBAClDnB,EAAEsB,SAASC,IAAI,UAAW,oBAUtBC,QAAU,CACVC,WAAY,uCACZC,KAVO,SACI,aACQZ,2BACIK,qBACXd,QAQhBJ,KAAK0B,KAAK,CAACH,UAAU,GAAGI,MAAK,SAASC,MAClC7B,EAAEsB,SAASC,IAAI,UAAW,SACb,IAATM,MACAtB,gBAAgBC,GAAKM,WACrBJ,QAAQoB,aAAehB,YAEvBZ,aAAa6B,gBAAgB,CACzBC,QAAS7B,OAAO8B,WAAW,gCAAiC,iBAC5DC,KAAM,aAGfC,KAAKjC,aAAakC"}